// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: game.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "game.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb {

namespace {

const ::google::protobuf::Descriptor* ErrorMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ErrorMsg_reflection_ = NULL;
const ::google::protobuf::Descriptor* GameIssueReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GameIssueReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* GameIssueRes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GameIssueRes_reflection_ = NULL;
const ::google::protobuf::Descriptor* HallLoginReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HallLoginReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* HallLoginRes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HallLoginRes_reflection_ = NULL;
const ::google::protobuf::Descriptor* HallStartGameReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HallStartGameReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* HallStartGameRes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HallStartGameRes_reflection_ = NULL;
const ::google::protobuf::Descriptor* RCenterRegisterReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RCenterRegisterReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* RCenterRegisterRes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RCenterRegisterRes_reflection_ = NULL;
const ::google::protobuf::Descriptor* Vector_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Vector_reflection_ = NULL;
const ::google::protobuf::Descriptor* RoomPlayer_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RoomPlayer_reflection_ = NULL;
const ::google::protobuf::Descriptor* RoomPlayerState_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RoomPlayerState_reflection_ = NULL;
const ::google::protobuf::Descriptor* RoomPlayerSpell_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RoomPlayerSpell_reflection_ = NULL;
const ::google::protobuf::Descriptor* RoomItem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RoomItem_reflection_ = NULL;
const ::google::protobuf::Descriptor* RoomBuff_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RoomBuff_reflection_ = NULL;
const ::google::protobuf::Descriptor* RoomSnapShot_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RoomSnapShot_reflection_ = NULL;
const ::google::protobuf::Descriptor* RoomLoginReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RoomLoginReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* RoomLoginRes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RoomLoginRes_reflection_ = NULL;
const ::google::protobuf::Descriptor* RoomPlayerAdd_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RoomPlayerAdd_reflection_ = NULL;
const ::google::protobuf::Descriptor* RoomPlayerRemove_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RoomPlayerRemove_reflection_ = NULL;
const ::google::protobuf::Descriptor* Frame_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Frame_reflection_ = NULL;
const ::google::protobuf::Descriptor* RoomFrameNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RoomFrameNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* RoomLadderNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RoomLadderNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* RoomLadderNotify_Item_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RoomLadderNotify_Item_reflection_ = NULL;
const ::google::protobuf::Descriptor* RoomPlayerMoveReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RoomPlayerMoveReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* RoomPlayerDragRes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RoomPlayerDragRes_reflection_ = NULL;
const ::google::protobuf::Descriptor* RoomPlayerDragEndReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RoomPlayerDragEndReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* RoomPlayerReliveReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RoomPlayerReliveReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* RoomPlayerStopReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RoomPlayerStopReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* SpellStartReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SpellStartReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* SpellLevelUpReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SpellLevelUpReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* KillNotify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  KillNotify_reflection_ = NULL;
const ::google::protobuf::Descriptor* KillNotify_KillInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  KillNotify_KillInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* RoomPingReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RoomPingReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* RoomPingRes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RoomPingRes_reflection_ = NULL;
const ::google::protobuf::Descriptor* FrameMove_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FrameMove_reflection_ = NULL;
const ::google::protobuf::Descriptor* FrameMoveTest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FrameMoveTest_reflection_ = NULL;
const ::google::protobuf::Descriptor* FrameStop_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FrameStop_reflection_ = NULL;
const ::google::protobuf::Descriptor* FrameDeath_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FrameDeath_reflection_ = NULL;
const ::google::protobuf::Descriptor* FrameRelive_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FrameRelive_reflection_ = NULL;
const ::google::protobuf::Descriptor* FrameActionStart_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FrameActionStart_reflection_ = NULL;
const ::google::protobuf::Descriptor* FrameStartBuff_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FrameStartBuff_reflection_ = NULL;
const ::google::protobuf::Descriptor* FrameRemoveBuff_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FrameRemoveBuff_reflection_ = NULL;
const ::google::protobuf::Descriptor* FrameSpellState_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FrameSpellState_reflection_ = NULL;
const ::google::protobuf::Descriptor* FrameSpellLevel_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FrameSpellLevel_reflection_ = NULL;
const ::google::protobuf::Descriptor* FrameSceneItemCreate_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FrameSceneItemCreate_reflection_ = NULL;
const ::google::protobuf::Descriptor* FrameSceneItemRemove_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FrameSceneItemRemove_reflection_ = NULL;
const ::google::protobuf::Descriptor* FrameLevelUp_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FrameLevelUp_reflection_ = NULL;
const ::google::protobuf::Descriptor* FramePlayerBaseState_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FramePlayerBaseState_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* CMD_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* E_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* FRAME_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_game_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_game_2eproto() {
  protobuf_AddDesc_game_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "game.proto");
  GOOGLE_CHECK(file != NULL);
  ErrorMsg_descriptor_ = file->message_type(0);
  static const int ErrorMsg_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ErrorMsg, command_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ErrorMsg, error_code_),
  };
  ErrorMsg_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ErrorMsg_descriptor_,
      ErrorMsg::internal_default_instance(),
      ErrorMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ErrorMsg, _has_bits_),
      -1,
      -1,
      sizeof(ErrorMsg),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ErrorMsg, _internal_metadata_));
  GameIssueReq_descriptor_ = file->message_type(1);
  static const int GameIssueReq_offsets_[1] = {
  };
  GameIssueReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GameIssueReq_descriptor_,
      GameIssueReq::internal_default_instance(),
      GameIssueReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameIssueReq, _has_bits_),
      -1,
      -1,
      sizeof(GameIssueReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameIssueReq, _internal_metadata_));
  GameIssueRes_descriptor_ = file->message_type(2);
  static const int GameIssueRes_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameIssueRes, gameissue_),
  };
  GameIssueRes_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GameIssueRes_descriptor_,
      GameIssueRes::internal_default_instance(),
      GameIssueRes_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameIssueRes, _has_bits_),
      -1,
      -1,
      sizeof(GameIssueRes),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameIssueRes, _internal_metadata_));
  HallLoginReq_descriptor_ = file->message_type(3);
  static const int HallLoginReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HallLoginReq, token_),
  };
  HallLoginReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      HallLoginReq_descriptor_,
      HallLoginReq::internal_default_instance(),
      HallLoginReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HallLoginReq, _has_bits_),
      -1,
      -1,
      sizeof(HallLoginReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HallLoginReq, _internal_metadata_));
  HallLoginRes_descriptor_ = file->message_type(4);
  static const int HallLoginRes_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HallLoginRes, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HallLoginRes, name_),
  };
  HallLoginRes_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      HallLoginRes_descriptor_,
      HallLoginRes::internal_default_instance(),
      HallLoginRes_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HallLoginRes, _has_bits_),
      -1,
      -1,
      sizeof(HallLoginRes),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HallLoginRes, _internal_metadata_));
  HallStartGameReq_descriptor_ = file->message_type(5);
  static const int HallStartGameReq_offsets_[1] = {
  };
  HallStartGameReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      HallStartGameReq_descriptor_,
      HallStartGameReq::internal_default_instance(),
      HallStartGameReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HallStartGameReq, _has_bits_),
      -1,
      -1,
      sizeof(HallStartGameReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HallStartGameReq, _internal_metadata_));
  HallStartGameRes_descriptor_ = file->message_type(6);
  static const int HallStartGameRes_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HallStartGameRes, room_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HallStartGameRes, tcp_addr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HallStartGameRes, udp_addr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HallStartGameRes, ws_addr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HallStartGameRes, room_key_),
  };
  HallStartGameRes_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      HallStartGameRes_descriptor_,
      HallStartGameRes::internal_default_instance(),
      HallStartGameRes_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HallStartGameRes, _has_bits_),
      -1,
      -1,
      sizeof(HallStartGameRes),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HallStartGameRes, _internal_metadata_));
  RCenterRegisterReq_descriptor_ = file->message_type(7);
  static const int RCenterRegisterReq_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RCenterRegisterReq, tcp_addr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RCenterRegisterReq, udp_addr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RCenterRegisterReq, ws_addr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RCenterRegisterReq, key_),
  };
  RCenterRegisterReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RCenterRegisterReq_descriptor_,
      RCenterRegisterReq::internal_default_instance(),
      RCenterRegisterReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RCenterRegisterReq, _has_bits_),
      -1,
      -1,
      sizeof(RCenterRegisterReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RCenterRegisterReq, _internal_metadata_));
  RCenterRegisterRes_descriptor_ = file->message_type(8);
  static const int RCenterRegisterRes_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RCenterRegisterRes, id_),
  };
  RCenterRegisterRes_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RCenterRegisterRes_descriptor_,
      RCenterRegisterRes::internal_default_instance(),
      RCenterRegisterRes_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RCenterRegisterRes, _has_bits_),
      -1,
      -1,
      sizeof(RCenterRegisterRes),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RCenterRegisterRes, _internal_metadata_));
  Vector_descriptor_ = file->message_type(9);
  static const int Vector_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Vector, x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Vector, z_),
  };
  Vector_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Vector_descriptor_,
      Vector::internal_default_instance(),
      Vector_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Vector, _has_bits_),
      -1,
      -1,
      sizeof(Vector),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Vector, _internal_metadata_));
  RoomPlayer_descriptor_ = file->message_type(10);
  static const int RoomPlayer_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomPlayer, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomPlayer, nickname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomPlayer, state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomPlayer, job_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomPlayer, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomPlayer, pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomPlayer, dir_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomPlayer, score_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomPlayer, spells_),
  };
  RoomPlayer_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RoomPlayer_descriptor_,
      RoomPlayer::internal_default_instance(),
      RoomPlayer_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomPlayer, _has_bits_),
      -1,
      -1,
      sizeof(RoomPlayer),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomPlayer, _internal_metadata_));
  RoomPlayerState_descriptor_ = file->message_type(11);
  static const int RoomPlayerState_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomPlayerState, hp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomPlayerState, speed_),
  };
  RoomPlayerState_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RoomPlayerState_descriptor_,
      RoomPlayerState::internal_default_instance(),
      RoomPlayerState_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomPlayerState, _has_bits_),
      -1,
      -1,
      sizeof(RoomPlayerState),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomPlayerState, _internal_metadata_));
  RoomPlayerSpell_descriptor_ = file->message_type(12);
  static const int RoomPlayerSpell_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomPlayerSpell, xml_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomPlayerSpell, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomPlayerSpell, cd_),
  };
  RoomPlayerSpell_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RoomPlayerSpell_descriptor_,
      RoomPlayerSpell::internal_default_instance(),
      RoomPlayerSpell_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomPlayerSpell, _has_bits_),
      -1,
      -1,
      sizeof(RoomPlayerSpell),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomPlayerSpell, _internal_metadata_));
  RoomItem_descriptor_ = file->message_type(13);
  static const int RoomItem_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomItem, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomItem, xml_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomItem, pos_),
  };
  RoomItem_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RoomItem_descriptor_,
      RoomItem::internal_default_instance(),
      RoomItem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomItem, _has_bits_),
      -1,
      -1,
      sizeof(RoomItem),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomItem, _internal_metadata_));
  RoomBuff_descriptor_ = file->message_type(14);
  static const int RoomBuff_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomBuff, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomBuff, xml_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomBuff, player_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomBuff, pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomBuff, dir_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomBuff, remain_time_),
  };
  RoomBuff_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RoomBuff_descriptor_,
      RoomBuff::internal_default_instance(),
      RoomBuff_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomBuff, _has_bits_),
      -1,
      -1,
      sizeof(RoomBuff),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomBuff, _internal_metadata_));
  RoomSnapShot_descriptor_ = file->message_type(15);
  static const int RoomSnapShot_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomSnapShot, cur_frame_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomSnapShot, players_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomSnapShot, items_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomSnapShot, buffs_),
  };
  RoomSnapShot_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RoomSnapShot_descriptor_,
      RoomSnapShot::internal_default_instance(),
      RoomSnapShot_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomSnapShot, _has_bits_),
      -1,
      -1,
      sizeof(RoomSnapShot),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomSnapShot, _internal_metadata_));
  RoomLoginReq_descriptor_ = file->message_type(16);
  static const int RoomLoginReq_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomLoginReq, nickname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomLoginReq, room_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomLoginReq, room_key_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomLoginReq, job_),
  };
  RoomLoginReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RoomLoginReq_descriptor_,
      RoomLoginReq::internal_default_instance(),
      RoomLoginReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomLoginReq, _has_bits_),
      -1,
      -1,
      sizeof(RoomLoginReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomLoginReq, _internal_metadata_));
  RoomLoginRes_descriptor_ = file->message_type(17);
  static const int RoomLoginRes_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomLoginRes, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomLoginRes, snap_shot_),
  };
  RoomLoginRes_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RoomLoginRes_descriptor_,
      RoomLoginRes::internal_default_instance(),
      RoomLoginRes_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomLoginRes, _has_bits_),
      -1,
      -1,
      sizeof(RoomLoginRes),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomLoginRes, _internal_metadata_));
  RoomPlayerAdd_descriptor_ = file->message_type(18);
  static const int RoomPlayerAdd_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomPlayerAdd, player_),
  };
  RoomPlayerAdd_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RoomPlayerAdd_descriptor_,
      RoomPlayerAdd::internal_default_instance(),
      RoomPlayerAdd_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomPlayerAdd, _has_bits_),
      -1,
      -1,
      sizeof(RoomPlayerAdd),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomPlayerAdd, _internal_metadata_));
  RoomPlayerRemove_descriptor_ = file->message_type(19);
  static const int RoomPlayerRemove_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomPlayerRemove, id_),
  };
  RoomPlayerRemove_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RoomPlayerRemove_descriptor_,
      RoomPlayerRemove::internal_default_instance(),
      RoomPlayerRemove_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomPlayerRemove, _has_bits_),
      -1,
      -1,
      sizeof(RoomPlayerRemove),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomPlayerRemove, _internal_metadata_));
  Frame_descriptor_ = file->message_type(20);
  static const int Frame_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Frame, cmd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Frame, data_),
  };
  Frame_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Frame_descriptor_,
      Frame::internal_default_instance(),
      Frame_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Frame, _has_bits_),
      -1,
      -1,
      sizeof(Frame),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Frame, _internal_metadata_));
  RoomFrameNotify_descriptor_ = file->message_type(21);
  static const int RoomFrameNotify_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomFrameNotify, frame_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomFrameNotify, list_),
  };
  RoomFrameNotify_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RoomFrameNotify_descriptor_,
      RoomFrameNotify::internal_default_instance(),
      RoomFrameNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomFrameNotify, _has_bits_),
      -1,
      -1,
      sizeof(RoomFrameNotify),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomFrameNotify, _internal_metadata_));
  RoomLadderNotify_descriptor_ = file->message_type(22);
  static const int RoomLadderNotify_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomLadderNotify, items_),
  };
  RoomLadderNotify_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RoomLadderNotify_descriptor_,
      RoomLadderNotify::internal_default_instance(),
      RoomLadderNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomLadderNotify, _has_bits_),
      -1,
      -1,
      sizeof(RoomLadderNotify),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomLadderNotify, _internal_metadata_));
  RoomLadderNotify_Item_descriptor_ = RoomLadderNotify_descriptor_->nested_type(0);
  static const int RoomLadderNotify_Item_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomLadderNotify_Item, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomLadderNotify_Item, score_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomLadderNotify_Item, kill_times_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomLadderNotify_Item, dead_times_),
  };
  RoomLadderNotify_Item_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RoomLadderNotify_Item_descriptor_,
      RoomLadderNotify_Item::internal_default_instance(),
      RoomLadderNotify_Item_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomLadderNotify_Item, _has_bits_),
      -1,
      -1,
      sizeof(RoomLadderNotify_Item),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomLadderNotify_Item, _internal_metadata_));
  RoomPlayerMoveReq_descriptor_ = file->message_type(23);
  static const int RoomPlayerMoveReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomPlayerMoveReq, pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomPlayerMoveReq, dir_),
  };
  RoomPlayerMoveReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RoomPlayerMoveReq_descriptor_,
      RoomPlayerMoveReq::internal_default_instance(),
      RoomPlayerMoveReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomPlayerMoveReq, _has_bits_),
      -1,
      -1,
      sizeof(RoomPlayerMoveReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomPlayerMoveReq, _internal_metadata_));
  RoomPlayerDragRes_descriptor_ = file->message_type(24);
  static const int RoomPlayerDragRes_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomPlayerDragRes, pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomPlayerDragRes, dir_),
  };
  RoomPlayerDragRes_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RoomPlayerDragRes_descriptor_,
      RoomPlayerDragRes::internal_default_instance(),
      RoomPlayerDragRes_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomPlayerDragRes, _has_bits_),
      -1,
      -1,
      sizeof(RoomPlayerDragRes),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomPlayerDragRes, _internal_metadata_));
  RoomPlayerDragEndReq_descriptor_ = file->message_type(25);
  static const int RoomPlayerDragEndReq_offsets_[1] = {
  };
  RoomPlayerDragEndReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RoomPlayerDragEndReq_descriptor_,
      RoomPlayerDragEndReq::internal_default_instance(),
      RoomPlayerDragEndReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomPlayerDragEndReq, _has_bits_),
      -1,
      -1,
      sizeof(RoomPlayerDragEndReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomPlayerDragEndReq, _internal_metadata_));
  RoomPlayerReliveReq_descriptor_ = file->message_type(26);
  static const int RoomPlayerReliveReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomPlayerReliveReq, job_),
  };
  RoomPlayerReliveReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RoomPlayerReliveReq_descriptor_,
      RoomPlayerReliveReq::internal_default_instance(),
      RoomPlayerReliveReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomPlayerReliveReq, _has_bits_),
      -1,
      -1,
      sizeof(RoomPlayerReliveReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomPlayerReliveReq, _internal_metadata_));
  RoomPlayerStopReq_descriptor_ = file->message_type(27);
  static const int RoomPlayerStopReq_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomPlayerStopReq, pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomPlayerStopReq, dir_),
  };
  RoomPlayerStopReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RoomPlayerStopReq_descriptor_,
      RoomPlayerStopReq::internal_default_instance(),
      RoomPlayerStopReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomPlayerStopReq, _has_bits_),
      -1,
      -1,
      sizeof(RoomPlayerStopReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomPlayerStopReq, _internal_metadata_));
  SpellStartReq_descriptor_ = file->message_type(28);
  static const int SpellStartReq_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpellStartReq, xml_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpellStartReq, pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpellStartReq, dir_),
  };
  SpellStartReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SpellStartReq_descriptor_,
      SpellStartReq::internal_default_instance(),
      SpellStartReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpellStartReq, _has_bits_),
      -1,
      -1,
      sizeof(SpellStartReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpellStartReq, _internal_metadata_));
  SpellLevelUpReq_descriptor_ = file->message_type(29);
  static const int SpellLevelUpReq_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpellLevelUpReq, xml_id_),
  };
  SpellLevelUpReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SpellLevelUpReq_descriptor_,
      SpellLevelUpReq::internal_default_instance(),
      SpellLevelUpReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpellLevelUpReq, _has_bits_),
      -1,
      -1,
      sizeof(SpellLevelUpReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpellLevelUpReq, _internal_metadata_));
  KillNotify_descriptor_ = file->message_type(30);
  static const int KillNotify_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KillNotify, player_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KillNotify, killed_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KillNotify, info_),
  };
  KillNotify_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      KillNotify_descriptor_,
      KillNotify::internal_default_instance(),
      KillNotify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KillNotify, _has_bits_),
      -1,
      -1,
      sizeof(KillNotify),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KillNotify, _internal_metadata_));
  KillNotify_KillInfo_descriptor_ = KillNotify_descriptor_->nested_type(0);
  static const int KillNotify_KillInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KillNotify_KillInfo, catalog_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KillNotify_KillInfo, number_),
  };
  KillNotify_KillInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      KillNotify_KillInfo_descriptor_,
      KillNotify_KillInfo::internal_default_instance(),
      KillNotify_KillInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KillNotify_KillInfo, _has_bits_),
      -1,
      -1,
      sizeof(KillNotify_KillInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KillNotify_KillInfo, _internal_metadata_));
  RoomPingReq_descriptor_ = file->message_type(31);
  static const int RoomPingReq_offsets_[1] = {
  };
  RoomPingReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RoomPingReq_descriptor_,
      RoomPingReq::internal_default_instance(),
      RoomPingReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomPingReq, _has_bits_),
      -1,
      -1,
      sizeof(RoomPingReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomPingReq, _internal_metadata_));
  RoomPingRes_descriptor_ = file->message_type(32);
  static const int RoomPingRes_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomPingRes, cur_frame_),
  };
  RoomPingRes_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RoomPingRes_descriptor_,
      RoomPingRes::internal_default_instance(),
      RoomPingRes_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomPingRes, _has_bits_),
      -1,
      -1,
      sizeof(RoomPingRes),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomPingRes, _internal_metadata_));
  FrameMove_descriptor_ = file->message_type(33);
  static const int FrameMove_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FrameMove, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FrameMove, pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FrameMove, dir_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FrameMove, cur_pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FrameMove, cur_dir_),
  };
  FrameMove_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      FrameMove_descriptor_,
      FrameMove::internal_default_instance(),
      FrameMove_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FrameMove, _has_bits_),
      -1,
      -1,
      sizeof(FrameMove),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FrameMove, _internal_metadata_));
  FrameMoveTest_descriptor_ = file->message_type(34);
  static const int FrameMoveTest_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FrameMoveTest, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FrameMoveTest, pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FrameMoveTest, dir_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FrameMoveTest, pre_pos_),
  };
  FrameMoveTest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      FrameMoveTest_descriptor_,
      FrameMoveTest::internal_default_instance(),
      FrameMoveTest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FrameMoveTest, _has_bits_),
      -1,
      -1,
      sizeof(FrameMoveTest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FrameMoveTest, _internal_metadata_));
  FrameStop_descriptor_ = file->message_type(35);
  static const int FrameStop_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FrameStop, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FrameStop, pos_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FrameStop, dir_),
  };
  FrameStop_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      FrameStop_descriptor_,
      FrameStop::internal_default_instance(),
      FrameStop_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FrameStop, _has_bits_),
      -1,
      -1,
      sizeof(FrameStop),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FrameStop, _internal_metadata_));
  FrameDeath_descriptor_ = file->message_type(36);
  static const int FrameDeath_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FrameDeath, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FrameDeath, murderer_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FrameDeath, murderer_cur_socre_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FrameDeath, owner_cur_socre_),
  };
  FrameDeath_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      FrameDeath_descriptor_,
      FrameDeath::internal_default_instance(),
      FrameDeath_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FrameDeath, _has_bits_),
      -1,
      -1,
      sizeof(FrameDeath),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FrameDeath, _internal_metadata_));
  FrameRelive_descriptor_ = file->message_type(37);
  static const int FrameRelive_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FrameRelive, player_),
  };
  FrameRelive_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      FrameRelive_descriptor_,
      FrameRelive::internal_default_instance(),
      FrameRelive_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FrameRelive, _has_bits_),
      -1,
      -1,
      sizeof(FrameRelive),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FrameRelive, _internal_metadata_));
  FrameActionStart_descriptor_ = file->message_type(38);
  static const int FrameActionStart_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FrameActionStart, player_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FrameActionStart, spell_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FrameActionStart, action_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FrameActionStart, left_cd_),
  };
  FrameActionStart_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      FrameActionStart_descriptor_,
      FrameActionStart::internal_default_instance(),
      FrameActionStart_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FrameActionStart, _has_bits_),
      -1,
      -1,
      sizeof(FrameActionStart),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FrameActionStart, _internal_metadata_));
  FrameStartBuff_descriptor_ = file->message_type(39);
  static const int FrameStartBuff_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FrameStartBuff, buff_),
  };
  FrameStartBuff_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      FrameStartBuff_descriptor_,
      FrameStartBuff::internal_default_instance(),
      FrameStartBuff_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FrameStartBuff, _has_bits_),
      -1,
      -1,
      sizeof(FrameStartBuff),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FrameStartBuff, _internal_metadata_));
  FrameRemoveBuff_descriptor_ = file->message_type(40);
  static const int FrameRemoveBuff_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FrameRemoveBuff, player_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FrameRemoveBuff, buff_id_),
  };
  FrameRemoveBuff_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      FrameRemoveBuff_descriptor_,
      FrameRemoveBuff::internal_default_instance(),
      FrameRemoveBuff_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FrameRemoveBuff, _has_bits_),
      -1,
      -1,
      sizeof(FrameRemoveBuff),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FrameRemoveBuff, _internal_metadata_));
  FrameSpellState_descriptor_ = file->message_type(41);
  static const int FrameSpellState_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FrameSpellState, player_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FrameSpellState, action_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FrameSpellState, state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FrameSpellState, cur_gen_id_),
  };
  FrameSpellState_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      FrameSpellState_descriptor_,
      FrameSpellState::internal_default_instance(),
      FrameSpellState_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FrameSpellState, _has_bits_),
      -1,
      -1,
      sizeof(FrameSpellState),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FrameSpellState, _internal_metadata_));
  FrameSpellLevel_descriptor_ = file->message_type(42);
  static const int FrameSpellLevel_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FrameSpellLevel, player_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FrameSpellLevel, spells_),
  };
  FrameSpellLevel_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      FrameSpellLevel_descriptor_,
      FrameSpellLevel::internal_default_instance(),
      FrameSpellLevel_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FrameSpellLevel, _has_bits_),
      -1,
      -1,
      sizeof(FrameSpellLevel),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FrameSpellLevel, _internal_metadata_));
  FrameSceneItemCreate_descriptor_ = file->message_type(43);
  static const int FrameSceneItemCreate_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FrameSceneItemCreate, item_),
  };
  FrameSceneItemCreate_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      FrameSceneItemCreate_descriptor_,
      FrameSceneItemCreate::internal_default_instance(),
      FrameSceneItemCreate_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FrameSceneItemCreate, _has_bits_),
      -1,
      -1,
      sizeof(FrameSceneItemCreate),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FrameSceneItemCreate, _internal_metadata_));
  FrameSceneItemRemove_descriptor_ = file->message_type(44);
  static const int FrameSceneItemRemove_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FrameSceneItemRemove, id_),
  };
  FrameSceneItemRemove_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      FrameSceneItemRemove_descriptor_,
      FrameSceneItemRemove::internal_default_instance(),
      FrameSceneItemRemove_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FrameSceneItemRemove, _has_bits_),
      -1,
      -1,
      sizeof(FrameSceneItemRemove),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FrameSceneItemRemove, _internal_metadata_));
  FrameLevelUp_descriptor_ = file->message_type(45);
  static const int FrameLevelUp_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FrameLevelUp, player_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FrameLevelUp, player_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FrameLevelUp, player_spell_point_),
  };
  FrameLevelUp_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      FrameLevelUp_descriptor_,
      FrameLevelUp::internal_default_instance(),
      FrameLevelUp_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FrameLevelUp, _has_bits_),
      -1,
      -1,
      sizeof(FrameLevelUp),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FrameLevelUp, _internal_metadata_));
  FramePlayerBaseState_descriptor_ = file->message_type(46);
  static const int FramePlayerBaseState_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FramePlayerBaseState, player_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FramePlayerBaseState, state_),
  };
  FramePlayerBaseState_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      FramePlayerBaseState_descriptor_,
      FramePlayerBaseState::internal_default_instance(),
      FramePlayerBaseState_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FramePlayerBaseState, _has_bits_),
      -1,
      -1,
      sizeof(FramePlayerBaseState),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FramePlayerBaseState, _internal_metadata_));
  CMD_descriptor_ = file->enum_type(0);
  E_descriptor_ = file->enum_type(1);
  FRAME_descriptor_ = file->enum_type(2);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_game_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ErrorMsg_descriptor_, ErrorMsg::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GameIssueReq_descriptor_, GameIssueReq::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GameIssueRes_descriptor_, GameIssueRes::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      HallLoginReq_descriptor_, HallLoginReq::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      HallLoginRes_descriptor_, HallLoginRes::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      HallStartGameReq_descriptor_, HallStartGameReq::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      HallStartGameRes_descriptor_, HallStartGameRes::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RCenterRegisterReq_descriptor_, RCenterRegisterReq::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RCenterRegisterRes_descriptor_, RCenterRegisterRes::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Vector_descriptor_, Vector::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RoomPlayer_descriptor_, RoomPlayer::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RoomPlayerState_descriptor_, RoomPlayerState::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RoomPlayerSpell_descriptor_, RoomPlayerSpell::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RoomItem_descriptor_, RoomItem::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RoomBuff_descriptor_, RoomBuff::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RoomSnapShot_descriptor_, RoomSnapShot::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RoomLoginReq_descriptor_, RoomLoginReq::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RoomLoginRes_descriptor_, RoomLoginRes::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RoomPlayerAdd_descriptor_, RoomPlayerAdd::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RoomPlayerRemove_descriptor_, RoomPlayerRemove::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Frame_descriptor_, Frame::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RoomFrameNotify_descriptor_, RoomFrameNotify::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RoomLadderNotify_descriptor_, RoomLadderNotify::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RoomLadderNotify_Item_descriptor_, RoomLadderNotify_Item::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RoomPlayerMoveReq_descriptor_, RoomPlayerMoveReq::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RoomPlayerDragRes_descriptor_, RoomPlayerDragRes::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RoomPlayerDragEndReq_descriptor_, RoomPlayerDragEndReq::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RoomPlayerReliveReq_descriptor_, RoomPlayerReliveReq::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RoomPlayerStopReq_descriptor_, RoomPlayerStopReq::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SpellStartReq_descriptor_, SpellStartReq::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SpellLevelUpReq_descriptor_, SpellLevelUpReq::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      KillNotify_descriptor_, KillNotify::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      KillNotify_KillInfo_descriptor_, KillNotify_KillInfo::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RoomPingReq_descriptor_, RoomPingReq::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RoomPingRes_descriptor_, RoomPingRes::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      FrameMove_descriptor_, FrameMove::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      FrameMoveTest_descriptor_, FrameMoveTest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      FrameStop_descriptor_, FrameStop::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      FrameDeath_descriptor_, FrameDeath::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      FrameRelive_descriptor_, FrameRelive::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      FrameActionStart_descriptor_, FrameActionStart::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      FrameStartBuff_descriptor_, FrameStartBuff::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      FrameRemoveBuff_descriptor_, FrameRemoveBuff::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      FrameSpellState_descriptor_, FrameSpellState::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      FrameSpellLevel_descriptor_, FrameSpellLevel::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      FrameSceneItemCreate_descriptor_, FrameSceneItemCreate::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      FrameSceneItemRemove_descriptor_, FrameSceneItemRemove::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      FrameLevelUp_descriptor_, FrameLevelUp::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      FramePlayerBaseState_descriptor_, FramePlayerBaseState::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_game_2eproto() {
  ErrorMsg_default_instance_.Shutdown();
  delete ErrorMsg_reflection_;
  GameIssueReq_default_instance_.Shutdown();
  delete GameIssueReq_reflection_;
  GameIssueRes_default_instance_.Shutdown();
  delete GameIssueRes_reflection_;
  HallLoginReq_default_instance_.Shutdown();
  delete HallLoginReq_reflection_;
  HallLoginRes_default_instance_.Shutdown();
  delete HallLoginRes_reflection_;
  HallStartGameReq_default_instance_.Shutdown();
  delete HallStartGameReq_reflection_;
  HallStartGameRes_default_instance_.Shutdown();
  delete HallStartGameRes_reflection_;
  RCenterRegisterReq_default_instance_.Shutdown();
  delete RCenterRegisterReq_reflection_;
  RCenterRegisterRes_default_instance_.Shutdown();
  delete RCenterRegisterRes_reflection_;
  Vector_default_instance_.Shutdown();
  delete Vector_reflection_;
  RoomPlayer_default_instance_.Shutdown();
  delete RoomPlayer_reflection_;
  RoomPlayerState_default_instance_.Shutdown();
  delete RoomPlayerState_reflection_;
  RoomPlayerSpell_default_instance_.Shutdown();
  delete RoomPlayerSpell_reflection_;
  RoomItem_default_instance_.Shutdown();
  delete RoomItem_reflection_;
  RoomBuff_default_instance_.Shutdown();
  delete RoomBuff_reflection_;
  RoomSnapShot_default_instance_.Shutdown();
  delete RoomSnapShot_reflection_;
  RoomLoginReq_default_instance_.Shutdown();
  delete RoomLoginReq_reflection_;
  RoomLoginRes_default_instance_.Shutdown();
  delete RoomLoginRes_reflection_;
  RoomPlayerAdd_default_instance_.Shutdown();
  delete RoomPlayerAdd_reflection_;
  RoomPlayerRemove_default_instance_.Shutdown();
  delete RoomPlayerRemove_reflection_;
  Frame_default_instance_.Shutdown();
  delete Frame_reflection_;
  RoomFrameNotify_default_instance_.Shutdown();
  delete RoomFrameNotify_reflection_;
  RoomLadderNotify_default_instance_.Shutdown();
  delete RoomLadderNotify_reflection_;
  RoomLadderNotify_Item_default_instance_.Shutdown();
  delete RoomLadderNotify_Item_reflection_;
  RoomPlayerMoveReq_default_instance_.Shutdown();
  delete RoomPlayerMoveReq_reflection_;
  RoomPlayerDragRes_default_instance_.Shutdown();
  delete RoomPlayerDragRes_reflection_;
  RoomPlayerDragEndReq_default_instance_.Shutdown();
  delete RoomPlayerDragEndReq_reflection_;
  RoomPlayerReliveReq_default_instance_.Shutdown();
  delete RoomPlayerReliveReq_reflection_;
  RoomPlayerStopReq_default_instance_.Shutdown();
  delete RoomPlayerStopReq_reflection_;
  SpellStartReq_default_instance_.Shutdown();
  delete SpellStartReq_reflection_;
  SpellLevelUpReq_default_instance_.Shutdown();
  delete SpellLevelUpReq_reflection_;
  KillNotify_default_instance_.Shutdown();
  delete KillNotify_reflection_;
  KillNotify_KillInfo_default_instance_.Shutdown();
  delete KillNotify_KillInfo_reflection_;
  RoomPingReq_default_instance_.Shutdown();
  delete RoomPingReq_reflection_;
  RoomPingRes_default_instance_.Shutdown();
  delete RoomPingRes_reflection_;
  FrameMove_default_instance_.Shutdown();
  delete FrameMove_reflection_;
  FrameMoveTest_default_instance_.Shutdown();
  delete FrameMoveTest_reflection_;
  FrameStop_default_instance_.Shutdown();
  delete FrameStop_reflection_;
  FrameDeath_default_instance_.Shutdown();
  delete FrameDeath_reflection_;
  FrameRelive_default_instance_.Shutdown();
  delete FrameRelive_reflection_;
  FrameActionStart_default_instance_.Shutdown();
  delete FrameActionStart_reflection_;
  FrameStartBuff_default_instance_.Shutdown();
  delete FrameStartBuff_reflection_;
  FrameRemoveBuff_default_instance_.Shutdown();
  delete FrameRemoveBuff_reflection_;
  FrameSpellState_default_instance_.Shutdown();
  delete FrameSpellState_reflection_;
  FrameSpellLevel_default_instance_.Shutdown();
  delete FrameSpellLevel_reflection_;
  FrameSceneItemCreate_default_instance_.Shutdown();
  delete FrameSceneItemCreate_reflection_;
  FrameSceneItemRemove_default_instance_.Shutdown();
  delete FrameSceneItemRemove_reflection_;
  FrameLevelUp_default_instance_.Shutdown();
  delete FrameLevelUp_reflection_;
  FramePlayerBaseState_default_instance_.Shutdown();
  delete FramePlayerBaseState_reflection_;
}

void protobuf_InitDefaults_game_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ErrorMsg_default_instance_.DefaultConstruct();
  GameIssueReq_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  GameIssueRes_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  HallLoginReq_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  HallLoginRes_default_instance_.DefaultConstruct();
  HallStartGameReq_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  HallStartGameRes_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  RCenterRegisterReq_default_instance_.DefaultConstruct();
  RCenterRegisterRes_default_instance_.DefaultConstruct();
  Vector_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  RoomPlayer_default_instance_.DefaultConstruct();
  RoomPlayerState_default_instance_.DefaultConstruct();
  RoomPlayerSpell_default_instance_.DefaultConstruct();
  RoomItem_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  RoomBuff_default_instance_.DefaultConstruct();
  RoomSnapShot_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  RoomLoginReq_default_instance_.DefaultConstruct();
  RoomLoginRes_default_instance_.DefaultConstruct();
  RoomPlayerAdd_default_instance_.DefaultConstruct();
  RoomPlayerRemove_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  Frame_default_instance_.DefaultConstruct();
  RoomFrameNotify_default_instance_.DefaultConstruct();
  RoomLadderNotify_default_instance_.DefaultConstruct();
  RoomLadderNotify_Item_default_instance_.DefaultConstruct();
  RoomPlayerMoveReq_default_instance_.DefaultConstruct();
  RoomPlayerDragRes_default_instance_.DefaultConstruct();
  RoomPlayerDragEndReq_default_instance_.DefaultConstruct();
  RoomPlayerReliveReq_default_instance_.DefaultConstruct();
  RoomPlayerStopReq_default_instance_.DefaultConstruct();
  SpellStartReq_default_instance_.DefaultConstruct();
  SpellLevelUpReq_default_instance_.DefaultConstruct();
  KillNotify_default_instance_.DefaultConstruct();
  KillNotify_KillInfo_default_instance_.DefaultConstruct();
  RoomPingReq_default_instance_.DefaultConstruct();
  RoomPingRes_default_instance_.DefaultConstruct();
  FrameMove_default_instance_.DefaultConstruct();
  FrameMoveTest_default_instance_.DefaultConstruct();
  FrameStop_default_instance_.DefaultConstruct();
  FrameDeath_default_instance_.DefaultConstruct();
  FrameRelive_default_instance_.DefaultConstruct();
  FrameActionStart_default_instance_.DefaultConstruct();
  FrameStartBuff_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  FrameRemoveBuff_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  FrameSpellState_default_instance_.DefaultConstruct();
  FrameSpellLevel_default_instance_.DefaultConstruct();
  FrameSceneItemCreate_default_instance_.DefaultConstruct();
  FrameSceneItemRemove_default_instance_.DefaultConstruct();
  FrameLevelUp_default_instance_.DefaultConstruct();
  FramePlayerBaseState_default_instance_.DefaultConstruct();
  ErrorMsg_default_instance_.get_mutable()->InitAsDefaultInstance();
  GameIssueReq_default_instance_.get_mutable()->InitAsDefaultInstance();
  GameIssueRes_default_instance_.get_mutable()->InitAsDefaultInstance();
  HallLoginReq_default_instance_.get_mutable()->InitAsDefaultInstance();
  HallLoginRes_default_instance_.get_mutable()->InitAsDefaultInstance();
  HallStartGameReq_default_instance_.get_mutable()->InitAsDefaultInstance();
  HallStartGameRes_default_instance_.get_mutable()->InitAsDefaultInstance();
  RCenterRegisterReq_default_instance_.get_mutable()->InitAsDefaultInstance();
  RCenterRegisterRes_default_instance_.get_mutable()->InitAsDefaultInstance();
  Vector_default_instance_.get_mutable()->InitAsDefaultInstance();
  RoomPlayer_default_instance_.get_mutable()->InitAsDefaultInstance();
  RoomPlayerState_default_instance_.get_mutable()->InitAsDefaultInstance();
  RoomPlayerSpell_default_instance_.get_mutable()->InitAsDefaultInstance();
  RoomItem_default_instance_.get_mutable()->InitAsDefaultInstance();
  RoomBuff_default_instance_.get_mutable()->InitAsDefaultInstance();
  RoomSnapShot_default_instance_.get_mutable()->InitAsDefaultInstance();
  RoomLoginReq_default_instance_.get_mutable()->InitAsDefaultInstance();
  RoomLoginRes_default_instance_.get_mutable()->InitAsDefaultInstance();
  RoomPlayerAdd_default_instance_.get_mutable()->InitAsDefaultInstance();
  RoomPlayerRemove_default_instance_.get_mutable()->InitAsDefaultInstance();
  Frame_default_instance_.get_mutable()->InitAsDefaultInstance();
  RoomFrameNotify_default_instance_.get_mutable()->InitAsDefaultInstance();
  RoomLadderNotify_default_instance_.get_mutable()->InitAsDefaultInstance();
  RoomLadderNotify_Item_default_instance_.get_mutable()->InitAsDefaultInstance();
  RoomPlayerMoveReq_default_instance_.get_mutable()->InitAsDefaultInstance();
  RoomPlayerDragRes_default_instance_.get_mutable()->InitAsDefaultInstance();
  RoomPlayerDragEndReq_default_instance_.get_mutable()->InitAsDefaultInstance();
  RoomPlayerReliveReq_default_instance_.get_mutable()->InitAsDefaultInstance();
  RoomPlayerStopReq_default_instance_.get_mutable()->InitAsDefaultInstance();
  SpellStartReq_default_instance_.get_mutable()->InitAsDefaultInstance();
  SpellLevelUpReq_default_instance_.get_mutable()->InitAsDefaultInstance();
  KillNotify_default_instance_.get_mutable()->InitAsDefaultInstance();
  KillNotify_KillInfo_default_instance_.get_mutable()->InitAsDefaultInstance();
  RoomPingReq_default_instance_.get_mutable()->InitAsDefaultInstance();
  RoomPingRes_default_instance_.get_mutable()->InitAsDefaultInstance();
  FrameMove_default_instance_.get_mutable()->InitAsDefaultInstance();
  FrameMoveTest_default_instance_.get_mutable()->InitAsDefaultInstance();
  FrameStop_default_instance_.get_mutable()->InitAsDefaultInstance();
  FrameDeath_default_instance_.get_mutable()->InitAsDefaultInstance();
  FrameRelive_default_instance_.get_mutable()->InitAsDefaultInstance();
  FrameActionStart_default_instance_.get_mutable()->InitAsDefaultInstance();
  FrameStartBuff_default_instance_.get_mutable()->InitAsDefaultInstance();
  FrameRemoveBuff_default_instance_.get_mutable()->InitAsDefaultInstance();
  FrameSpellState_default_instance_.get_mutable()->InitAsDefaultInstance();
  FrameSpellLevel_default_instance_.get_mutable()->InitAsDefaultInstance();
  FrameSceneItemCreate_default_instance_.get_mutable()->InitAsDefaultInstance();
  FrameSceneItemRemove_default_instance_.get_mutable()->InitAsDefaultInstance();
  FrameLevelUp_default_instance_.get_mutable()->InitAsDefaultInstance();
  FramePlayerBaseState_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_game_2eproto_once_);
void protobuf_InitDefaults_game_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_game_2eproto_once_,
                 &protobuf_InitDefaults_game_2eproto_impl);
}
void protobuf_AddDesc_game_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_game_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\ngame.proto\022\002pb\"/\n\010ErrorMsg\022\017\n\007command\030"
    "\001 \002(\r\022\022\n\nerror_code\030\002 \002(\r\"\016\n\014GameIssueRe"
    "q\"!\n\014GameIssueRes\022\021\n\tGameIssue\030\001 \002(\t\"\035\n\014"
    "HallLoginReq\022\r\n\005token\030\001 \002(\t\"(\n\014HallLogin"
    "Res\022\n\n\002id\030\001 \002(\r\022\014\n\004name\030\002 \002(\t\"\022\n\020HallSta"
    "rtGameReq\"j\n\020HallStartGameRes\022\017\n\007room_id"
    "\030\001 \002(\r\022\020\n\010tcp_addr\030\002 \002(\t\022\020\n\010udp_addr\030\003 \002"
    "(\t\022\017\n\007ws_addr\030\004 \002(\t\022\020\n\010room_key\030\005 \002(\t\"V\n"
    "\022RCenterRegisterReq\022\020\n\010tcp_addr\030\001 \002(\t\022\020\n"
    "\010udp_addr\030\002 \002(\t\022\017\n\007ws_addr\030\003 \002(\t\022\013\n\003key\030"
    "\004 \002(\t\" \n\022RCenterRegisterRes\022\n\n\002id\030\001 \002(\r\""
    "\036\n\006Vector\022\t\n\001x\030\001 \002(\021\022\t\n\001z\030\002 \002(\021\"\320\001\n\nRoom"
    "Player\022\n\n\002id\030\001 \002(\r\022\020\n\010nickname\030\002 \002(\t\022\"\n\005"
    "state\030\003 \002(\0132\023.pb.RoomPlayerState\022\013\n\003job\030"
    "\004 \002(\r\022\r\n\005level\030\005 \002(\r\022\027\n\003pos\030\006 \002(\0132\n.pb.V"
    "ector\022\027\n\003dir\030\007 \002(\0132\n.pb.Vector\022\r\n\005score\030"
    "\010 \002(\r\022#\n\006spells\030\t \003(\0132\023.pb.RoomPlayerSpe"
    "ll\",\n\017RoomPlayerState\022\n\n\002hp\030\001 \002(\r\022\r\n\005spe"
    "ed\030\002 \002(\r\"<\n\017RoomPlayerSpell\022\016\n\006xml_id\030\001 "
    "\002(\r\022\r\n\005level\030\002 \002(\r\022\n\n\002cd\030\003 \002(\r\"\?\n\010RoomIt"
    "em\022\n\n\002id\030\001 \002(\r\022\016\n\006xml_id\030\002 \002(\r\022\027\n\003pos\030\003 "
    "\002(\0132\n.pb.Vector\"\200\001\n\010RoomBuff\022\n\n\002id\030\001 \002(\t"
    "\022\016\n\006xml_id\030\002 \002(\r\022\021\n\tplayer_id\030\003 \001(\r\022\027\n\003p"
    "os\030\004 \001(\0132\n.pb.Vector\022\027\n\003dir\030\005 \001(\0132\n.pb.V"
    "ector\022\023\n\013remain_time\030\006 \002(\r\"|\n\014RoomSnapSh"
    "ot\022\021\n\tcur_frame\030\001 \002(\r\022\037\n\007players\030\002 \003(\0132\016"
    ".pb.RoomPlayer\022\033\n\005items\030\003 \003(\0132\014.pb.RoomI"
    "tem\022\033\n\005buffs\030\004 \003(\0132\014.pb.RoomBuff\"P\n\014Room"
    "LoginReq\022\020\n\010nickname\030\001 \002(\t\022\017\n\007room_id\030\002 "
    "\002(\r\022\020\n\010room_key\030\003 \002(\t\022\013\n\003job\030\004 \002(\r\"\?\n\014Ro"
    "omLoginRes\022\n\n\002id\030\001 \002(\r\022#\n\tsnap_shot\030\003 \002("
    "\0132\020.pb.RoomSnapShot\"/\n\rRoomPlayerAdd\022\036\n\006"
    "player\030\001 \002(\0132\016.pb.RoomPlayer\"\036\n\020RoomPlay"
    "erRemove\022\n\n\002id\030\001 \002(\r\"\"\n\005Frame\022\013\n\003cmd\030\001 \002"
    "(\r\022\014\n\004data\030\002 \002(\014\"9\n\017RoomFrameNotify\022\r\n\005f"
    "rame\030\001 \002(\r\022\027\n\004list\030\002 \003(\0132\t.pb.Frame\"\207\001\n\020"
    "RoomLadderNotify\022(\n\005items\030\001 \003(\0132\031.pb.Roo"
    "mLadderNotify.Item\032I\n\004Item\022\n\n\002id\030\001 \002(\r\022\r"
    "\n\005score\030\002 \002(\005\022\022\n\nkill_times\030\003 \002(\r\022\022\n\ndea"
    "d_times\030\004 \002(\r\"E\n\021RoomPlayerMoveReq\022\027\n\003po"
    "s\030\001 \002(\0132\n.pb.Vector\022\027\n\003dir\030\002 \002(\0132\n.pb.Ve"
    "ctor\"E\n\021RoomPlayerDragRes\022\027\n\003pos\030\001 \002(\0132\n"
    ".pb.Vector\022\027\n\003dir\030\002 \002(\0132\n.pb.Vector\"\026\n\024R"
    "oomPlayerDragEndReq\"\"\n\023RoomPlayerReliveR"
    "eq\022\013\n\003job\030\001 \002(\r\"E\n\021RoomPlayerStopReq\022\027\n\003"
    "pos\030\001 \002(\0132\n.pb.Vector\022\027\n\003dir\030\002 \002(\0132\n.pb."
    "Vector\"Q\n\rSpellStartReq\022\016\n\006xml_id\030\001 \002(\r\022"
    "\027\n\003pos\030\002 \002(\0132\n.pb.Vector\022\027\n\003dir\030\003 \002(\0132\n."
    "pb.Vector\"!\n\017SpellLevelUpReq\022\016\n\006xml_id\030\001"
    " \002(\r\"\206\001\n\nKillNotify\022\021\n\tplayer_id\030\001 \002(\r\022\021"
    "\n\tkilled_id\030\002 \002(\r\022%\n\004info\030\003 \003(\0132\027.pb.Kil"
    "lNotify.KillInfo\032+\n\010KillInfo\022\017\n\007catalog\030"
    "\001 \002(\r\022\016\n\006number\030\002 \002(\r\"\r\n\013RoomPingReq\" \n\013"
    "RoomPingRes\022\021\n\tcur_frame\030\001 \002(\r\"\203\001\n\tFrame"
    "Move\022\n\n\002id\030\001 \002(\r\022\027\n\003pos\030\002 \002(\0132\n.pb.Vecto"
    "r\022\027\n\003dir\030\003 \002(\0132\n.pb.Vector\022\033\n\007cur_pos\030\004 "
    "\002(\0132\n.pb.Vector\022\033\n\007cur_dir\030\005 \002(\0132\n.pb.Ve"
    "ctor\"j\n\rFrameMoveTest\022\n\n\002id\030\001 \002(\r\022\027\n\003pos"
    "\030\002 \002(\0132\n.pb.Vector\022\027\n\003dir\030\003 \002(\0132\n.pb.Vec"
    "tor\022\033\n\007pre_pos\030\004 \002(\0132\n.pb.Vector\"I\n\tFram"
    "eStop\022\n\n\002id\030\001 \002(\r\022\027\n\003pos\030\002 \002(\0132\n.pb.Vect"
    "or\022\027\n\003dir\030\003 \002(\0132\n.pb.Vector\"b\n\nFrameDeat"
    "h\022\n\n\002id\030\001 \002(\r\022\023\n\013murderer_id\030\002 \002(\r\022\032\n\022mu"
    "rderer_cur_socre\030\003 \002(\r\022\027\n\017owner_cur_socr"
    "e\030\004 \002(\r\"-\n\013FrameRelive\022\036\n\006player\030\001 \002(\0132\016"
    ".pb.RoomPlayer\"[\n\020FrameActionStart\022\021\n\tpl"
    "ayer_id\030\001 \002(\r\022\020\n\010spell_id\030\002 \002(\r\022\021\n\tactio"
    "n_id\030\003 \002(\r\022\017\n\007left_cd\030\004 \002(\r\",\n\016FrameStar"
    "tBuff\022\032\n\004buff\030\001 \002(\0132\014.pb.RoomBuff\"5\n\017Fra"
    "meRemoveBuff\022\021\n\tplayer_id\030\001 \001(\r\022\017\n\007buff_"
    "id\030\002 \002(\t\"Z\n\017FrameSpellState\022\021\n\tplayer_id"
    "\030\001 \002(\r\022\021\n\taction_id\030\002 \002(\t\022\r\n\005state\030\003 \002(\r"
    "\022\022\n\ncur_gen_id\030\004 \002(\t\"I\n\017FrameSpellLevel\022"
    "\021\n\tplayer_id\030\001 \002(\r\022#\n\006spells\030\002 \003(\0132\023.pb."
    "RoomPlayerSpell\"2\n\024FrameSceneItemCreate\022"
    "\032\n\004item\030\001 \002(\0132\014.pb.RoomItem\"\"\n\024FrameScen"
    "eItemRemove\022\n\n\002id\030\001 \002(\r\"S\n\014FrameLevelUp\022"
    "\021\n\tplayer_id\030\001 \002(\r\022\024\n\014player_level\030\002 \002(\r"
    "\022\032\n\022player_spell_point\030\003 \002(\r\"M\n\024FramePla"
    "yerBaseState\022\021\n\tplayer_id\030\001 \002(\r\022\"\n\005state"
    "\030\002 \002(\0132\023.pb.RoomPlayerState*\262\003\n\003CMD\022\010\n\004N"
    "ONE\020\000\022\016\n\tERROR_MSG\020\350\007\022\017\n\nGAME_ISSUE\020\321\017\022\017"
    "\n\nHALL_LOGIN\020\322\017\022\024\n\017HALL_START_GAME\020\323\017\022\017\n"
    "\nROOM_LOGIN\020\271\027\022\016\n\tROOM_PING\020\272\027\022\024\n\017ROOM_P"
    "LAYER_ADD\020\274\027\022\027\n\022ROOM_PLAYER_REMOVE\020\275\027\022\026\n"
    "\021ROOM_FRAME_NOTIFY\020\276\027\022\027\n\022ROOM_LADDER_NOT"
    "IFY\020\277\027\022\026\n\021ROOM_KILLS_NOTIFY\020\300\027\022\027\n\022ROOM_P"
    "LAYER_RELIVE\020\301\027\022\025\n\020ROOM_PLAYER_MOVE\020\302\027\022\025"
    "\n\020ROOM_PLAYER_STOP\020\303\027\022\026\n\021ROOM_PLAYER_SPE"
    "LL\020\304\027\022\030\n\023ROOM_SPELL_LEVEL_UP\020\305\027\022\025\n\020ROOM_"
    "PLAYER_DRAG\020\235\030\022\031\n\024ROOM_PLAYER_DRAG_END\020\236"
    "\030\022\025\n\020RCENTER_REGISTER\020\241\037*\350\002\n\001E\022\006\n\002OK\020\000\022\023"
    "\n\017INVALID_REQUEST\020\001\022\022\n\016INTERNAL_ERROR\020\002\022"
    "\027\n\022HALL_GET_ROOM_FAIL\020\350\007\022\032\n\025HALL_GET_DB_"
    "DATA_FAIL\020\351\007\022\027\n\022HALL_INVALID_TOKEN\020\352\007\022\036\n"
    "\031HALL_PLAYER_ALREADY_LOGIN\020\353\007\022\024\n\017ROOM_GA"
    "ME_ISSUE\020\354\007\022\030\n\023ROOM_ROAL_NOT_EXIST\020\321\017\022\031\n"
    "\024ROOM_SPELL_NOT_EXIST\020\322\017\022\030\n\023ROOM_SPELL_I"
    "S_LIMIT\020\323\017\022\035\n\030ROOM_SPELL_NORMAL_NOT_UP\020\324"
    "\017\022\036\n\031ROOM_SPELL_LEVEL_UP_ERROR\020\325\017\022 \n\033ROO"
    "M_SPELL_POINT_NOT_ENOUGH\020\326\017*\252\002\n\005FRAME\022\014\n"
    "\010CMD_NONE\020\000\022\014\n\010CMD_MOVE\020\001\022\014\n\010CMD_STOP\020\002\022"
    "\r\n\tCMD_DEATH\020\003\022\016\n\nCMD_RELIVE\020\004\022\024\n\020CMD_AC"
    "TION_START\020\005\022\022\n\016CMD_BUFF_START\020\006\022\023\n\017CMD_"
    "BUFF_REMOVE\020\007\022\022\n\016CMD_SPELL_SATE\020\010\022\031\n\025CMD"
    "_SCENE_ITEM_CREATE\020\t\022\031\n\025CMD_SCENE_TIEM_R"
    "EMOVE\020\n\022\020\n\014CMD_LEVEL_UP\020\013\022\022\n\016CMD_BASE_ST"
    "ATE\020\014\022\026\n\022CMD_SPELL_LEVEL_UP\020\r\022\021\n\rCMD_MOV"
    "E_TEST\020\016", 4328);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "game.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_game_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_game_2eproto_once_);
void protobuf_AddDesc_game_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_game_2eproto_once_,
                 &protobuf_AddDesc_game_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_game_2eproto {
  StaticDescriptorInitializer_game_2eproto() {
    protobuf_AddDesc_game_2eproto();
  }
} static_descriptor_initializer_game_2eproto_;
const ::google::protobuf::EnumDescriptor* CMD_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CMD_descriptor_;
}
bool CMD_IsValid(int value) {
  switch (value) {
    case 0:
    case 1000:
    case 2001:
    case 2002:
    case 2003:
    case 3001:
    case 3002:
    case 3004:
    case 3005:
    case 3006:
    case 3007:
    case 3008:
    case 3009:
    case 3010:
    case 3011:
    case 3012:
    case 3013:
    case 3101:
    case 3102:
    case 4001:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* E_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return E_descriptor_;
}
bool E_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 1000:
    case 1001:
    case 1002:
    case 1003:
    case 1004:
    case 2001:
    case 2002:
    case 2003:
    case 2004:
    case 2005:
    case 2006:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* FRAME_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FRAME_descriptor_;
}
bool FRAME_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
      return true;
    default:
      return false;
  }
}


namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ErrorMsg::kCommandFieldNumber;
const int ErrorMsg::kErrorCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ErrorMsg::ErrorMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_game_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.ErrorMsg)
}

void ErrorMsg::InitAsDefaultInstance() {
}

ErrorMsg::ErrorMsg(const ErrorMsg& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.ErrorMsg)
}

void ErrorMsg::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&command_, 0, reinterpret_cast<char*>(&error_code_) -
    reinterpret_cast<char*>(&command_) + sizeof(error_code_));
}

ErrorMsg::~ErrorMsg() {
  // @@protoc_insertion_point(destructor:pb.ErrorMsg)
  SharedDtor();
}

void ErrorMsg::SharedDtor() {
}

void ErrorMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ErrorMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ErrorMsg_descriptor_;
}

const ErrorMsg& ErrorMsg::default_instance() {
  protobuf_InitDefaults_game_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ErrorMsg> ErrorMsg_default_instance_;

ErrorMsg* ErrorMsg::New(::google::protobuf::Arena* arena) const {
  ErrorMsg* n = new ErrorMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ErrorMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.ErrorMsg)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ErrorMsg, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ErrorMsg*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(command_, error_code_);

#undef ZR_HELPER_
#undef ZR_

  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ErrorMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.ErrorMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 command = 1;
      case 1: {
        if (tag == 8) {
          set_has_command();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &command_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_error_code;
        break;
      }

      // required uint32 error_code = 2;
      case 2: {
        if (tag == 16) {
         parse_error_code:
          set_has_error_code();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &error_code_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.ErrorMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.ErrorMsg)
  return false;
#undef DO_
}

void ErrorMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.ErrorMsg)
  // required uint32 command = 1;
  if (has_command()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->command(), output);
  }

  // required uint32 error_code = 2;
  if (has_error_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->error_code(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.ErrorMsg)
}

::google::protobuf::uint8* ErrorMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.ErrorMsg)
  // required uint32 command = 1;
  if (has_command()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->command(), target);
  }

  // required uint32 error_code = 2;
  if (has_error_code()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->error_code(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.ErrorMsg)
  return target;
}

size_t ErrorMsg::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:pb.ErrorMsg)
  size_t total_size = 0;

  if (has_command()) {
    // required uint32 command = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->command());
  }

  if (has_error_code()) {
    // required uint32 error_code = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->error_code());
  }

  return total_size;
}
size_t ErrorMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.ErrorMsg)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint32 command = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->command());

    // required uint32 error_code = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->error_code());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ErrorMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.ErrorMsg)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ErrorMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ErrorMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.ErrorMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.ErrorMsg)
    UnsafeMergeFrom(*source);
  }
}

void ErrorMsg::MergeFrom(const ErrorMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.ErrorMsg)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ErrorMsg::UnsafeMergeFrom(const ErrorMsg& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_command()) {
      set_command(from.command());
    }
    if (from.has_error_code()) {
      set_error_code(from.error_code());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void ErrorMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.ErrorMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ErrorMsg::CopyFrom(const ErrorMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.ErrorMsg)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ErrorMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void ErrorMsg::Swap(ErrorMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ErrorMsg::InternalSwap(ErrorMsg* other) {
  std::swap(command_, other->command_);
  std::swap(error_code_, other->error_code_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ErrorMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ErrorMsg_descriptor_;
  metadata.reflection = ErrorMsg_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ErrorMsg

// required uint32 command = 1;
bool ErrorMsg::has_command() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ErrorMsg::set_has_command() {
  _has_bits_[0] |= 0x00000001u;
}
void ErrorMsg::clear_has_command() {
  _has_bits_[0] &= ~0x00000001u;
}
void ErrorMsg::clear_command() {
  command_ = 0u;
  clear_has_command();
}
::google::protobuf::uint32 ErrorMsg::command() const {
  // @@protoc_insertion_point(field_get:pb.ErrorMsg.command)
  return command_;
}
void ErrorMsg::set_command(::google::protobuf::uint32 value) {
  set_has_command();
  command_ = value;
  // @@protoc_insertion_point(field_set:pb.ErrorMsg.command)
}

// required uint32 error_code = 2;
bool ErrorMsg::has_error_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ErrorMsg::set_has_error_code() {
  _has_bits_[0] |= 0x00000002u;
}
void ErrorMsg::clear_has_error_code() {
  _has_bits_[0] &= ~0x00000002u;
}
void ErrorMsg::clear_error_code() {
  error_code_ = 0u;
  clear_has_error_code();
}
::google::protobuf::uint32 ErrorMsg::error_code() const {
  // @@protoc_insertion_point(field_get:pb.ErrorMsg.error_code)
  return error_code_;
}
void ErrorMsg::set_error_code(::google::protobuf::uint32 value) {
  set_has_error_code();
  error_code_ = value;
  // @@protoc_insertion_point(field_set:pb.ErrorMsg.error_code)
}

inline const ErrorMsg* ErrorMsg::internal_default_instance() {
  return &ErrorMsg_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GameIssueReq::GameIssueReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_game_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.GameIssueReq)
}

void GameIssueReq::InitAsDefaultInstance() {
}

GameIssueReq::GameIssueReq(const GameIssueReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.GameIssueReq)
}

void GameIssueReq::SharedCtor() {
  _cached_size_ = 0;
}

GameIssueReq::~GameIssueReq() {
  // @@protoc_insertion_point(destructor:pb.GameIssueReq)
  SharedDtor();
}

void GameIssueReq::SharedDtor() {
}

void GameIssueReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GameIssueReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GameIssueReq_descriptor_;
}

const GameIssueReq& GameIssueReq::default_instance() {
  protobuf_InitDefaults_game_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<GameIssueReq> GameIssueReq_default_instance_;

GameIssueReq* GameIssueReq::New(::google::protobuf::Arena* arena) const {
  GameIssueReq* n = new GameIssueReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GameIssueReq::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.GameIssueReq)
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool GameIssueReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.GameIssueReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:pb.GameIssueReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.GameIssueReq)
  return false;
#undef DO_
}

void GameIssueReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.GameIssueReq)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.GameIssueReq)
}

::google::protobuf::uint8* GameIssueReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.GameIssueReq)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.GameIssueReq)
  return target;
}

size_t GameIssueReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.GameIssueReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GameIssueReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.GameIssueReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GameIssueReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GameIssueReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.GameIssueReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.GameIssueReq)
    UnsafeMergeFrom(*source);
  }
}

void GameIssueReq::MergeFrom(const GameIssueReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.GameIssueReq)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void GameIssueReq::UnsafeMergeFrom(const GameIssueReq& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void GameIssueReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.GameIssueReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GameIssueReq::CopyFrom(const GameIssueReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.GameIssueReq)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool GameIssueReq::IsInitialized() const {

  return true;
}

void GameIssueReq::Swap(GameIssueReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GameIssueReq::InternalSwap(GameIssueReq* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GameIssueReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GameIssueReq_descriptor_;
  metadata.reflection = GameIssueReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GameIssueReq

inline const GameIssueReq* GameIssueReq::internal_default_instance() {
  return &GameIssueReq_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GameIssueRes::kGameIssueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GameIssueRes::GameIssueRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_game_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.GameIssueRes)
}

void GameIssueRes::InitAsDefaultInstance() {
}

GameIssueRes::GameIssueRes(const GameIssueRes& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.GameIssueRes)
}

void GameIssueRes::SharedCtor() {
  _cached_size_ = 0;
  gameissue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GameIssueRes::~GameIssueRes() {
  // @@protoc_insertion_point(destructor:pb.GameIssueRes)
  SharedDtor();
}

void GameIssueRes::SharedDtor() {
  gameissue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GameIssueRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GameIssueRes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GameIssueRes_descriptor_;
}

const GameIssueRes& GameIssueRes::default_instance() {
  protobuf_InitDefaults_game_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<GameIssueRes> GameIssueRes_default_instance_;

GameIssueRes* GameIssueRes::New(::google::protobuf::Arena* arena) const {
  GameIssueRes* n = new GameIssueRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GameIssueRes::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.GameIssueRes)
  if (has_gameissue()) {
    gameissue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool GameIssueRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.GameIssueRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string GameIssue = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gameissue()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->gameissue().data(), this->gameissue().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pb.GameIssueRes.GameIssue");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.GameIssueRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.GameIssueRes)
  return false;
#undef DO_
}

void GameIssueRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.GameIssueRes)
  // required string GameIssue = 1;
  if (has_gameissue()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gameissue().data(), this->gameissue().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pb.GameIssueRes.GameIssue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->gameissue(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.GameIssueRes)
}

::google::protobuf::uint8* GameIssueRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.GameIssueRes)
  // required string GameIssue = 1;
  if (has_gameissue()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gameissue().data(), this->gameissue().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pb.GameIssueRes.GameIssue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->gameissue(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.GameIssueRes)
  return target;
}

size_t GameIssueRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.GameIssueRes)
  size_t total_size = 0;

  // required string GameIssue = 1;
  if (has_gameissue()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->gameissue());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GameIssueRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.GameIssueRes)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GameIssueRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GameIssueRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.GameIssueRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.GameIssueRes)
    UnsafeMergeFrom(*source);
  }
}

void GameIssueRes::MergeFrom(const GameIssueRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.GameIssueRes)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void GameIssueRes::UnsafeMergeFrom(const GameIssueRes& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_gameissue()) {
      set_has_gameissue();
      gameissue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gameissue_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void GameIssueRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.GameIssueRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GameIssueRes::CopyFrom(const GameIssueRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.GameIssueRes)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool GameIssueRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void GameIssueRes::Swap(GameIssueRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GameIssueRes::InternalSwap(GameIssueRes* other) {
  gameissue_.Swap(&other->gameissue_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GameIssueRes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GameIssueRes_descriptor_;
  metadata.reflection = GameIssueRes_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GameIssueRes

// required string GameIssue = 1;
bool GameIssueRes::has_gameissue() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GameIssueRes::set_has_gameissue() {
  _has_bits_[0] |= 0x00000001u;
}
void GameIssueRes::clear_has_gameissue() {
  _has_bits_[0] &= ~0x00000001u;
}
void GameIssueRes::clear_gameissue() {
  gameissue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_gameissue();
}
const ::std::string& GameIssueRes::gameissue() const {
  // @@protoc_insertion_point(field_get:pb.GameIssueRes.GameIssue)
  return gameissue_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GameIssueRes::set_gameissue(const ::std::string& value) {
  set_has_gameissue();
  gameissue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.GameIssueRes.GameIssue)
}
void GameIssueRes::set_gameissue(const char* value) {
  set_has_gameissue();
  gameissue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.GameIssueRes.GameIssue)
}
void GameIssueRes::set_gameissue(const char* value, size_t size) {
  set_has_gameissue();
  gameissue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.GameIssueRes.GameIssue)
}
::std::string* GameIssueRes::mutable_gameissue() {
  set_has_gameissue();
  // @@protoc_insertion_point(field_mutable:pb.GameIssueRes.GameIssue)
  return gameissue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GameIssueRes::release_gameissue() {
  // @@protoc_insertion_point(field_release:pb.GameIssueRes.GameIssue)
  clear_has_gameissue();
  return gameissue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GameIssueRes::set_allocated_gameissue(::std::string* gameissue) {
  if (gameissue != NULL) {
    set_has_gameissue();
  } else {
    clear_has_gameissue();
  }
  gameissue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gameissue);
  // @@protoc_insertion_point(field_set_allocated:pb.GameIssueRes.GameIssue)
}

inline const GameIssueRes* GameIssueRes::internal_default_instance() {
  return &GameIssueRes_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HallLoginReq::kTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HallLoginReq::HallLoginReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_game_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.HallLoginReq)
}

void HallLoginReq::InitAsDefaultInstance() {
}

HallLoginReq::HallLoginReq(const HallLoginReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.HallLoginReq)
}

void HallLoginReq::SharedCtor() {
  _cached_size_ = 0;
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

HallLoginReq::~HallLoginReq() {
  // @@protoc_insertion_point(destructor:pb.HallLoginReq)
  SharedDtor();
}

void HallLoginReq::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void HallLoginReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HallLoginReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HallLoginReq_descriptor_;
}

const HallLoginReq& HallLoginReq::default_instance() {
  protobuf_InitDefaults_game_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<HallLoginReq> HallLoginReq_default_instance_;

HallLoginReq* HallLoginReq::New(::google::protobuf::Arena* arena) const {
  HallLoginReq* n = new HallLoginReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HallLoginReq::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.HallLoginReq)
  if (has_token()) {
    token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool HallLoginReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.HallLoginReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string token = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->token().data(), this->token().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pb.HallLoginReq.token");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.HallLoginReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.HallLoginReq)
  return false;
#undef DO_
}

void HallLoginReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.HallLoginReq)
  // required string token = 1;
  if (has_token()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pb.HallLoginReq.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.HallLoginReq)
}

::google::protobuf::uint8* HallLoginReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.HallLoginReq)
  // required string token = 1;
  if (has_token()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pb.HallLoginReq.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.HallLoginReq)
  return target;
}

size_t HallLoginReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.HallLoginReq)
  size_t total_size = 0;

  // required string token = 1;
  if (has_token()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HallLoginReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.HallLoginReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const HallLoginReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HallLoginReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.HallLoginReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.HallLoginReq)
    UnsafeMergeFrom(*source);
  }
}

void HallLoginReq::MergeFrom(const HallLoginReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.HallLoginReq)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void HallLoginReq::UnsafeMergeFrom(const HallLoginReq& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_token()) {
      set_has_token();
      token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void HallLoginReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.HallLoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HallLoginReq::CopyFrom(const HallLoginReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.HallLoginReq)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool HallLoginReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void HallLoginReq::Swap(HallLoginReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HallLoginReq::InternalSwap(HallLoginReq* other) {
  token_.Swap(&other->token_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HallLoginReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HallLoginReq_descriptor_;
  metadata.reflection = HallLoginReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HallLoginReq

// required string token = 1;
bool HallLoginReq::has_token() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void HallLoginReq::set_has_token() {
  _has_bits_[0] |= 0x00000001u;
}
void HallLoginReq::clear_has_token() {
  _has_bits_[0] &= ~0x00000001u;
}
void HallLoginReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_token();
}
const ::std::string& HallLoginReq::token() const {
  // @@protoc_insertion_point(field_get:pb.HallLoginReq.token)
  return token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HallLoginReq::set_token(const ::std::string& value) {
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.HallLoginReq.token)
}
void HallLoginReq::set_token(const char* value) {
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.HallLoginReq.token)
}
void HallLoginReq::set_token(const char* value, size_t size) {
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.HallLoginReq.token)
}
::std::string* HallLoginReq::mutable_token() {
  set_has_token();
  // @@protoc_insertion_point(field_mutable:pb.HallLoginReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* HallLoginReq::release_token() {
  // @@protoc_insertion_point(field_release:pb.HallLoginReq.token)
  clear_has_token();
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HallLoginReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    set_has_token();
  } else {
    clear_has_token();
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:pb.HallLoginReq.token)
}

inline const HallLoginReq* HallLoginReq::internal_default_instance() {
  return &HallLoginReq_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HallLoginRes::kIdFieldNumber;
const int HallLoginRes::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HallLoginRes::HallLoginRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_game_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.HallLoginRes)
}

void HallLoginRes::InitAsDefaultInstance() {
}

HallLoginRes::HallLoginRes(const HallLoginRes& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.HallLoginRes)
}

void HallLoginRes::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = 0u;
}

HallLoginRes::~HallLoginRes() {
  // @@protoc_insertion_point(destructor:pb.HallLoginRes)
  SharedDtor();
}

void HallLoginRes::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void HallLoginRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HallLoginRes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HallLoginRes_descriptor_;
}

const HallLoginRes& HallLoginRes::default_instance() {
  protobuf_InitDefaults_game_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<HallLoginRes> HallLoginRes_default_instance_;

HallLoginRes* HallLoginRes::New(::google::protobuf::Arena* arena) const {
  HallLoginRes* n = new HallLoginRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HallLoginRes::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.HallLoginRes)
  if (_has_bits_[0 / 32] & 3u) {
    id_ = 0u;
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool HallLoginRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.HallLoginRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (tag == 8) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // required string name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pb.HallLoginRes.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.HallLoginRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.HallLoginRes)
  return false;
#undef DO_
}

void HallLoginRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.HallLoginRes)
  // required uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // required string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pb.HallLoginRes.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.HallLoginRes)
}

::google::protobuf::uint8* HallLoginRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.HallLoginRes)
  // required uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // required string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pb.HallLoginRes.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.HallLoginRes)
  return target;
}

size_t HallLoginRes::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:pb.HallLoginRes)
  size_t total_size = 0;

  if (has_id()) {
    // required uint32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  if (has_name()) {
    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  return total_size;
}
size_t HallLoginRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.HallLoginRes)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());

    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HallLoginRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.HallLoginRes)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const HallLoginRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HallLoginRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.HallLoginRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.HallLoginRes)
    UnsafeMergeFrom(*source);
  }
}

void HallLoginRes::MergeFrom(const HallLoginRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.HallLoginRes)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void HallLoginRes::UnsafeMergeFrom(const HallLoginRes& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void HallLoginRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.HallLoginRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HallLoginRes::CopyFrom(const HallLoginRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.HallLoginRes)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool HallLoginRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void HallLoginRes::Swap(HallLoginRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HallLoginRes::InternalSwap(HallLoginRes* other) {
  std::swap(id_, other->id_);
  name_.Swap(&other->name_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HallLoginRes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HallLoginRes_descriptor_;
  metadata.reflection = HallLoginRes_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HallLoginRes

// required uint32 id = 1;
bool HallLoginRes::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void HallLoginRes::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void HallLoginRes::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void HallLoginRes::clear_id() {
  id_ = 0u;
  clear_has_id();
}
::google::protobuf::uint32 HallLoginRes::id() const {
  // @@protoc_insertion_point(field_get:pb.HallLoginRes.id)
  return id_;
}
void HallLoginRes::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:pb.HallLoginRes.id)
}

// required string name = 2;
bool HallLoginRes::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void HallLoginRes::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
void HallLoginRes::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
void HallLoginRes::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& HallLoginRes::name() const {
  // @@protoc_insertion_point(field_get:pb.HallLoginRes.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HallLoginRes::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.HallLoginRes.name)
}
void HallLoginRes::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.HallLoginRes.name)
}
void HallLoginRes::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.HallLoginRes.name)
}
::std::string* HallLoginRes::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:pb.HallLoginRes.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* HallLoginRes::release_name() {
  // @@protoc_insertion_point(field_release:pb.HallLoginRes.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HallLoginRes::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:pb.HallLoginRes.name)
}

inline const HallLoginRes* HallLoginRes::internal_default_instance() {
  return &HallLoginRes_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HallStartGameReq::HallStartGameReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_game_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.HallStartGameReq)
}

void HallStartGameReq::InitAsDefaultInstance() {
}

HallStartGameReq::HallStartGameReq(const HallStartGameReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.HallStartGameReq)
}

void HallStartGameReq::SharedCtor() {
  _cached_size_ = 0;
}

HallStartGameReq::~HallStartGameReq() {
  // @@protoc_insertion_point(destructor:pb.HallStartGameReq)
  SharedDtor();
}

void HallStartGameReq::SharedDtor() {
}

void HallStartGameReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HallStartGameReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HallStartGameReq_descriptor_;
}

const HallStartGameReq& HallStartGameReq::default_instance() {
  protobuf_InitDefaults_game_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<HallStartGameReq> HallStartGameReq_default_instance_;

HallStartGameReq* HallStartGameReq::New(::google::protobuf::Arena* arena) const {
  HallStartGameReq* n = new HallStartGameReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HallStartGameReq::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.HallStartGameReq)
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool HallStartGameReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.HallStartGameReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:pb.HallStartGameReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.HallStartGameReq)
  return false;
#undef DO_
}

void HallStartGameReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.HallStartGameReq)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.HallStartGameReq)
}

::google::protobuf::uint8* HallStartGameReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.HallStartGameReq)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.HallStartGameReq)
  return target;
}

size_t HallStartGameReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.HallStartGameReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HallStartGameReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.HallStartGameReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const HallStartGameReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HallStartGameReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.HallStartGameReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.HallStartGameReq)
    UnsafeMergeFrom(*source);
  }
}

void HallStartGameReq::MergeFrom(const HallStartGameReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.HallStartGameReq)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void HallStartGameReq::UnsafeMergeFrom(const HallStartGameReq& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void HallStartGameReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.HallStartGameReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HallStartGameReq::CopyFrom(const HallStartGameReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.HallStartGameReq)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool HallStartGameReq::IsInitialized() const {

  return true;
}

void HallStartGameReq::Swap(HallStartGameReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HallStartGameReq::InternalSwap(HallStartGameReq* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HallStartGameReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HallStartGameReq_descriptor_;
  metadata.reflection = HallStartGameReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HallStartGameReq

inline const HallStartGameReq* HallStartGameReq::internal_default_instance() {
  return &HallStartGameReq_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HallStartGameRes::kRoomIdFieldNumber;
const int HallStartGameRes::kTcpAddrFieldNumber;
const int HallStartGameRes::kUdpAddrFieldNumber;
const int HallStartGameRes::kWsAddrFieldNumber;
const int HallStartGameRes::kRoomKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HallStartGameRes::HallStartGameRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_game_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.HallStartGameRes)
}

void HallStartGameRes::InitAsDefaultInstance() {
}

HallStartGameRes::HallStartGameRes(const HallStartGameRes& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.HallStartGameRes)
}

void HallStartGameRes::SharedCtor() {
  _cached_size_ = 0;
  tcp_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  udp_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ws_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  room_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  room_id_ = 0u;
}

HallStartGameRes::~HallStartGameRes() {
  // @@protoc_insertion_point(destructor:pb.HallStartGameRes)
  SharedDtor();
}

void HallStartGameRes::SharedDtor() {
  tcp_addr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  udp_addr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ws_addr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  room_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void HallStartGameRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HallStartGameRes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HallStartGameRes_descriptor_;
}

const HallStartGameRes& HallStartGameRes::default_instance() {
  protobuf_InitDefaults_game_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<HallStartGameRes> HallStartGameRes_default_instance_;

HallStartGameRes* HallStartGameRes::New(::google::protobuf::Arena* arena) const {
  HallStartGameRes* n = new HallStartGameRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HallStartGameRes::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.HallStartGameRes)
  if (_has_bits_[0 / 32] & 31u) {
    room_id_ = 0u;
    if (has_tcp_addr()) {
      tcp_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_udp_addr()) {
      udp_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_ws_addr()) {
      ws_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_room_key()) {
      room_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool HallStartGameRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.HallStartGameRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 room_id = 1;
      case 1: {
        if (tag == 8) {
          set_has_room_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &room_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_tcp_addr;
        break;
      }

      // required string tcp_addr = 2;
      case 2: {
        if (tag == 18) {
         parse_tcp_addr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tcp_addr()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->tcp_addr().data(), this->tcp_addr().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pb.HallStartGameRes.tcp_addr");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_udp_addr;
        break;
      }

      // required string udp_addr = 3;
      case 3: {
        if (tag == 26) {
         parse_udp_addr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_udp_addr()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->udp_addr().data(), this->udp_addr().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pb.HallStartGameRes.udp_addr");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_ws_addr;
        break;
      }

      // required string ws_addr = 4;
      case 4: {
        if (tag == 34) {
         parse_ws_addr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ws_addr()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->ws_addr().data(), this->ws_addr().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pb.HallStartGameRes.ws_addr");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_room_key;
        break;
      }

      // required string room_key = 5;
      case 5: {
        if (tag == 42) {
         parse_room_key:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_room_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->room_key().data(), this->room_key().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pb.HallStartGameRes.room_key");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.HallStartGameRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.HallStartGameRes)
  return false;
#undef DO_
}

void HallStartGameRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.HallStartGameRes)
  // required uint32 room_id = 1;
  if (has_room_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->room_id(), output);
  }

  // required string tcp_addr = 2;
  if (has_tcp_addr()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tcp_addr().data(), this->tcp_addr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pb.HallStartGameRes.tcp_addr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->tcp_addr(), output);
  }

  // required string udp_addr = 3;
  if (has_udp_addr()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->udp_addr().data(), this->udp_addr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pb.HallStartGameRes.udp_addr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->udp_addr(), output);
  }

  // required string ws_addr = 4;
  if (has_ws_addr()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ws_addr().data(), this->ws_addr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pb.HallStartGameRes.ws_addr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->ws_addr(), output);
  }

  // required string room_key = 5;
  if (has_room_key()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->room_key().data(), this->room_key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pb.HallStartGameRes.room_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->room_key(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.HallStartGameRes)
}

::google::protobuf::uint8* HallStartGameRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.HallStartGameRes)
  // required uint32 room_id = 1;
  if (has_room_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->room_id(), target);
  }

  // required string tcp_addr = 2;
  if (has_tcp_addr()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tcp_addr().data(), this->tcp_addr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pb.HallStartGameRes.tcp_addr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->tcp_addr(), target);
  }

  // required string udp_addr = 3;
  if (has_udp_addr()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->udp_addr().data(), this->udp_addr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pb.HallStartGameRes.udp_addr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->udp_addr(), target);
  }

  // required string ws_addr = 4;
  if (has_ws_addr()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ws_addr().data(), this->ws_addr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pb.HallStartGameRes.ws_addr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->ws_addr(), target);
  }

  // required string room_key = 5;
  if (has_room_key()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->room_key().data(), this->room_key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pb.HallStartGameRes.room_key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->room_key(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.HallStartGameRes)
  return target;
}

size_t HallStartGameRes::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:pb.HallStartGameRes)
  size_t total_size = 0;

  if (has_room_id()) {
    // required uint32 room_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->room_id());
  }

  if (has_tcp_addr()) {
    // required string tcp_addr = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tcp_addr());
  }

  if (has_udp_addr()) {
    // required string udp_addr = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->udp_addr());
  }

  if (has_ws_addr()) {
    // required string ws_addr = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ws_addr());
  }

  if (has_room_key()) {
    // required string room_key = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->room_key());
  }

  return total_size;
}
size_t HallStartGameRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.HallStartGameRes)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x0000001f) ^ 0x0000001f) == 0) {  // All required fields are present.
    // required uint32 room_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->room_id());

    // required string tcp_addr = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tcp_addr());

    // required string udp_addr = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->udp_addr());

    // required string ws_addr = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ws_addr());

    // required string room_key = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->room_key());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HallStartGameRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.HallStartGameRes)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const HallStartGameRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HallStartGameRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.HallStartGameRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.HallStartGameRes)
    UnsafeMergeFrom(*source);
  }
}

void HallStartGameRes::MergeFrom(const HallStartGameRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.HallStartGameRes)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void HallStartGameRes::UnsafeMergeFrom(const HallStartGameRes& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_room_id()) {
      set_room_id(from.room_id());
    }
    if (from.has_tcp_addr()) {
      set_has_tcp_addr();
      tcp_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tcp_addr_);
    }
    if (from.has_udp_addr()) {
      set_has_udp_addr();
      udp_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.udp_addr_);
    }
    if (from.has_ws_addr()) {
      set_has_ws_addr();
      ws_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ws_addr_);
    }
    if (from.has_room_key()) {
      set_has_room_key();
      room_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.room_key_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void HallStartGameRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.HallStartGameRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HallStartGameRes::CopyFrom(const HallStartGameRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.HallStartGameRes)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool HallStartGameRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;

  return true;
}

void HallStartGameRes::Swap(HallStartGameRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HallStartGameRes::InternalSwap(HallStartGameRes* other) {
  std::swap(room_id_, other->room_id_);
  tcp_addr_.Swap(&other->tcp_addr_);
  udp_addr_.Swap(&other->udp_addr_);
  ws_addr_.Swap(&other->ws_addr_);
  room_key_.Swap(&other->room_key_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HallStartGameRes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HallStartGameRes_descriptor_;
  metadata.reflection = HallStartGameRes_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HallStartGameRes

// required uint32 room_id = 1;
bool HallStartGameRes::has_room_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void HallStartGameRes::set_has_room_id() {
  _has_bits_[0] |= 0x00000001u;
}
void HallStartGameRes::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void HallStartGameRes::clear_room_id() {
  room_id_ = 0u;
  clear_has_room_id();
}
::google::protobuf::uint32 HallStartGameRes::room_id() const {
  // @@protoc_insertion_point(field_get:pb.HallStartGameRes.room_id)
  return room_id_;
}
void HallStartGameRes::set_room_id(::google::protobuf::uint32 value) {
  set_has_room_id();
  room_id_ = value;
  // @@protoc_insertion_point(field_set:pb.HallStartGameRes.room_id)
}

// required string tcp_addr = 2;
bool HallStartGameRes::has_tcp_addr() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void HallStartGameRes::set_has_tcp_addr() {
  _has_bits_[0] |= 0x00000002u;
}
void HallStartGameRes::clear_has_tcp_addr() {
  _has_bits_[0] &= ~0x00000002u;
}
void HallStartGameRes::clear_tcp_addr() {
  tcp_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tcp_addr();
}
const ::std::string& HallStartGameRes::tcp_addr() const {
  // @@protoc_insertion_point(field_get:pb.HallStartGameRes.tcp_addr)
  return tcp_addr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HallStartGameRes::set_tcp_addr(const ::std::string& value) {
  set_has_tcp_addr();
  tcp_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.HallStartGameRes.tcp_addr)
}
void HallStartGameRes::set_tcp_addr(const char* value) {
  set_has_tcp_addr();
  tcp_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.HallStartGameRes.tcp_addr)
}
void HallStartGameRes::set_tcp_addr(const char* value, size_t size) {
  set_has_tcp_addr();
  tcp_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.HallStartGameRes.tcp_addr)
}
::std::string* HallStartGameRes::mutable_tcp_addr() {
  set_has_tcp_addr();
  // @@protoc_insertion_point(field_mutable:pb.HallStartGameRes.tcp_addr)
  return tcp_addr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* HallStartGameRes::release_tcp_addr() {
  // @@protoc_insertion_point(field_release:pb.HallStartGameRes.tcp_addr)
  clear_has_tcp_addr();
  return tcp_addr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HallStartGameRes::set_allocated_tcp_addr(::std::string* tcp_addr) {
  if (tcp_addr != NULL) {
    set_has_tcp_addr();
  } else {
    clear_has_tcp_addr();
  }
  tcp_addr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tcp_addr);
  // @@protoc_insertion_point(field_set_allocated:pb.HallStartGameRes.tcp_addr)
}

// required string udp_addr = 3;
bool HallStartGameRes::has_udp_addr() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void HallStartGameRes::set_has_udp_addr() {
  _has_bits_[0] |= 0x00000004u;
}
void HallStartGameRes::clear_has_udp_addr() {
  _has_bits_[0] &= ~0x00000004u;
}
void HallStartGameRes::clear_udp_addr() {
  udp_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_udp_addr();
}
const ::std::string& HallStartGameRes::udp_addr() const {
  // @@protoc_insertion_point(field_get:pb.HallStartGameRes.udp_addr)
  return udp_addr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HallStartGameRes::set_udp_addr(const ::std::string& value) {
  set_has_udp_addr();
  udp_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.HallStartGameRes.udp_addr)
}
void HallStartGameRes::set_udp_addr(const char* value) {
  set_has_udp_addr();
  udp_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.HallStartGameRes.udp_addr)
}
void HallStartGameRes::set_udp_addr(const char* value, size_t size) {
  set_has_udp_addr();
  udp_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.HallStartGameRes.udp_addr)
}
::std::string* HallStartGameRes::mutable_udp_addr() {
  set_has_udp_addr();
  // @@protoc_insertion_point(field_mutable:pb.HallStartGameRes.udp_addr)
  return udp_addr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* HallStartGameRes::release_udp_addr() {
  // @@protoc_insertion_point(field_release:pb.HallStartGameRes.udp_addr)
  clear_has_udp_addr();
  return udp_addr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HallStartGameRes::set_allocated_udp_addr(::std::string* udp_addr) {
  if (udp_addr != NULL) {
    set_has_udp_addr();
  } else {
    clear_has_udp_addr();
  }
  udp_addr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), udp_addr);
  // @@protoc_insertion_point(field_set_allocated:pb.HallStartGameRes.udp_addr)
}

// required string ws_addr = 4;
bool HallStartGameRes::has_ws_addr() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void HallStartGameRes::set_has_ws_addr() {
  _has_bits_[0] |= 0x00000008u;
}
void HallStartGameRes::clear_has_ws_addr() {
  _has_bits_[0] &= ~0x00000008u;
}
void HallStartGameRes::clear_ws_addr() {
  ws_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ws_addr();
}
const ::std::string& HallStartGameRes::ws_addr() const {
  // @@protoc_insertion_point(field_get:pb.HallStartGameRes.ws_addr)
  return ws_addr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HallStartGameRes::set_ws_addr(const ::std::string& value) {
  set_has_ws_addr();
  ws_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.HallStartGameRes.ws_addr)
}
void HallStartGameRes::set_ws_addr(const char* value) {
  set_has_ws_addr();
  ws_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.HallStartGameRes.ws_addr)
}
void HallStartGameRes::set_ws_addr(const char* value, size_t size) {
  set_has_ws_addr();
  ws_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.HallStartGameRes.ws_addr)
}
::std::string* HallStartGameRes::mutable_ws_addr() {
  set_has_ws_addr();
  // @@protoc_insertion_point(field_mutable:pb.HallStartGameRes.ws_addr)
  return ws_addr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* HallStartGameRes::release_ws_addr() {
  // @@protoc_insertion_point(field_release:pb.HallStartGameRes.ws_addr)
  clear_has_ws_addr();
  return ws_addr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HallStartGameRes::set_allocated_ws_addr(::std::string* ws_addr) {
  if (ws_addr != NULL) {
    set_has_ws_addr();
  } else {
    clear_has_ws_addr();
  }
  ws_addr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ws_addr);
  // @@protoc_insertion_point(field_set_allocated:pb.HallStartGameRes.ws_addr)
}

// required string room_key = 5;
bool HallStartGameRes::has_room_key() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void HallStartGameRes::set_has_room_key() {
  _has_bits_[0] |= 0x00000010u;
}
void HallStartGameRes::clear_has_room_key() {
  _has_bits_[0] &= ~0x00000010u;
}
void HallStartGameRes::clear_room_key() {
  room_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_room_key();
}
const ::std::string& HallStartGameRes::room_key() const {
  // @@protoc_insertion_point(field_get:pb.HallStartGameRes.room_key)
  return room_key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HallStartGameRes::set_room_key(const ::std::string& value) {
  set_has_room_key();
  room_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.HallStartGameRes.room_key)
}
void HallStartGameRes::set_room_key(const char* value) {
  set_has_room_key();
  room_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.HallStartGameRes.room_key)
}
void HallStartGameRes::set_room_key(const char* value, size_t size) {
  set_has_room_key();
  room_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.HallStartGameRes.room_key)
}
::std::string* HallStartGameRes::mutable_room_key() {
  set_has_room_key();
  // @@protoc_insertion_point(field_mutable:pb.HallStartGameRes.room_key)
  return room_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* HallStartGameRes::release_room_key() {
  // @@protoc_insertion_point(field_release:pb.HallStartGameRes.room_key)
  clear_has_room_key();
  return room_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HallStartGameRes::set_allocated_room_key(::std::string* room_key) {
  if (room_key != NULL) {
    set_has_room_key();
  } else {
    clear_has_room_key();
  }
  room_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), room_key);
  // @@protoc_insertion_point(field_set_allocated:pb.HallStartGameRes.room_key)
}

inline const HallStartGameRes* HallStartGameRes::internal_default_instance() {
  return &HallStartGameRes_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RCenterRegisterReq::kTcpAddrFieldNumber;
const int RCenterRegisterReq::kUdpAddrFieldNumber;
const int RCenterRegisterReq::kWsAddrFieldNumber;
const int RCenterRegisterReq::kKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RCenterRegisterReq::RCenterRegisterReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_game_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.RCenterRegisterReq)
}

void RCenterRegisterReq::InitAsDefaultInstance() {
}

RCenterRegisterReq::RCenterRegisterReq(const RCenterRegisterReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.RCenterRegisterReq)
}

void RCenterRegisterReq::SharedCtor() {
  _cached_size_ = 0;
  tcp_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  udp_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ws_addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

RCenterRegisterReq::~RCenterRegisterReq() {
  // @@protoc_insertion_point(destructor:pb.RCenterRegisterReq)
  SharedDtor();
}

void RCenterRegisterReq::SharedDtor() {
  tcp_addr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  udp_addr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ws_addr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RCenterRegisterReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RCenterRegisterReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RCenterRegisterReq_descriptor_;
}

const RCenterRegisterReq& RCenterRegisterReq::default_instance() {
  protobuf_InitDefaults_game_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<RCenterRegisterReq> RCenterRegisterReq_default_instance_;

RCenterRegisterReq* RCenterRegisterReq::New(::google::protobuf::Arena* arena) const {
  RCenterRegisterReq* n = new RCenterRegisterReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RCenterRegisterReq::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.RCenterRegisterReq)
  if (_has_bits_[0 / 32] & 15u) {
    if (has_tcp_addr()) {
      tcp_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_udp_addr()) {
      udp_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_ws_addr()) {
      ws_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_key()) {
      key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool RCenterRegisterReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.RCenterRegisterReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string tcp_addr = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tcp_addr()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->tcp_addr().data(), this->tcp_addr().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pb.RCenterRegisterReq.tcp_addr");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_udp_addr;
        break;
      }

      // required string udp_addr = 2;
      case 2: {
        if (tag == 18) {
         parse_udp_addr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_udp_addr()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->udp_addr().data(), this->udp_addr().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pb.RCenterRegisterReq.udp_addr");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_ws_addr;
        break;
      }

      // required string ws_addr = 3;
      case 3: {
        if (tag == 26) {
         parse_ws_addr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ws_addr()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->ws_addr().data(), this->ws_addr().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pb.RCenterRegisterReq.ws_addr");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_key;
        break;
      }

      // required string key = 4;
      case 4: {
        if (tag == 34) {
         parse_key:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->key().data(), this->key().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pb.RCenterRegisterReq.key");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.RCenterRegisterReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.RCenterRegisterReq)
  return false;
#undef DO_
}

void RCenterRegisterReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.RCenterRegisterReq)
  // required string tcp_addr = 1;
  if (has_tcp_addr()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tcp_addr().data(), this->tcp_addr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pb.RCenterRegisterReq.tcp_addr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->tcp_addr(), output);
  }

  // required string udp_addr = 2;
  if (has_udp_addr()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->udp_addr().data(), this->udp_addr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pb.RCenterRegisterReq.udp_addr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->udp_addr(), output);
  }

  // required string ws_addr = 3;
  if (has_ws_addr()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ws_addr().data(), this->ws_addr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pb.RCenterRegisterReq.ws_addr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->ws_addr(), output);
  }

  // required string key = 4;
  if (has_key()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pb.RCenterRegisterReq.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->key(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.RCenterRegisterReq)
}

::google::protobuf::uint8* RCenterRegisterReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.RCenterRegisterReq)
  // required string tcp_addr = 1;
  if (has_tcp_addr()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tcp_addr().data(), this->tcp_addr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pb.RCenterRegisterReq.tcp_addr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->tcp_addr(), target);
  }

  // required string udp_addr = 2;
  if (has_udp_addr()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->udp_addr().data(), this->udp_addr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pb.RCenterRegisterReq.udp_addr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->udp_addr(), target);
  }

  // required string ws_addr = 3;
  if (has_ws_addr()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ws_addr().data(), this->ws_addr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pb.RCenterRegisterReq.ws_addr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->ws_addr(), target);
  }

  // required string key = 4;
  if (has_key()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pb.RCenterRegisterReq.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->key(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.RCenterRegisterReq)
  return target;
}

size_t RCenterRegisterReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:pb.RCenterRegisterReq)
  size_t total_size = 0;

  if (has_tcp_addr()) {
    // required string tcp_addr = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tcp_addr());
  }

  if (has_udp_addr()) {
    // required string udp_addr = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->udp_addr());
  }

  if (has_ws_addr()) {
    // required string ws_addr = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ws_addr());
  }

  if (has_key()) {
    // required string key = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  return total_size;
}
size_t RCenterRegisterReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.RCenterRegisterReq)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required string tcp_addr = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tcp_addr());

    // required string udp_addr = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->udp_addr());

    // required string ws_addr = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ws_addr());

    // required string key = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RCenterRegisterReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.RCenterRegisterReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const RCenterRegisterReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RCenterRegisterReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.RCenterRegisterReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.RCenterRegisterReq)
    UnsafeMergeFrom(*source);
  }
}

void RCenterRegisterReq::MergeFrom(const RCenterRegisterReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.RCenterRegisterReq)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void RCenterRegisterReq::UnsafeMergeFrom(const RCenterRegisterReq& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_tcp_addr()) {
      set_has_tcp_addr();
      tcp_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tcp_addr_);
    }
    if (from.has_udp_addr()) {
      set_has_udp_addr();
      udp_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.udp_addr_);
    }
    if (from.has_ws_addr()) {
      set_has_ws_addr();
      ws_addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ws_addr_);
    }
    if (from.has_key()) {
      set_has_key();
      key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void RCenterRegisterReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.RCenterRegisterReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RCenterRegisterReq::CopyFrom(const RCenterRegisterReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.RCenterRegisterReq)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool RCenterRegisterReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void RCenterRegisterReq::Swap(RCenterRegisterReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RCenterRegisterReq::InternalSwap(RCenterRegisterReq* other) {
  tcp_addr_.Swap(&other->tcp_addr_);
  udp_addr_.Swap(&other->udp_addr_);
  ws_addr_.Swap(&other->ws_addr_);
  key_.Swap(&other->key_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RCenterRegisterReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RCenterRegisterReq_descriptor_;
  metadata.reflection = RCenterRegisterReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RCenterRegisterReq

// required string tcp_addr = 1;
bool RCenterRegisterReq::has_tcp_addr() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RCenterRegisterReq::set_has_tcp_addr() {
  _has_bits_[0] |= 0x00000001u;
}
void RCenterRegisterReq::clear_has_tcp_addr() {
  _has_bits_[0] &= ~0x00000001u;
}
void RCenterRegisterReq::clear_tcp_addr() {
  tcp_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tcp_addr();
}
const ::std::string& RCenterRegisterReq::tcp_addr() const {
  // @@protoc_insertion_point(field_get:pb.RCenterRegisterReq.tcp_addr)
  return tcp_addr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RCenterRegisterReq::set_tcp_addr(const ::std::string& value) {
  set_has_tcp_addr();
  tcp_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.RCenterRegisterReq.tcp_addr)
}
void RCenterRegisterReq::set_tcp_addr(const char* value) {
  set_has_tcp_addr();
  tcp_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.RCenterRegisterReq.tcp_addr)
}
void RCenterRegisterReq::set_tcp_addr(const char* value, size_t size) {
  set_has_tcp_addr();
  tcp_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.RCenterRegisterReq.tcp_addr)
}
::std::string* RCenterRegisterReq::mutable_tcp_addr() {
  set_has_tcp_addr();
  // @@protoc_insertion_point(field_mutable:pb.RCenterRegisterReq.tcp_addr)
  return tcp_addr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RCenterRegisterReq::release_tcp_addr() {
  // @@protoc_insertion_point(field_release:pb.RCenterRegisterReq.tcp_addr)
  clear_has_tcp_addr();
  return tcp_addr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RCenterRegisterReq::set_allocated_tcp_addr(::std::string* tcp_addr) {
  if (tcp_addr != NULL) {
    set_has_tcp_addr();
  } else {
    clear_has_tcp_addr();
  }
  tcp_addr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tcp_addr);
  // @@protoc_insertion_point(field_set_allocated:pb.RCenterRegisterReq.tcp_addr)
}

// required string udp_addr = 2;
bool RCenterRegisterReq::has_udp_addr() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RCenterRegisterReq::set_has_udp_addr() {
  _has_bits_[0] |= 0x00000002u;
}
void RCenterRegisterReq::clear_has_udp_addr() {
  _has_bits_[0] &= ~0x00000002u;
}
void RCenterRegisterReq::clear_udp_addr() {
  udp_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_udp_addr();
}
const ::std::string& RCenterRegisterReq::udp_addr() const {
  // @@protoc_insertion_point(field_get:pb.RCenterRegisterReq.udp_addr)
  return udp_addr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RCenterRegisterReq::set_udp_addr(const ::std::string& value) {
  set_has_udp_addr();
  udp_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.RCenterRegisterReq.udp_addr)
}
void RCenterRegisterReq::set_udp_addr(const char* value) {
  set_has_udp_addr();
  udp_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.RCenterRegisterReq.udp_addr)
}
void RCenterRegisterReq::set_udp_addr(const char* value, size_t size) {
  set_has_udp_addr();
  udp_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.RCenterRegisterReq.udp_addr)
}
::std::string* RCenterRegisterReq::mutable_udp_addr() {
  set_has_udp_addr();
  // @@protoc_insertion_point(field_mutable:pb.RCenterRegisterReq.udp_addr)
  return udp_addr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RCenterRegisterReq::release_udp_addr() {
  // @@protoc_insertion_point(field_release:pb.RCenterRegisterReq.udp_addr)
  clear_has_udp_addr();
  return udp_addr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RCenterRegisterReq::set_allocated_udp_addr(::std::string* udp_addr) {
  if (udp_addr != NULL) {
    set_has_udp_addr();
  } else {
    clear_has_udp_addr();
  }
  udp_addr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), udp_addr);
  // @@protoc_insertion_point(field_set_allocated:pb.RCenterRegisterReq.udp_addr)
}

// required string ws_addr = 3;
bool RCenterRegisterReq::has_ws_addr() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void RCenterRegisterReq::set_has_ws_addr() {
  _has_bits_[0] |= 0x00000004u;
}
void RCenterRegisterReq::clear_has_ws_addr() {
  _has_bits_[0] &= ~0x00000004u;
}
void RCenterRegisterReq::clear_ws_addr() {
  ws_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ws_addr();
}
const ::std::string& RCenterRegisterReq::ws_addr() const {
  // @@protoc_insertion_point(field_get:pb.RCenterRegisterReq.ws_addr)
  return ws_addr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RCenterRegisterReq::set_ws_addr(const ::std::string& value) {
  set_has_ws_addr();
  ws_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.RCenterRegisterReq.ws_addr)
}
void RCenterRegisterReq::set_ws_addr(const char* value) {
  set_has_ws_addr();
  ws_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.RCenterRegisterReq.ws_addr)
}
void RCenterRegisterReq::set_ws_addr(const char* value, size_t size) {
  set_has_ws_addr();
  ws_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.RCenterRegisterReq.ws_addr)
}
::std::string* RCenterRegisterReq::mutable_ws_addr() {
  set_has_ws_addr();
  // @@protoc_insertion_point(field_mutable:pb.RCenterRegisterReq.ws_addr)
  return ws_addr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RCenterRegisterReq::release_ws_addr() {
  // @@protoc_insertion_point(field_release:pb.RCenterRegisterReq.ws_addr)
  clear_has_ws_addr();
  return ws_addr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RCenterRegisterReq::set_allocated_ws_addr(::std::string* ws_addr) {
  if (ws_addr != NULL) {
    set_has_ws_addr();
  } else {
    clear_has_ws_addr();
  }
  ws_addr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ws_addr);
  // @@protoc_insertion_point(field_set_allocated:pb.RCenterRegisterReq.ws_addr)
}

// required string key = 4;
bool RCenterRegisterReq::has_key() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void RCenterRegisterReq::set_has_key() {
  _has_bits_[0] |= 0x00000008u;
}
void RCenterRegisterReq::clear_has_key() {
  _has_bits_[0] &= ~0x00000008u;
}
void RCenterRegisterReq::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key();
}
const ::std::string& RCenterRegisterReq::key() const {
  // @@protoc_insertion_point(field_get:pb.RCenterRegisterReq.key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RCenterRegisterReq::set_key(const ::std::string& value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.RCenterRegisterReq.key)
}
void RCenterRegisterReq::set_key(const char* value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.RCenterRegisterReq.key)
}
void RCenterRegisterReq::set_key(const char* value, size_t size) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.RCenterRegisterReq.key)
}
::std::string* RCenterRegisterReq::mutable_key() {
  set_has_key();
  // @@protoc_insertion_point(field_mutable:pb.RCenterRegisterReq.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RCenterRegisterReq::release_key() {
  // @@protoc_insertion_point(field_release:pb.RCenterRegisterReq.key)
  clear_has_key();
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RCenterRegisterReq::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    set_has_key();
  } else {
    clear_has_key();
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:pb.RCenterRegisterReq.key)
}

inline const RCenterRegisterReq* RCenterRegisterReq::internal_default_instance() {
  return &RCenterRegisterReq_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RCenterRegisterRes::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RCenterRegisterRes::RCenterRegisterRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_game_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.RCenterRegisterRes)
}

void RCenterRegisterRes::InitAsDefaultInstance() {
}

RCenterRegisterRes::RCenterRegisterRes(const RCenterRegisterRes& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.RCenterRegisterRes)
}

void RCenterRegisterRes::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
}

RCenterRegisterRes::~RCenterRegisterRes() {
  // @@protoc_insertion_point(destructor:pb.RCenterRegisterRes)
  SharedDtor();
}

void RCenterRegisterRes::SharedDtor() {
}

void RCenterRegisterRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RCenterRegisterRes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RCenterRegisterRes_descriptor_;
}

const RCenterRegisterRes& RCenterRegisterRes::default_instance() {
  protobuf_InitDefaults_game_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<RCenterRegisterRes> RCenterRegisterRes_default_instance_;

RCenterRegisterRes* RCenterRegisterRes::New(::google::protobuf::Arena* arena) const {
  RCenterRegisterRes* n = new RCenterRegisterRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RCenterRegisterRes::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.RCenterRegisterRes)
  id_ = 0u;
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool RCenterRegisterRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.RCenterRegisterRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (tag == 8) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.RCenterRegisterRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.RCenterRegisterRes)
  return false;
#undef DO_
}

void RCenterRegisterRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.RCenterRegisterRes)
  // required uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.RCenterRegisterRes)
}

::google::protobuf::uint8* RCenterRegisterRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.RCenterRegisterRes)
  // required uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.RCenterRegisterRes)
  return target;
}

size_t RCenterRegisterRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.RCenterRegisterRes)
  size_t total_size = 0;

  // required uint32 id = 1;
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RCenterRegisterRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.RCenterRegisterRes)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const RCenterRegisterRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RCenterRegisterRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.RCenterRegisterRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.RCenterRegisterRes)
    UnsafeMergeFrom(*source);
  }
}

void RCenterRegisterRes::MergeFrom(const RCenterRegisterRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.RCenterRegisterRes)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void RCenterRegisterRes::UnsafeMergeFrom(const RCenterRegisterRes& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void RCenterRegisterRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.RCenterRegisterRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RCenterRegisterRes::CopyFrom(const RCenterRegisterRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.RCenterRegisterRes)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool RCenterRegisterRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void RCenterRegisterRes::Swap(RCenterRegisterRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RCenterRegisterRes::InternalSwap(RCenterRegisterRes* other) {
  std::swap(id_, other->id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RCenterRegisterRes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RCenterRegisterRes_descriptor_;
  metadata.reflection = RCenterRegisterRes_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RCenterRegisterRes

// required uint32 id = 1;
bool RCenterRegisterRes::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RCenterRegisterRes::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void RCenterRegisterRes::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void RCenterRegisterRes::clear_id() {
  id_ = 0u;
  clear_has_id();
}
::google::protobuf::uint32 RCenterRegisterRes::id() const {
  // @@protoc_insertion_point(field_get:pb.RCenterRegisterRes.id)
  return id_;
}
void RCenterRegisterRes::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:pb.RCenterRegisterRes.id)
}

inline const RCenterRegisterRes* RCenterRegisterRes::internal_default_instance() {
  return &RCenterRegisterRes_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Vector::kXFieldNumber;
const int Vector::kZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Vector::Vector()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_game_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.Vector)
}

void Vector::InitAsDefaultInstance() {
}

Vector::Vector(const Vector& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.Vector)
}

void Vector::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&x_, 0, reinterpret_cast<char*>(&z_) -
    reinterpret_cast<char*>(&x_) + sizeof(z_));
}

Vector::~Vector() {
  // @@protoc_insertion_point(destructor:pb.Vector)
  SharedDtor();
}

void Vector::SharedDtor() {
}

void Vector::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Vector::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Vector_descriptor_;
}

const Vector& Vector::default_instance() {
  protobuf_InitDefaults_game_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Vector> Vector_default_instance_;

Vector* Vector::New(::google::protobuf::Arena* arena) const {
  Vector* n = new Vector;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Vector::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.Vector)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Vector, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Vector*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(x_, z_);

#undef ZR_HELPER_
#undef ZR_

  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Vector::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.Vector)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required sint32 x = 1;
      case 1: {
        if (tag == 8) {
          set_has_x();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_z;
        break;
      }

      // required sint32 z = 2;
      case 2: {
        if (tag == 16) {
         parse_z:
          set_has_z();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.Vector)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.Vector)
  return false;
#undef DO_
}

void Vector::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.Vector)
  // required sint32 x = 1;
  if (has_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->x(), output);
  }

  // required sint32 z = 2;
  if (has_z()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->z(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.Vector)
}

::google::protobuf::uint8* Vector::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.Vector)
  // required sint32 x = 1;
  if (has_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->x(), target);
  }

  // required sint32 z = 2;
  if (has_z()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->z(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.Vector)
  return target;
}

size_t Vector::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:pb.Vector)
  size_t total_size = 0;

  if (has_x()) {
    // required sint32 x = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->x());
  }

  if (has_z()) {
    // required sint32 z = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->z());
  }

  return total_size;
}
size_t Vector::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.Vector)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required sint32 x = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->x());

    // required sint32 z = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->z());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Vector::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.Vector)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Vector* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Vector>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.Vector)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.Vector)
    UnsafeMergeFrom(*source);
  }
}

void Vector::MergeFrom(const Vector& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.Vector)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Vector::UnsafeMergeFrom(const Vector& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_x()) {
      set_x(from.x());
    }
    if (from.has_z()) {
      set_z(from.z());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void Vector::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.Vector)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Vector::CopyFrom(const Vector& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.Vector)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Vector::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void Vector::Swap(Vector* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Vector::InternalSwap(Vector* other) {
  std::swap(x_, other->x_);
  std::swap(z_, other->z_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Vector::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Vector_descriptor_;
  metadata.reflection = Vector_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Vector

// required sint32 x = 1;
bool Vector::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Vector::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
void Vector::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
void Vector::clear_x() {
  x_ = 0;
  clear_has_x();
}
::google::protobuf::int32 Vector::x() const {
  // @@protoc_insertion_point(field_get:pb.Vector.x)
  return x_;
}
void Vector::set_x(::google::protobuf::int32 value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:pb.Vector.x)
}

// required sint32 z = 2;
bool Vector::has_z() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Vector::set_has_z() {
  _has_bits_[0] |= 0x00000002u;
}
void Vector::clear_has_z() {
  _has_bits_[0] &= ~0x00000002u;
}
void Vector::clear_z() {
  z_ = 0;
  clear_has_z();
}
::google::protobuf::int32 Vector::z() const {
  // @@protoc_insertion_point(field_get:pb.Vector.z)
  return z_;
}
void Vector::set_z(::google::protobuf::int32 value) {
  set_has_z();
  z_ = value;
  // @@protoc_insertion_point(field_set:pb.Vector.z)
}

inline const Vector* Vector::internal_default_instance() {
  return &Vector_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoomPlayer::kIdFieldNumber;
const int RoomPlayer::kNicknameFieldNumber;
const int RoomPlayer::kStateFieldNumber;
const int RoomPlayer::kJobFieldNumber;
const int RoomPlayer::kLevelFieldNumber;
const int RoomPlayer::kPosFieldNumber;
const int RoomPlayer::kDirFieldNumber;
const int RoomPlayer::kScoreFieldNumber;
const int RoomPlayer::kSpellsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoomPlayer::RoomPlayer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_game_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.RoomPlayer)
}

void RoomPlayer::InitAsDefaultInstance() {
  state_ = const_cast< ::pb::RoomPlayerState*>(
      ::pb::RoomPlayerState::internal_default_instance());
  pos_ = const_cast< ::pb::Vector*>(
      ::pb::Vector::internal_default_instance());
  dir_ = const_cast< ::pb::Vector*>(
      ::pb::Vector::internal_default_instance());
}

RoomPlayer::RoomPlayer(const RoomPlayer& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.RoomPlayer)
}

void RoomPlayer::SharedCtor() {
  _cached_size_ = 0;
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  state_ = NULL;
  pos_ = NULL;
  dir_ = NULL;
  ::memset(&id_, 0, reinterpret_cast<char*>(&score_) -
    reinterpret_cast<char*>(&id_) + sizeof(score_));
}

RoomPlayer::~RoomPlayer() {
  // @@protoc_insertion_point(destructor:pb.RoomPlayer)
  SharedDtor();
}

void RoomPlayer::SharedDtor() {
  nickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &RoomPlayer_default_instance_.get()) {
    delete state_;
    delete pos_;
    delete dir_;
  }
}

void RoomPlayer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoomPlayer::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RoomPlayer_descriptor_;
}

const RoomPlayer& RoomPlayer::default_instance() {
  protobuf_InitDefaults_game_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<RoomPlayer> RoomPlayer_default_instance_;

RoomPlayer* RoomPlayer::New(::google::protobuf::Arena* arena) const {
  RoomPlayer* n = new RoomPlayer;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoomPlayer::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.RoomPlayer)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(RoomPlayer, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<RoomPlayer*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(id_, score_);
    if (has_nickname()) {
      nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_state()) {
      if (state_ != NULL) state_->::pb::RoomPlayerState::Clear();
    }
    if (has_pos()) {
      if (pos_ != NULL) pos_->::pb::Vector::Clear();
    }
    if (has_dir()) {
      if (dir_ != NULL) dir_->::pb::Vector::Clear();
    }
  }

#undef ZR_HELPER_
#undef ZR_

  spells_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool RoomPlayer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.RoomPlayer)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (tag == 8) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_nickname;
        break;
      }

      // required string nickname = 2;
      case 2: {
        if (tag == 18) {
         parse_nickname:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nickname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->nickname().data(), this->nickname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pb.RoomPlayer.nickname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_state;
        break;
      }

      // required .pb.RoomPlayerState state = 3;
      case 3: {
        if (tag == 26) {
         parse_state:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_state()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_job;
        break;
      }

      // required uint32 job = 4;
      case 4: {
        if (tag == 32) {
         parse_job:
          set_has_job();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &job_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_level;
        break;
      }

      // required uint32 level = 5;
      case 5: {
        if (tag == 40) {
         parse_level:
          set_has_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_pos;
        break;
      }

      // required .pb.Vector pos = 6;
      case 6: {
        if (tag == 50) {
         parse_pos:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_dir;
        break;
      }

      // required .pb.Vector dir = 7;
      case 7: {
        if (tag == 58) {
         parse_dir:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_dir()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_score;
        break;
      }

      // required uint32 score = 8;
      case 8: {
        if (tag == 64) {
         parse_score:
          set_has_score();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &score_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_spells;
        break;
      }

      // repeated .pb.RoomPlayerSpell spells = 9;
      case 9: {
        if (tag == 74) {
         parse_spells:
          DO_(input->IncrementRecursionDepth());
         parse_loop_spells:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_spells()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_loop_spells;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.RoomPlayer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.RoomPlayer)
  return false;
#undef DO_
}

void RoomPlayer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.RoomPlayer)
  // required uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // required string nickname = 2;
  if (has_nickname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nickname().data(), this->nickname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pb.RoomPlayer.nickname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->nickname(), output);
  }

  // required .pb.RoomPlayerState state = 3;
  if (has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->state_, output);
  }

  // required uint32 job = 4;
  if (has_job()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->job(), output);
  }

  // required uint32 level = 5;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->level(), output);
  }

  // required .pb.Vector pos = 6;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->pos_, output);
  }

  // required .pb.Vector dir = 7;
  if (has_dir()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->dir_, output);
  }

  // required uint32 score = 8;
  if (has_score()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->score(), output);
  }

  // repeated .pb.RoomPlayerSpell spells = 9;
  for (unsigned int i = 0, n = this->spells_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->spells(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.RoomPlayer)
}

::google::protobuf::uint8* RoomPlayer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.RoomPlayer)
  // required uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // required string nickname = 2;
  if (has_nickname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nickname().data(), this->nickname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pb.RoomPlayer.nickname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->nickname(), target);
  }

  // required .pb.RoomPlayerState state = 3;
  if (has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->state_, false, target);
  }

  // required uint32 job = 4;
  if (has_job()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->job(), target);
  }

  // required uint32 level = 5;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->level(), target);
  }

  // required .pb.Vector pos = 6;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->pos_, false, target);
  }

  // required .pb.Vector dir = 7;
  if (has_dir()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->dir_, false, target);
  }

  // required uint32 score = 8;
  if (has_score()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->score(), target);
  }

  // repeated .pb.RoomPlayerSpell spells = 9;
  for (unsigned int i = 0, n = this->spells_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, this->spells(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.RoomPlayer)
  return target;
}

size_t RoomPlayer::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:pb.RoomPlayer)
  size_t total_size = 0;

  if (has_id()) {
    // required uint32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  if (has_nickname()) {
    // required string nickname = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nickname());
  }

  if (has_state()) {
    // required .pb.RoomPlayerState state = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->state_);
  }

  if (has_job()) {
    // required uint32 job = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->job());
  }

  if (has_level()) {
    // required uint32 level = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->level());
  }

  if (has_pos()) {
    // required .pb.Vector pos = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pos_);
  }

  if (has_dir()) {
    // required .pb.Vector dir = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->dir_);
  }

  if (has_score()) {
    // required uint32 score = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->score());
  }

  return total_size;
}
size_t RoomPlayer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.RoomPlayer)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x000000ff) ^ 0x000000ff) == 0) {  // All required fields are present.
    // required uint32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());

    // required string nickname = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nickname());

    // required .pb.RoomPlayerState state = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->state_);

    // required uint32 job = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->job());

    // required uint32 level = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->level());

    // required .pb.Vector pos = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pos_);

    // required .pb.Vector dir = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->dir_);

    // required uint32 score = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->score());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .pb.RoomPlayerSpell spells = 9;
  {
    unsigned int count = this->spells_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->spells(i));
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoomPlayer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.RoomPlayer)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const RoomPlayer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RoomPlayer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.RoomPlayer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.RoomPlayer)
    UnsafeMergeFrom(*source);
  }
}

void RoomPlayer::MergeFrom(const RoomPlayer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.RoomPlayer)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void RoomPlayer::UnsafeMergeFrom(const RoomPlayer& from) {
  GOOGLE_DCHECK(&from != this);
  spells_.MergeFrom(from.spells_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_nickname()) {
      set_has_nickname();
      nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
    }
    if (from.has_state()) {
      mutable_state()->::pb::RoomPlayerState::MergeFrom(from.state());
    }
    if (from.has_job()) {
      set_job(from.job());
    }
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_pos()) {
      mutable_pos()->::pb::Vector::MergeFrom(from.pos());
    }
    if (from.has_dir()) {
      mutable_dir()->::pb::Vector::MergeFrom(from.dir());
    }
    if (from.has_score()) {
      set_score(from.score());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void RoomPlayer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.RoomPlayer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoomPlayer::CopyFrom(const RoomPlayer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.RoomPlayer)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool RoomPlayer::IsInitialized() const {
  if ((_has_bits_[0] & 0x000000ff) != 0x000000ff) return false;

  if (has_state()) {
    if (!this->state_->IsInitialized()) return false;
  }
  if (has_pos()) {
    if (!this->pos_->IsInitialized()) return false;
  }
  if (has_dir()) {
    if (!this->dir_->IsInitialized()) return false;
  }
  if (!::google::protobuf::internal::AllAreInitialized(this->spells())) return false;
  return true;
}

void RoomPlayer::Swap(RoomPlayer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoomPlayer::InternalSwap(RoomPlayer* other) {
  std::swap(id_, other->id_);
  nickname_.Swap(&other->nickname_);
  std::swap(state_, other->state_);
  std::swap(job_, other->job_);
  std::swap(level_, other->level_);
  std::swap(pos_, other->pos_);
  std::swap(dir_, other->dir_);
  std::swap(score_, other->score_);
  spells_.UnsafeArenaSwap(&other->spells_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoomPlayer::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RoomPlayer_descriptor_;
  metadata.reflection = RoomPlayer_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RoomPlayer

// required uint32 id = 1;
bool RoomPlayer::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RoomPlayer::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void RoomPlayer::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void RoomPlayer::clear_id() {
  id_ = 0u;
  clear_has_id();
}
::google::protobuf::uint32 RoomPlayer::id() const {
  // @@protoc_insertion_point(field_get:pb.RoomPlayer.id)
  return id_;
}
void RoomPlayer::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:pb.RoomPlayer.id)
}

// required string nickname = 2;
bool RoomPlayer::has_nickname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RoomPlayer::set_has_nickname() {
  _has_bits_[0] |= 0x00000002u;
}
void RoomPlayer::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000002u;
}
void RoomPlayer::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nickname();
}
const ::std::string& RoomPlayer::nickname() const {
  // @@protoc_insertion_point(field_get:pb.RoomPlayer.nickname)
  return nickname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RoomPlayer::set_nickname(const ::std::string& value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.RoomPlayer.nickname)
}
void RoomPlayer::set_nickname(const char* value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.RoomPlayer.nickname)
}
void RoomPlayer::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.RoomPlayer.nickname)
}
::std::string* RoomPlayer::mutable_nickname() {
  set_has_nickname();
  // @@protoc_insertion_point(field_mutable:pb.RoomPlayer.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RoomPlayer::release_nickname() {
  // @@protoc_insertion_point(field_release:pb.RoomPlayer.nickname)
  clear_has_nickname();
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RoomPlayer::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    set_has_nickname();
  } else {
    clear_has_nickname();
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:pb.RoomPlayer.nickname)
}

// required .pb.RoomPlayerState state = 3;
bool RoomPlayer::has_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void RoomPlayer::set_has_state() {
  _has_bits_[0] |= 0x00000004u;
}
void RoomPlayer::clear_has_state() {
  _has_bits_[0] &= ~0x00000004u;
}
void RoomPlayer::clear_state() {
  if (state_ != NULL) state_->::pb::RoomPlayerState::Clear();
  clear_has_state();
}
const ::pb::RoomPlayerState& RoomPlayer::state() const {
  // @@protoc_insertion_point(field_get:pb.RoomPlayer.state)
  return state_ != NULL ? *state_
                         : *::pb::RoomPlayerState::internal_default_instance();
}
::pb::RoomPlayerState* RoomPlayer::mutable_state() {
  set_has_state();
  if (state_ == NULL) {
    state_ = new ::pb::RoomPlayerState;
  }
  // @@protoc_insertion_point(field_mutable:pb.RoomPlayer.state)
  return state_;
}
::pb::RoomPlayerState* RoomPlayer::release_state() {
  // @@protoc_insertion_point(field_release:pb.RoomPlayer.state)
  clear_has_state();
  ::pb::RoomPlayerState* temp = state_;
  state_ = NULL;
  return temp;
}
void RoomPlayer::set_allocated_state(::pb::RoomPlayerState* state) {
  delete state_;
  state_ = state;
  if (state) {
    set_has_state();
  } else {
    clear_has_state();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.RoomPlayer.state)
}

// required uint32 job = 4;
bool RoomPlayer::has_job() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void RoomPlayer::set_has_job() {
  _has_bits_[0] |= 0x00000008u;
}
void RoomPlayer::clear_has_job() {
  _has_bits_[0] &= ~0x00000008u;
}
void RoomPlayer::clear_job() {
  job_ = 0u;
  clear_has_job();
}
::google::protobuf::uint32 RoomPlayer::job() const {
  // @@protoc_insertion_point(field_get:pb.RoomPlayer.job)
  return job_;
}
void RoomPlayer::set_job(::google::protobuf::uint32 value) {
  set_has_job();
  job_ = value;
  // @@protoc_insertion_point(field_set:pb.RoomPlayer.job)
}

// required uint32 level = 5;
bool RoomPlayer::has_level() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void RoomPlayer::set_has_level() {
  _has_bits_[0] |= 0x00000010u;
}
void RoomPlayer::clear_has_level() {
  _has_bits_[0] &= ~0x00000010u;
}
void RoomPlayer::clear_level() {
  level_ = 0u;
  clear_has_level();
}
::google::protobuf::uint32 RoomPlayer::level() const {
  // @@protoc_insertion_point(field_get:pb.RoomPlayer.level)
  return level_;
}
void RoomPlayer::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:pb.RoomPlayer.level)
}

// required .pb.Vector pos = 6;
bool RoomPlayer::has_pos() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void RoomPlayer::set_has_pos() {
  _has_bits_[0] |= 0x00000020u;
}
void RoomPlayer::clear_has_pos() {
  _has_bits_[0] &= ~0x00000020u;
}
void RoomPlayer::clear_pos() {
  if (pos_ != NULL) pos_->::pb::Vector::Clear();
  clear_has_pos();
}
const ::pb::Vector& RoomPlayer::pos() const {
  // @@protoc_insertion_point(field_get:pb.RoomPlayer.pos)
  return pos_ != NULL ? *pos_
                         : *::pb::Vector::internal_default_instance();
}
::pb::Vector* RoomPlayer::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) {
    pos_ = new ::pb::Vector;
  }
  // @@protoc_insertion_point(field_mutable:pb.RoomPlayer.pos)
  return pos_;
}
::pb::Vector* RoomPlayer::release_pos() {
  // @@protoc_insertion_point(field_release:pb.RoomPlayer.pos)
  clear_has_pos();
  ::pb::Vector* temp = pos_;
  pos_ = NULL;
  return temp;
}
void RoomPlayer::set_allocated_pos(::pb::Vector* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.RoomPlayer.pos)
}

// required .pb.Vector dir = 7;
bool RoomPlayer::has_dir() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void RoomPlayer::set_has_dir() {
  _has_bits_[0] |= 0x00000040u;
}
void RoomPlayer::clear_has_dir() {
  _has_bits_[0] &= ~0x00000040u;
}
void RoomPlayer::clear_dir() {
  if (dir_ != NULL) dir_->::pb::Vector::Clear();
  clear_has_dir();
}
const ::pb::Vector& RoomPlayer::dir() const {
  // @@protoc_insertion_point(field_get:pb.RoomPlayer.dir)
  return dir_ != NULL ? *dir_
                         : *::pb::Vector::internal_default_instance();
}
::pb::Vector* RoomPlayer::mutable_dir() {
  set_has_dir();
  if (dir_ == NULL) {
    dir_ = new ::pb::Vector;
  }
  // @@protoc_insertion_point(field_mutable:pb.RoomPlayer.dir)
  return dir_;
}
::pb::Vector* RoomPlayer::release_dir() {
  // @@protoc_insertion_point(field_release:pb.RoomPlayer.dir)
  clear_has_dir();
  ::pb::Vector* temp = dir_;
  dir_ = NULL;
  return temp;
}
void RoomPlayer::set_allocated_dir(::pb::Vector* dir) {
  delete dir_;
  dir_ = dir;
  if (dir) {
    set_has_dir();
  } else {
    clear_has_dir();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.RoomPlayer.dir)
}

// required uint32 score = 8;
bool RoomPlayer::has_score() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void RoomPlayer::set_has_score() {
  _has_bits_[0] |= 0x00000080u;
}
void RoomPlayer::clear_has_score() {
  _has_bits_[0] &= ~0x00000080u;
}
void RoomPlayer::clear_score() {
  score_ = 0u;
  clear_has_score();
}
::google::protobuf::uint32 RoomPlayer::score() const {
  // @@protoc_insertion_point(field_get:pb.RoomPlayer.score)
  return score_;
}
void RoomPlayer::set_score(::google::protobuf::uint32 value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:pb.RoomPlayer.score)
}

// repeated .pb.RoomPlayerSpell spells = 9;
int RoomPlayer::spells_size() const {
  return spells_.size();
}
void RoomPlayer::clear_spells() {
  spells_.Clear();
}
const ::pb::RoomPlayerSpell& RoomPlayer::spells(int index) const {
  // @@protoc_insertion_point(field_get:pb.RoomPlayer.spells)
  return spells_.Get(index);
}
::pb::RoomPlayerSpell* RoomPlayer::mutable_spells(int index) {
  // @@protoc_insertion_point(field_mutable:pb.RoomPlayer.spells)
  return spells_.Mutable(index);
}
::pb::RoomPlayerSpell* RoomPlayer::add_spells() {
  // @@protoc_insertion_point(field_add:pb.RoomPlayer.spells)
  return spells_.Add();
}
::google::protobuf::RepeatedPtrField< ::pb::RoomPlayerSpell >*
RoomPlayer::mutable_spells() {
  // @@protoc_insertion_point(field_mutable_list:pb.RoomPlayer.spells)
  return &spells_;
}
const ::google::protobuf::RepeatedPtrField< ::pb::RoomPlayerSpell >&
RoomPlayer::spells() const {
  // @@protoc_insertion_point(field_list:pb.RoomPlayer.spells)
  return spells_;
}

inline const RoomPlayer* RoomPlayer::internal_default_instance() {
  return &RoomPlayer_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoomPlayerState::kHpFieldNumber;
const int RoomPlayerState::kSpeedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoomPlayerState::RoomPlayerState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_game_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.RoomPlayerState)
}

void RoomPlayerState::InitAsDefaultInstance() {
}

RoomPlayerState::RoomPlayerState(const RoomPlayerState& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.RoomPlayerState)
}

void RoomPlayerState::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&hp_, 0, reinterpret_cast<char*>(&speed_) -
    reinterpret_cast<char*>(&hp_) + sizeof(speed_));
}

RoomPlayerState::~RoomPlayerState() {
  // @@protoc_insertion_point(destructor:pb.RoomPlayerState)
  SharedDtor();
}

void RoomPlayerState::SharedDtor() {
}

void RoomPlayerState::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoomPlayerState::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RoomPlayerState_descriptor_;
}

const RoomPlayerState& RoomPlayerState::default_instance() {
  protobuf_InitDefaults_game_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<RoomPlayerState> RoomPlayerState_default_instance_;

RoomPlayerState* RoomPlayerState::New(::google::protobuf::Arena* arena) const {
  RoomPlayerState* n = new RoomPlayerState;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoomPlayerState::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.RoomPlayerState)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(RoomPlayerState, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<RoomPlayerState*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(hp_, speed_);

#undef ZR_HELPER_
#undef ZR_

  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool RoomPlayerState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.RoomPlayerState)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 hp = 1;
      case 1: {
        if (tag == 8) {
          set_has_hp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hp_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_speed;
        break;
      }

      // required uint32 speed = 2;
      case 2: {
        if (tag == 16) {
         parse_speed:
          set_has_speed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &speed_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.RoomPlayerState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.RoomPlayerState)
  return false;
#undef DO_
}

void RoomPlayerState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.RoomPlayerState)
  // required uint32 hp = 1;
  if (has_hp()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->hp(), output);
  }

  // required uint32 speed = 2;
  if (has_speed()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->speed(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.RoomPlayerState)
}

::google::protobuf::uint8* RoomPlayerState::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.RoomPlayerState)
  // required uint32 hp = 1;
  if (has_hp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->hp(), target);
  }

  // required uint32 speed = 2;
  if (has_speed()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->speed(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.RoomPlayerState)
  return target;
}

size_t RoomPlayerState::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:pb.RoomPlayerState)
  size_t total_size = 0;

  if (has_hp()) {
    // required uint32 hp = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hp());
  }

  if (has_speed()) {
    // required uint32 speed = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->speed());
  }

  return total_size;
}
size_t RoomPlayerState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.RoomPlayerState)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint32 hp = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hp());

    // required uint32 speed = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->speed());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoomPlayerState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.RoomPlayerState)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const RoomPlayerState* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RoomPlayerState>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.RoomPlayerState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.RoomPlayerState)
    UnsafeMergeFrom(*source);
  }
}

void RoomPlayerState::MergeFrom(const RoomPlayerState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.RoomPlayerState)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void RoomPlayerState::UnsafeMergeFrom(const RoomPlayerState& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_hp()) {
      set_hp(from.hp());
    }
    if (from.has_speed()) {
      set_speed(from.speed());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void RoomPlayerState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.RoomPlayerState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoomPlayerState::CopyFrom(const RoomPlayerState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.RoomPlayerState)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool RoomPlayerState::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void RoomPlayerState::Swap(RoomPlayerState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoomPlayerState::InternalSwap(RoomPlayerState* other) {
  std::swap(hp_, other->hp_);
  std::swap(speed_, other->speed_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoomPlayerState::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RoomPlayerState_descriptor_;
  metadata.reflection = RoomPlayerState_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RoomPlayerState

// required uint32 hp = 1;
bool RoomPlayerState::has_hp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RoomPlayerState::set_has_hp() {
  _has_bits_[0] |= 0x00000001u;
}
void RoomPlayerState::clear_has_hp() {
  _has_bits_[0] &= ~0x00000001u;
}
void RoomPlayerState::clear_hp() {
  hp_ = 0u;
  clear_has_hp();
}
::google::protobuf::uint32 RoomPlayerState::hp() const {
  // @@protoc_insertion_point(field_get:pb.RoomPlayerState.hp)
  return hp_;
}
void RoomPlayerState::set_hp(::google::protobuf::uint32 value) {
  set_has_hp();
  hp_ = value;
  // @@protoc_insertion_point(field_set:pb.RoomPlayerState.hp)
}

// required uint32 speed = 2;
bool RoomPlayerState::has_speed() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RoomPlayerState::set_has_speed() {
  _has_bits_[0] |= 0x00000002u;
}
void RoomPlayerState::clear_has_speed() {
  _has_bits_[0] &= ~0x00000002u;
}
void RoomPlayerState::clear_speed() {
  speed_ = 0u;
  clear_has_speed();
}
::google::protobuf::uint32 RoomPlayerState::speed() const {
  // @@protoc_insertion_point(field_get:pb.RoomPlayerState.speed)
  return speed_;
}
void RoomPlayerState::set_speed(::google::protobuf::uint32 value) {
  set_has_speed();
  speed_ = value;
  // @@protoc_insertion_point(field_set:pb.RoomPlayerState.speed)
}

inline const RoomPlayerState* RoomPlayerState::internal_default_instance() {
  return &RoomPlayerState_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoomPlayerSpell::kXmlIdFieldNumber;
const int RoomPlayerSpell::kLevelFieldNumber;
const int RoomPlayerSpell::kCdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoomPlayerSpell::RoomPlayerSpell()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_game_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.RoomPlayerSpell)
}

void RoomPlayerSpell::InitAsDefaultInstance() {
}

RoomPlayerSpell::RoomPlayerSpell(const RoomPlayerSpell& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.RoomPlayerSpell)
}

void RoomPlayerSpell::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&xml_id_, 0, reinterpret_cast<char*>(&cd_) -
    reinterpret_cast<char*>(&xml_id_) + sizeof(cd_));
}

RoomPlayerSpell::~RoomPlayerSpell() {
  // @@protoc_insertion_point(destructor:pb.RoomPlayerSpell)
  SharedDtor();
}

void RoomPlayerSpell::SharedDtor() {
}

void RoomPlayerSpell::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoomPlayerSpell::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RoomPlayerSpell_descriptor_;
}

const RoomPlayerSpell& RoomPlayerSpell::default_instance() {
  protobuf_InitDefaults_game_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<RoomPlayerSpell> RoomPlayerSpell_default_instance_;

RoomPlayerSpell* RoomPlayerSpell::New(::google::protobuf::Arena* arena) const {
  RoomPlayerSpell* n = new RoomPlayerSpell;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoomPlayerSpell::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.RoomPlayerSpell)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(RoomPlayerSpell, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<RoomPlayerSpell*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(xml_id_, cd_);

#undef ZR_HELPER_
#undef ZR_

  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool RoomPlayerSpell::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.RoomPlayerSpell)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 xml_id = 1;
      case 1: {
        if (tag == 8) {
          set_has_xml_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &xml_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_level;
        break;
      }

      // required uint32 level = 2;
      case 2: {
        if (tag == 16) {
         parse_level:
          set_has_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_cd;
        break;
      }

      // required uint32 cd = 3;
      case 3: {
        if (tag == 24) {
         parse_cd:
          set_has_cd();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cd_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.RoomPlayerSpell)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.RoomPlayerSpell)
  return false;
#undef DO_
}

void RoomPlayerSpell::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.RoomPlayerSpell)
  // required uint32 xml_id = 1;
  if (has_xml_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->xml_id(), output);
  }

  // required uint32 level = 2;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->level(), output);
  }

  // required uint32 cd = 3;
  if (has_cd()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->cd(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.RoomPlayerSpell)
}

::google::protobuf::uint8* RoomPlayerSpell::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.RoomPlayerSpell)
  // required uint32 xml_id = 1;
  if (has_xml_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->xml_id(), target);
  }

  // required uint32 level = 2;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->level(), target);
  }

  // required uint32 cd = 3;
  if (has_cd()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->cd(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.RoomPlayerSpell)
  return target;
}

size_t RoomPlayerSpell::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:pb.RoomPlayerSpell)
  size_t total_size = 0;

  if (has_xml_id()) {
    // required uint32 xml_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->xml_id());
  }

  if (has_level()) {
    // required uint32 level = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->level());
  }

  if (has_cd()) {
    // required uint32 cd = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cd());
  }

  return total_size;
}
size_t RoomPlayerSpell::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.RoomPlayerSpell)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required uint32 xml_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->xml_id());

    // required uint32 level = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->level());

    // required uint32 cd = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cd());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoomPlayerSpell::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.RoomPlayerSpell)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const RoomPlayerSpell* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RoomPlayerSpell>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.RoomPlayerSpell)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.RoomPlayerSpell)
    UnsafeMergeFrom(*source);
  }
}

void RoomPlayerSpell::MergeFrom(const RoomPlayerSpell& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.RoomPlayerSpell)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void RoomPlayerSpell::UnsafeMergeFrom(const RoomPlayerSpell& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_xml_id()) {
      set_xml_id(from.xml_id());
    }
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_cd()) {
      set_cd(from.cd());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void RoomPlayerSpell::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.RoomPlayerSpell)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoomPlayerSpell::CopyFrom(const RoomPlayerSpell& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.RoomPlayerSpell)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool RoomPlayerSpell::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void RoomPlayerSpell::Swap(RoomPlayerSpell* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoomPlayerSpell::InternalSwap(RoomPlayerSpell* other) {
  std::swap(xml_id_, other->xml_id_);
  std::swap(level_, other->level_);
  std::swap(cd_, other->cd_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoomPlayerSpell::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RoomPlayerSpell_descriptor_;
  metadata.reflection = RoomPlayerSpell_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RoomPlayerSpell

// required uint32 xml_id = 1;
bool RoomPlayerSpell::has_xml_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RoomPlayerSpell::set_has_xml_id() {
  _has_bits_[0] |= 0x00000001u;
}
void RoomPlayerSpell::clear_has_xml_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void RoomPlayerSpell::clear_xml_id() {
  xml_id_ = 0u;
  clear_has_xml_id();
}
::google::protobuf::uint32 RoomPlayerSpell::xml_id() const {
  // @@protoc_insertion_point(field_get:pb.RoomPlayerSpell.xml_id)
  return xml_id_;
}
void RoomPlayerSpell::set_xml_id(::google::protobuf::uint32 value) {
  set_has_xml_id();
  xml_id_ = value;
  // @@protoc_insertion_point(field_set:pb.RoomPlayerSpell.xml_id)
}

// required uint32 level = 2;
bool RoomPlayerSpell::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RoomPlayerSpell::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
void RoomPlayerSpell::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
void RoomPlayerSpell::clear_level() {
  level_ = 0u;
  clear_has_level();
}
::google::protobuf::uint32 RoomPlayerSpell::level() const {
  // @@protoc_insertion_point(field_get:pb.RoomPlayerSpell.level)
  return level_;
}
void RoomPlayerSpell::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:pb.RoomPlayerSpell.level)
}

// required uint32 cd = 3;
bool RoomPlayerSpell::has_cd() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void RoomPlayerSpell::set_has_cd() {
  _has_bits_[0] |= 0x00000004u;
}
void RoomPlayerSpell::clear_has_cd() {
  _has_bits_[0] &= ~0x00000004u;
}
void RoomPlayerSpell::clear_cd() {
  cd_ = 0u;
  clear_has_cd();
}
::google::protobuf::uint32 RoomPlayerSpell::cd() const {
  // @@protoc_insertion_point(field_get:pb.RoomPlayerSpell.cd)
  return cd_;
}
void RoomPlayerSpell::set_cd(::google::protobuf::uint32 value) {
  set_has_cd();
  cd_ = value;
  // @@protoc_insertion_point(field_set:pb.RoomPlayerSpell.cd)
}

inline const RoomPlayerSpell* RoomPlayerSpell::internal_default_instance() {
  return &RoomPlayerSpell_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoomItem::kIdFieldNumber;
const int RoomItem::kXmlIdFieldNumber;
const int RoomItem::kPosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoomItem::RoomItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_game_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.RoomItem)
}

void RoomItem::InitAsDefaultInstance() {
  pos_ = const_cast< ::pb::Vector*>(
      ::pb::Vector::internal_default_instance());
}

RoomItem::RoomItem(const RoomItem& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.RoomItem)
}

void RoomItem::SharedCtor() {
  _cached_size_ = 0;
  pos_ = NULL;
  ::memset(&id_, 0, reinterpret_cast<char*>(&xml_id_) -
    reinterpret_cast<char*>(&id_) + sizeof(xml_id_));
}

RoomItem::~RoomItem() {
  // @@protoc_insertion_point(destructor:pb.RoomItem)
  SharedDtor();
}

void RoomItem::SharedDtor() {
  if (this != &RoomItem_default_instance_.get()) {
    delete pos_;
  }
}

void RoomItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoomItem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RoomItem_descriptor_;
}

const RoomItem& RoomItem::default_instance() {
  protobuf_InitDefaults_game_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<RoomItem> RoomItem_default_instance_;

RoomItem* RoomItem::New(::google::protobuf::Arena* arena) const {
  RoomItem* n = new RoomItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoomItem::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.RoomItem)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(RoomItem, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<RoomItem*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 7u) {
    ZR_(id_, xml_id_);
    if (has_pos()) {
      if (pos_ != NULL) pos_->::pb::Vector::Clear();
    }
  }

#undef ZR_HELPER_
#undef ZR_

  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool RoomItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.RoomItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (tag == 8) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_xml_id;
        break;
      }

      // required uint32 xml_id = 2;
      case 2: {
        if (tag == 16) {
         parse_xml_id:
          set_has_xml_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &xml_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_pos;
        break;
      }

      // required .pb.Vector pos = 3;
      case 3: {
        if (tag == 26) {
         parse_pos:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.RoomItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.RoomItem)
  return false;
#undef DO_
}

void RoomItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.RoomItem)
  // required uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // required uint32 xml_id = 2;
  if (has_xml_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->xml_id(), output);
  }

  // required .pb.Vector pos = 3;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->pos_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.RoomItem)
}

::google::protobuf::uint8* RoomItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.RoomItem)
  // required uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // required uint32 xml_id = 2;
  if (has_xml_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->xml_id(), target);
  }

  // required .pb.Vector pos = 3;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->pos_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.RoomItem)
  return target;
}

size_t RoomItem::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:pb.RoomItem)
  size_t total_size = 0;

  if (has_id()) {
    // required uint32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  if (has_xml_id()) {
    // required uint32 xml_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->xml_id());
  }

  if (has_pos()) {
    // required .pb.Vector pos = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pos_);
  }

  return total_size;
}
size_t RoomItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.RoomItem)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required uint32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());

    // required uint32 xml_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->xml_id());

    // required .pb.Vector pos = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pos_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoomItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.RoomItem)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const RoomItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RoomItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.RoomItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.RoomItem)
    UnsafeMergeFrom(*source);
  }
}

void RoomItem::MergeFrom(const RoomItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.RoomItem)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void RoomItem::UnsafeMergeFrom(const RoomItem& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_xml_id()) {
      set_xml_id(from.xml_id());
    }
    if (from.has_pos()) {
      mutable_pos()->::pb::Vector::MergeFrom(from.pos());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void RoomItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.RoomItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoomItem::CopyFrom(const RoomItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.RoomItem)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool RoomItem::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  if (has_pos()) {
    if (!this->pos_->IsInitialized()) return false;
  }
  return true;
}

void RoomItem::Swap(RoomItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoomItem::InternalSwap(RoomItem* other) {
  std::swap(id_, other->id_);
  std::swap(xml_id_, other->xml_id_);
  std::swap(pos_, other->pos_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoomItem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RoomItem_descriptor_;
  metadata.reflection = RoomItem_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RoomItem

// required uint32 id = 1;
bool RoomItem::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RoomItem::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void RoomItem::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void RoomItem::clear_id() {
  id_ = 0u;
  clear_has_id();
}
::google::protobuf::uint32 RoomItem::id() const {
  // @@protoc_insertion_point(field_get:pb.RoomItem.id)
  return id_;
}
void RoomItem::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:pb.RoomItem.id)
}

// required uint32 xml_id = 2;
bool RoomItem::has_xml_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RoomItem::set_has_xml_id() {
  _has_bits_[0] |= 0x00000002u;
}
void RoomItem::clear_has_xml_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void RoomItem::clear_xml_id() {
  xml_id_ = 0u;
  clear_has_xml_id();
}
::google::protobuf::uint32 RoomItem::xml_id() const {
  // @@protoc_insertion_point(field_get:pb.RoomItem.xml_id)
  return xml_id_;
}
void RoomItem::set_xml_id(::google::protobuf::uint32 value) {
  set_has_xml_id();
  xml_id_ = value;
  // @@protoc_insertion_point(field_set:pb.RoomItem.xml_id)
}

// required .pb.Vector pos = 3;
bool RoomItem::has_pos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void RoomItem::set_has_pos() {
  _has_bits_[0] |= 0x00000004u;
}
void RoomItem::clear_has_pos() {
  _has_bits_[0] &= ~0x00000004u;
}
void RoomItem::clear_pos() {
  if (pos_ != NULL) pos_->::pb::Vector::Clear();
  clear_has_pos();
}
const ::pb::Vector& RoomItem::pos() const {
  // @@protoc_insertion_point(field_get:pb.RoomItem.pos)
  return pos_ != NULL ? *pos_
                         : *::pb::Vector::internal_default_instance();
}
::pb::Vector* RoomItem::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) {
    pos_ = new ::pb::Vector;
  }
  // @@protoc_insertion_point(field_mutable:pb.RoomItem.pos)
  return pos_;
}
::pb::Vector* RoomItem::release_pos() {
  // @@protoc_insertion_point(field_release:pb.RoomItem.pos)
  clear_has_pos();
  ::pb::Vector* temp = pos_;
  pos_ = NULL;
  return temp;
}
void RoomItem::set_allocated_pos(::pb::Vector* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.RoomItem.pos)
}

inline const RoomItem* RoomItem::internal_default_instance() {
  return &RoomItem_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoomBuff::kIdFieldNumber;
const int RoomBuff::kXmlIdFieldNumber;
const int RoomBuff::kPlayerIdFieldNumber;
const int RoomBuff::kPosFieldNumber;
const int RoomBuff::kDirFieldNumber;
const int RoomBuff::kRemainTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoomBuff::RoomBuff()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_game_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.RoomBuff)
}

void RoomBuff::InitAsDefaultInstance() {
  pos_ = const_cast< ::pb::Vector*>(
      ::pb::Vector::internal_default_instance());
  dir_ = const_cast< ::pb::Vector*>(
      ::pb::Vector::internal_default_instance());
}

RoomBuff::RoomBuff(const RoomBuff& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.RoomBuff)
}

void RoomBuff::SharedCtor() {
  _cached_size_ = 0;
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pos_ = NULL;
  dir_ = NULL;
  ::memset(&xml_id_, 0, reinterpret_cast<char*>(&remain_time_) -
    reinterpret_cast<char*>(&xml_id_) + sizeof(remain_time_));
}

RoomBuff::~RoomBuff() {
  // @@protoc_insertion_point(destructor:pb.RoomBuff)
  SharedDtor();
}

void RoomBuff::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &RoomBuff_default_instance_.get()) {
    delete pos_;
    delete dir_;
  }
}

void RoomBuff::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoomBuff::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RoomBuff_descriptor_;
}

const RoomBuff& RoomBuff::default_instance() {
  protobuf_InitDefaults_game_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<RoomBuff> RoomBuff_default_instance_;

RoomBuff* RoomBuff::New(::google::protobuf::Arena* arena) const {
  RoomBuff* n = new RoomBuff;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoomBuff::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.RoomBuff)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(RoomBuff, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<RoomBuff*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 63u) {
    ZR_(xml_id_, remain_time_);
    if (has_id()) {
      id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_pos()) {
      if (pos_ != NULL) pos_->::pb::Vector::Clear();
    }
    if (has_dir()) {
      if (dir_ != NULL) dir_->::pb::Vector::Clear();
    }
  }

#undef ZR_HELPER_
#undef ZR_

  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool RoomBuff::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.RoomBuff)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pb.RoomBuff.id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_xml_id;
        break;
      }

      // required uint32 xml_id = 2;
      case 2: {
        if (tag == 16) {
         parse_xml_id:
          set_has_xml_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &xml_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_player_id;
        break;
      }

      // optional uint32 player_id = 3;
      case 3: {
        if (tag == 24) {
         parse_player_id:
          set_has_player_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &player_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_pos;
        break;
      }

      // optional .pb.Vector pos = 4;
      case 4: {
        if (tag == 34) {
         parse_pos:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_dir;
        break;
      }

      // optional .pb.Vector dir = 5;
      case 5: {
        if (tag == 42) {
         parse_dir:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_dir()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_remain_time;
        break;
      }

      // required uint32 remain_time = 6;
      case 6: {
        if (tag == 48) {
         parse_remain_time:
          set_has_remain_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &remain_time_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.RoomBuff)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.RoomBuff)
  return false;
#undef DO_
}

void RoomBuff::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.RoomBuff)
  // required string id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pb.RoomBuff.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // required uint32 xml_id = 2;
  if (has_xml_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->xml_id(), output);
  }

  // optional uint32 player_id = 3;
  if (has_player_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->player_id(), output);
  }

  // optional .pb.Vector pos = 4;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->pos_, output);
  }

  // optional .pb.Vector dir = 5;
  if (has_dir()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->dir_, output);
  }

  // required uint32 remain_time = 6;
  if (has_remain_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->remain_time(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.RoomBuff)
}

::google::protobuf::uint8* RoomBuff::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.RoomBuff)
  // required string id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pb.RoomBuff.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // required uint32 xml_id = 2;
  if (has_xml_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->xml_id(), target);
  }

  // optional uint32 player_id = 3;
  if (has_player_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->player_id(), target);
  }

  // optional .pb.Vector pos = 4;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->pos_, false, target);
  }

  // optional .pb.Vector dir = 5;
  if (has_dir()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->dir_, false, target);
  }

  // required uint32 remain_time = 6;
  if (has_remain_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->remain_time(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.RoomBuff)
  return target;
}

size_t RoomBuff::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:pb.RoomBuff)
  size_t total_size = 0;

  if (has_id()) {
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  if (has_xml_id()) {
    // required uint32 xml_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->xml_id());
  }

  if (has_remain_time()) {
    // required uint32 remain_time = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->remain_time());
  }

  return total_size;
}
size_t RoomBuff::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.RoomBuff)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000023) ^ 0x00000023) == 0) {  // All required fields are present.
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());

    // required uint32 xml_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->xml_id());

    // required uint32 remain_time = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->remain_time());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[2 / 32] & 28u) {
    // optional uint32 player_id = 3;
    if (has_player_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->player_id());
    }

    // optional .pb.Vector pos = 4;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->pos_);
    }

    // optional .pb.Vector dir = 5;
    if (has_dir()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->dir_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoomBuff::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.RoomBuff)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const RoomBuff* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RoomBuff>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.RoomBuff)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.RoomBuff)
    UnsafeMergeFrom(*source);
  }
}

void RoomBuff::MergeFrom(const RoomBuff& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.RoomBuff)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void RoomBuff::UnsafeMergeFrom(const RoomBuff& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (from.has_xml_id()) {
      set_xml_id(from.xml_id());
    }
    if (from.has_player_id()) {
      set_player_id(from.player_id());
    }
    if (from.has_pos()) {
      mutable_pos()->::pb::Vector::MergeFrom(from.pos());
    }
    if (from.has_dir()) {
      mutable_dir()->::pb::Vector::MergeFrom(from.dir());
    }
    if (from.has_remain_time()) {
      set_remain_time(from.remain_time());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void RoomBuff::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.RoomBuff)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoomBuff::CopyFrom(const RoomBuff& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.RoomBuff)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool RoomBuff::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000023) != 0x00000023) return false;

  if (has_pos()) {
    if (!this->pos_->IsInitialized()) return false;
  }
  if (has_dir()) {
    if (!this->dir_->IsInitialized()) return false;
  }
  return true;
}

void RoomBuff::Swap(RoomBuff* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoomBuff::InternalSwap(RoomBuff* other) {
  id_.Swap(&other->id_);
  std::swap(xml_id_, other->xml_id_);
  std::swap(player_id_, other->player_id_);
  std::swap(pos_, other->pos_);
  std::swap(dir_, other->dir_);
  std::swap(remain_time_, other->remain_time_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoomBuff::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RoomBuff_descriptor_;
  metadata.reflection = RoomBuff_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RoomBuff

// required string id = 1;
bool RoomBuff::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RoomBuff::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void RoomBuff::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void RoomBuff::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
const ::std::string& RoomBuff::id() const {
  // @@protoc_insertion_point(field_get:pb.RoomBuff.id)
  return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RoomBuff::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.RoomBuff.id)
}
void RoomBuff::set_id(const char* value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.RoomBuff.id)
}
void RoomBuff::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.RoomBuff.id)
}
::std::string* RoomBuff::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:pb.RoomBuff.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RoomBuff::release_id() {
  // @@protoc_insertion_point(field_release:pb.RoomBuff.id)
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RoomBuff::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:pb.RoomBuff.id)
}

// required uint32 xml_id = 2;
bool RoomBuff::has_xml_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RoomBuff::set_has_xml_id() {
  _has_bits_[0] |= 0x00000002u;
}
void RoomBuff::clear_has_xml_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void RoomBuff::clear_xml_id() {
  xml_id_ = 0u;
  clear_has_xml_id();
}
::google::protobuf::uint32 RoomBuff::xml_id() const {
  // @@protoc_insertion_point(field_get:pb.RoomBuff.xml_id)
  return xml_id_;
}
void RoomBuff::set_xml_id(::google::protobuf::uint32 value) {
  set_has_xml_id();
  xml_id_ = value;
  // @@protoc_insertion_point(field_set:pb.RoomBuff.xml_id)
}

// optional uint32 player_id = 3;
bool RoomBuff::has_player_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void RoomBuff::set_has_player_id() {
  _has_bits_[0] |= 0x00000004u;
}
void RoomBuff::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000004u;
}
void RoomBuff::clear_player_id() {
  player_id_ = 0u;
  clear_has_player_id();
}
::google::protobuf::uint32 RoomBuff::player_id() const {
  // @@protoc_insertion_point(field_get:pb.RoomBuff.player_id)
  return player_id_;
}
void RoomBuff::set_player_id(::google::protobuf::uint32 value) {
  set_has_player_id();
  player_id_ = value;
  // @@protoc_insertion_point(field_set:pb.RoomBuff.player_id)
}

// optional .pb.Vector pos = 4;
bool RoomBuff::has_pos() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void RoomBuff::set_has_pos() {
  _has_bits_[0] |= 0x00000008u;
}
void RoomBuff::clear_has_pos() {
  _has_bits_[0] &= ~0x00000008u;
}
void RoomBuff::clear_pos() {
  if (pos_ != NULL) pos_->::pb::Vector::Clear();
  clear_has_pos();
}
const ::pb::Vector& RoomBuff::pos() const {
  // @@protoc_insertion_point(field_get:pb.RoomBuff.pos)
  return pos_ != NULL ? *pos_
                         : *::pb::Vector::internal_default_instance();
}
::pb::Vector* RoomBuff::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) {
    pos_ = new ::pb::Vector;
  }
  // @@protoc_insertion_point(field_mutable:pb.RoomBuff.pos)
  return pos_;
}
::pb::Vector* RoomBuff::release_pos() {
  // @@protoc_insertion_point(field_release:pb.RoomBuff.pos)
  clear_has_pos();
  ::pb::Vector* temp = pos_;
  pos_ = NULL;
  return temp;
}
void RoomBuff::set_allocated_pos(::pb::Vector* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.RoomBuff.pos)
}

// optional .pb.Vector dir = 5;
bool RoomBuff::has_dir() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void RoomBuff::set_has_dir() {
  _has_bits_[0] |= 0x00000010u;
}
void RoomBuff::clear_has_dir() {
  _has_bits_[0] &= ~0x00000010u;
}
void RoomBuff::clear_dir() {
  if (dir_ != NULL) dir_->::pb::Vector::Clear();
  clear_has_dir();
}
const ::pb::Vector& RoomBuff::dir() const {
  // @@protoc_insertion_point(field_get:pb.RoomBuff.dir)
  return dir_ != NULL ? *dir_
                         : *::pb::Vector::internal_default_instance();
}
::pb::Vector* RoomBuff::mutable_dir() {
  set_has_dir();
  if (dir_ == NULL) {
    dir_ = new ::pb::Vector;
  }
  // @@protoc_insertion_point(field_mutable:pb.RoomBuff.dir)
  return dir_;
}
::pb::Vector* RoomBuff::release_dir() {
  // @@protoc_insertion_point(field_release:pb.RoomBuff.dir)
  clear_has_dir();
  ::pb::Vector* temp = dir_;
  dir_ = NULL;
  return temp;
}
void RoomBuff::set_allocated_dir(::pb::Vector* dir) {
  delete dir_;
  dir_ = dir;
  if (dir) {
    set_has_dir();
  } else {
    clear_has_dir();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.RoomBuff.dir)
}

// required uint32 remain_time = 6;
bool RoomBuff::has_remain_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void RoomBuff::set_has_remain_time() {
  _has_bits_[0] |= 0x00000020u;
}
void RoomBuff::clear_has_remain_time() {
  _has_bits_[0] &= ~0x00000020u;
}
void RoomBuff::clear_remain_time() {
  remain_time_ = 0u;
  clear_has_remain_time();
}
::google::protobuf::uint32 RoomBuff::remain_time() const {
  // @@protoc_insertion_point(field_get:pb.RoomBuff.remain_time)
  return remain_time_;
}
void RoomBuff::set_remain_time(::google::protobuf::uint32 value) {
  set_has_remain_time();
  remain_time_ = value;
  // @@protoc_insertion_point(field_set:pb.RoomBuff.remain_time)
}

inline const RoomBuff* RoomBuff::internal_default_instance() {
  return &RoomBuff_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoomSnapShot::kCurFrameFieldNumber;
const int RoomSnapShot::kPlayersFieldNumber;
const int RoomSnapShot::kItemsFieldNumber;
const int RoomSnapShot::kBuffsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoomSnapShot::RoomSnapShot()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_game_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.RoomSnapShot)
}

void RoomSnapShot::InitAsDefaultInstance() {
}

RoomSnapShot::RoomSnapShot(const RoomSnapShot& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.RoomSnapShot)
}

void RoomSnapShot::SharedCtor() {
  _cached_size_ = 0;
  cur_frame_ = 0u;
}

RoomSnapShot::~RoomSnapShot() {
  // @@protoc_insertion_point(destructor:pb.RoomSnapShot)
  SharedDtor();
}

void RoomSnapShot::SharedDtor() {
}

void RoomSnapShot::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoomSnapShot::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RoomSnapShot_descriptor_;
}

const RoomSnapShot& RoomSnapShot::default_instance() {
  protobuf_InitDefaults_game_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<RoomSnapShot> RoomSnapShot_default_instance_;

RoomSnapShot* RoomSnapShot::New(::google::protobuf::Arena* arena) const {
  RoomSnapShot* n = new RoomSnapShot;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoomSnapShot::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.RoomSnapShot)
  cur_frame_ = 0u;
  players_.Clear();
  items_.Clear();
  buffs_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool RoomSnapShot::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.RoomSnapShot)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 cur_frame = 1;
      case 1: {
        if (tag == 8) {
          set_has_cur_frame();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cur_frame_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_players;
        break;
      }

      // repeated .pb.RoomPlayer players = 2;
      case 2: {
        if (tag == 18) {
         parse_players:
          DO_(input->IncrementRecursionDepth());
         parse_loop_players:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_players()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_players;
        if (input->ExpectTag(26)) goto parse_loop_items;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .pb.RoomItem items = 3;
      case 3: {
        if (tag == 26) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_items:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_items()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_items;
        if (input->ExpectTag(34)) goto parse_loop_buffs;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .pb.RoomBuff buffs = 4;
      case 4: {
        if (tag == 34) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_buffs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_buffs()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_loop_buffs;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.RoomSnapShot)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.RoomSnapShot)
  return false;
#undef DO_
}

void RoomSnapShot::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.RoomSnapShot)
  // required uint32 cur_frame = 1;
  if (has_cur_frame()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->cur_frame(), output);
  }

  // repeated .pb.RoomPlayer players = 2;
  for (unsigned int i = 0, n = this->players_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->players(i), output);
  }

  // repeated .pb.RoomItem items = 3;
  for (unsigned int i = 0, n = this->items_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->items(i), output);
  }

  // repeated .pb.RoomBuff buffs = 4;
  for (unsigned int i = 0, n = this->buffs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->buffs(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.RoomSnapShot)
}

::google::protobuf::uint8* RoomSnapShot::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.RoomSnapShot)
  // required uint32 cur_frame = 1;
  if (has_cur_frame()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->cur_frame(), target);
  }

  // repeated .pb.RoomPlayer players = 2;
  for (unsigned int i = 0, n = this->players_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->players(i), false, target);
  }

  // repeated .pb.RoomItem items = 3;
  for (unsigned int i = 0, n = this->items_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->items(i), false, target);
  }

  // repeated .pb.RoomBuff buffs = 4;
  for (unsigned int i = 0, n = this->buffs_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->buffs(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.RoomSnapShot)
  return target;
}

size_t RoomSnapShot::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.RoomSnapShot)
  size_t total_size = 0;

  // required uint32 cur_frame = 1;
  if (has_cur_frame()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cur_frame());
  }
  // repeated .pb.RoomPlayer players = 2;
  {
    unsigned int count = this->players_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->players(i));
    }
  }

  // repeated .pb.RoomItem items = 3;
  {
    unsigned int count = this->items_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->items(i));
    }
  }

  // repeated .pb.RoomBuff buffs = 4;
  {
    unsigned int count = this->buffs_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->buffs(i));
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoomSnapShot::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.RoomSnapShot)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const RoomSnapShot* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RoomSnapShot>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.RoomSnapShot)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.RoomSnapShot)
    UnsafeMergeFrom(*source);
  }
}

void RoomSnapShot::MergeFrom(const RoomSnapShot& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.RoomSnapShot)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void RoomSnapShot::UnsafeMergeFrom(const RoomSnapShot& from) {
  GOOGLE_DCHECK(&from != this);
  players_.MergeFrom(from.players_);
  items_.MergeFrom(from.items_);
  buffs_.MergeFrom(from.buffs_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cur_frame()) {
      set_cur_frame(from.cur_frame());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void RoomSnapShot::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.RoomSnapShot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoomSnapShot::CopyFrom(const RoomSnapShot& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.RoomSnapShot)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool RoomSnapShot::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->players())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->items())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->buffs())) return false;
  return true;
}

void RoomSnapShot::Swap(RoomSnapShot* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoomSnapShot::InternalSwap(RoomSnapShot* other) {
  std::swap(cur_frame_, other->cur_frame_);
  players_.UnsafeArenaSwap(&other->players_);
  items_.UnsafeArenaSwap(&other->items_);
  buffs_.UnsafeArenaSwap(&other->buffs_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoomSnapShot::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RoomSnapShot_descriptor_;
  metadata.reflection = RoomSnapShot_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RoomSnapShot

// required uint32 cur_frame = 1;
bool RoomSnapShot::has_cur_frame() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RoomSnapShot::set_has_cur_frame() {
  _has_bits_[0] |= 0x00000001u;
}
void RoomSnapShot::clear_has_cur_frame() {
  _has_bits_[0] &= ~0x00000001u;
}
void RoomSnapShot::clear_cur_frame() {
  cur_frame_ = 0u;
  clear_has_cur_frame();
}
::google::protobuf::uint32 RoomSnapShot::cur_frame() const {
  // @@protoc_insertion_point(field_get:pb.RoomSnapShot.cur_frame)
  return cur_frame_;
}
void RoomSnapShot::set_cur_frame(::google::protobuf::uint32 value) {
  set_has_cur_frame();
  cur_frame_ = value;
  // @@protoc_insertion_point(field_set:pb.RoomSnapShot.cur_frame)
}

// repeated .pb.RoomPlayer players = 2;
int RoomSnapShot::players_size() const {
  return players_.size();
}
void RoomSnapShot::clear_players() {
  players_.Clear();
}
const ::pb::RoomPlayer& RoomSnapShot::players(int index) const {
  // @@protoc_insertion_point(field_get:pb.RoomSnapShot.players)
  return players_.Get(index);
}
::pb::RoomPlayer* RoomSnapShot::mutable_players(int index) {
  // @@protoc_insertion_point(field_mutable:pb.RoomSnapShot.players)
  return players_.Mutable(index);
}
::pb::RoomPlayer* RoomSnapShot::add_players() {
  // @@protoc_insertion_point(field_add:pb.RoomSnapShot.players)
  return players_.Add();
}
::google::protobuf::RepeatedPtrField< ::pb::RoomPlayer >*
RoomSnapShot::mutable_players() {
  // @@protoc_insertion_point(field_mutable_list:pb.RoomSnapShot.players)
  return &players_;
}
const ::google::protobuf::RepeatedPtrField< ::pb::RoomPlayer >&
RoomSnapShot::players() const {
  // @@protoc_insertion_point(field_list:pb.RoomSnapShot.players)
  return players_;
}

// repeated .pb.RoomItem items = 3;
int RoomSnapShot::items_size() const {
  return items_.size();
}
void RoomSnapShot::clear_items() {
  items_.Clear();
}
const ::pb::RoomItem& RoomSnapShot::items(int index) const {
  // @@protoc_insertion_point(field_get:pb.RoomSnapShot.items)
  return items_.Get(index);
}
::pb::RoomItem* RoomSnapShot::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:pb.RoomSnapShot.items)
  return items_.Mutable(index);
}
::pb::RoomItem* RoomSnapShot::add_items() {
  // @@protoc_insertion_point(field_add:pb.RoomSnapShot.items)
  return items_.Add();
}
::google::protobuf::RepeatedPtrField< ::pb::RoomItem >*
RoomSnapShot::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:pb.RoomSnapShot.items)
  return &items_;
}
const ::google::protobuf::RepeatedPtrField< ::pb::RoomItem >&
RoomSnapShot::items() const {
  // @@protoc_insertion_point(field_list:pb.RoomSnapShot.items)
  return items_;
}

// repeated .pb.RoomBuff buffs = 4;
int RoomSnapShot::buffs_size() const {
  return buffs_.size();
}
void RoomSnapShot::clear_buffs() {
  buffs_.Clear();
}
const ::pb::RoomBuff& RoomSnapShot::buffs(int index) const {
  // @@protoc_insertion_point(field_get:pb.RoomSnapShot.buffs)
  return buffs_.Get(index);
}
::pb::RoomBuff* RoomSnapShot::mutable_buffs(int index) {
  // @@protoc_insertion_point(field_mutable:pb.RoomSnapShot.buffs)
  return buffs_.Mutable(index);
}
::pb::RoomBuff* RoomSnapShot::add_buffs() {
  // @@protoc_insertion_point(field_add:pb.RoomSnapShot.buffs)
  return buffs_.Add();
}
::google::protobuf::RepeatedPtrField< ::pb::RoomBuff >*
RoomSnapShot::mutable_buffs() {
  // @@protoc_insertion_point(field_mutable_list:pb.RoomSnapShot.buffs)
  return &buffs_;
}
const ::google::protobuf::RepeatedPtrField< ::pb::RoomBuff >&
RoomSnapShot::buffs() const {
  // @@protoc_insertion_point(field_list:pb.RoomSnapShot.buffs)
  return buffs_;
}

inline const RoomSnapShot* RoomSnapShot::internal_default_instance() {
  return &RoomSnapShot_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoomLoginReq::kNicknameFieldNumber;
const int RoomLoginReq::kRoomIdFieldNumber;
const int RoomLoginReq::kRoomKeyFieldNumber;
const int RoomLoginReq::kJobFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoomLoginReq::RoomLoginReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_game_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.RoomLoginReq)
}

void RoomLoginReq::InitAsDefaultInstance() {
}

RoomLoginReq::RoomLoginReq(const RoomLoginReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.RoomLoginReq)
}

void RoomLoginReq::SharedCtor() {
  _cached_size_ = 0;
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  room_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&room_id_, 0, reinterpret_cast<char*>(&job_) -
    reinterpret_cast<char*>(&room_id_) + sizeof(job_));
}

RoomLoginReq::~RoomLoginReq() {
  // @@protoc_insertion_point(destructor:pb.RoomLoginReq)
  SharedDtor();
}

void RoomLoginReq::SharedDtor() {
  nickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  room_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RoomLoginReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoomLoginReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RoomLoginReq_descriptor_;
}

const RoomLoginReq& RoomLoginReq::default_instance() {
  protobuf_InitDefaults_game_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<RoomLoginReq> RoomLoginReq_default_instance_;

RoomLoginReq* RoomLoginReq::New(::google::protobuf::Arena* arena) const {
  RoomLoginReq* n = new RoomLoginReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoomLoginReq::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.RoomLoginReq)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(RoomLoginReq, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<RoomLoginReq*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 15u) {
    ZR_(room_id_, job_);
    if (has_nickname()) {
      nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_room_key()) {
      room_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool RoomLoginReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.RoomLoginReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string nickname = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nickname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->nickname().data(), this->nickname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pb.RoomLoginReq.nickname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_room_id;
        break;
      }

      // required uint32 room_id = 2;
      case 2: {
        if (tag == 16) {
         parse_room_id:
          set_has_room_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &room_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_room_key;
        break;
      }

      // required string room_key = 3;
      case 3: {
        if (tag == 26) {
         parse_room_key:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_room_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->room_key().data(), this->room_key().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pb.RoomLoginReq.room_key");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_job;
        break;
      }

      // required uint32 job = 4;
      case 4: {
        if (tag == 32) {
         parse_job:
          set_has_job();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &job_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.RoomLoginReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.RoomLoginReq)
  return false;
#undef DO_
}

void RoomLoginReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.RoomLoginReq)
  // required string nickname = 1;
  if (has_nickname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nickname().data(), this->nickname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pb.RoomLoginReq.nickname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->nickname(), output);
  }

  // required uint32 room_id = 2;
  if (has_room_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->room_id(), output);
  }

  // required string room_key = 3;
  if (has_room_key()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->room_key().data(), this->room_key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pb.RoomLoginReq.room_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->room_key(), output);
  }

  // required uint32 job = 4;
  if (has_job()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->job(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.RoomLoginReq)
}

::google::protobuf::uint8* RoomLoginReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.RoomLoginReq)
  // required string nickname = 1;
  if (has_nickname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nickname().data(), this->nickname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pb.RoomLoginReq.nickname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->nickname(), target);
  }

  // required uint32 room_id = 2;
  if (has_room_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->room_id(), target);
  }

  // required string room_key = 3;
  if (has_room_key()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->room_key().data(), this->room_key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pb.RoomLoginReq.room_key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->room_key(), target);
  }

  // required uint32 job = 4;
  if (has_job()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->job(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.RoomLoginReq)
  return target;
}

size_t RoomLoginReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:pb.RoomLoginReq)
  size_t total_size = 0;

  if (has_nickname()) {
    // required string nickname = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nickname());
  }

  if (has_room_id()) {
    // required uint32 room_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->room_id());
  }

  if (has_room_key()) {
    // required string room_key = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->room_key());
  }

  if (has_job()) {
    // required uint32 job = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->job());
  }

  return total_size;
}
size_t RoomLoginReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.RoomLoginReq)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required string nickname = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nickname());

    // required uint32 room_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->room_id());

    // required string room_key = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->room_key());

    // required uint32 job = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->job());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoomLoginReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.RoomLoginReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const RoomLoginReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RoomLoginReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.RoomLoginReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.RoomLoginReq)
    UnsafeMergeFrom(*source);
  }
}

void RoomLoginReq::MergeFrom(const RoomLoginReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.RoomLoginReq)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void RoomLoginReq::UnsafeMergeFrom(const RoomLoginReq& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_nickname()) {
      set_has_nickname();
      nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
    }
    if (from.has_room_id()) {
      set_room_id(from.room_id());
    }
    if (from.has_room_key()) {
      set_has_room_key();
      room_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.room_key_);
    }
    if (from.has_job()) {
      set_job(from.job());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void RoomLoginReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.RoomLoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoomLoginReq::CopyFrom(const RoomLoginReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.RoomLoginReq)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool RoomLoginReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void RoomLoginReq::Swap(RoomLoginReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoomLoginReq::InternalSwap(RoomLoginReq* other) {
  nickname_.Swap(&other->nickname_);
  std::swap(room_id_, other->room_id_);
  room_key_.Swap(&other->room_key_);
  std::swap(job_, other->job_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoomLoginReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RoomLoginReq_descriptor_;
  metadata.reflection = RoomLoginReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RoomLoginReq

// required string nickname = 1;
bool RoomLoginReq::has_nickname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RoomLoginReq::set_has_nickname() {
  _has_bits_[0] |= 0x00000001u;
}
void RoomLoginReq::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000001u;
}
void RoomLoginReq::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nickname();
}
const ::std::string& RoomLoginReq::nickname() const {
  // @@protoc_insertion_point(field_get:pb.RoomLoginReq.nickname)
  return nickname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RoomLoginReq::set_nickname(const ::std::string& value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.RoomLoginReq.nickname)
}
void RoomLoginReq::set_nickname(const char* value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.RoomLoginReq.nickname)
}
void RoomLoginReq::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.RoomLoginReq.nickname)
}
::std::string* RoomLoginReq::mutable_nickname() {
  set_has_nickname();
  // @@protoc_insertion_point(field_mutable:pb.RoomLoginReq.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RoomLoginReq::release_nickname() {
  // @@protoc_insertion_point(field_release:pb.RoomLoginReq.nickname)
  clear_has_nickname();
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RoomLoginReq::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    set_has_nickname();
  } else {
    clear_has_nickname();
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:pb.RoomLoginReq.nickname)
}

// required uint32 room_id = 2;
bool RoomLoginReq::has_room_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RoomLoginReq::set_has_room_id() {
  _has_bits_[0] |= 0x00000002u;
}
void RoomLoginReq::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void RoomLoginReq::clear_room_id() {
  room_id_ = 0u;
  clear_has_room_id();
}
::google::protobuf::uint32 RoomLoginReq::room_id() const {
  // @@protoc_insertion_point(field_get:pb.RoomLoginReq.room_id)
  return room_id_;
}
void RoomLoginReq::set_room_id(::google::protobuf::uint32 value) {
  set_has_room_id();
  room_id_ = value;
  // @@protoc_insertion_point(field_set:pb.RoomLoginReq.room_id)
}

// required string room_key = 3;
bool RoomLoginReq::has_room_key() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void RoomLoginReq::set_has_room_key() {
  _has_bits_[0] |= 0x00000004u;
}
void RoomLoginReq::clear_has_room_key() {
  _has_bits_[0] &= ~0x00000004u;
}
void RoomLoginReq::clear_room_key() {
  room_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_room_key();
}
const ::std::string& RoomLoginReq::room_key() const {
  // @@protoc_insertion_point(field_get:pb.RoomLoginReq.room_key)
  return room_key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RoomLoginReq::set_room_key(const ::std::string& value) {
  set_has_room_key();
  room_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.RoomLoginReq.room_key)
}
void RoomLoginReq::set_room_key(const char* value) {
  set_has_room_key();
  room_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.RoomLoginReq.room_key)
}
void RoomLoginReq::set_room_key(const char* value, size_t size) {
  set_has_room_key();
  room_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.RoomLoginReq.room_key)
}
::std::string* RoomLoginReq::mutable_room_key() {
  set_has_room_key();
  // @@protoc_insertion_point(field_mutable:pb.RoomLoginReq.room_key)
  return room_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RoomLoginReq::release_room_key() {
  // @@protoc_insertion_point(field_release:pb.RoomLoginReq.room_key)
  clear_has_room_key();
  return room_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RoomLoginReq::set_allocated_room_key(::std::string* room_key) {
  if (room_key != NULL) {
    set_has_room_key();
  } else {
    clear_has_room_key();
  }
  room_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), room_key);
  // @@protoc_insertion_point(field_set_allocated:pb.RoomLoginReq.room_key)
}

// required uint32 job = 4;
bool RoomLoginReq::has_job() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void RoomLoginReq::set_has_job() {
  _has_bits_[0] |= 0x00000008u;
}
void RoomLoginReq::clear_has_job() {
  _has_bits_[0] &= ~0x00000008u;
}
void RoomLoginReq::clear_job() {
  job_ = 0u;
  clear_has_job();
}
::google::protobuf::uint32 RoomLoginReq::job() const {
  // @@protoc_insertion_point(field_get:pb.RoomLoginReq.job)
  return job_;
}
void RoomLoginReq::set_job(::google::protobuf::uint32 value) {
  set_has_job();
  job_ = value;
  // @@protoc_insertion_point(field_set:pb.RoomLoginReq.job)
}

inline const RoomLoginReq* RoomLoginReq::internal_default_instance() {
  return &RoomLoginReq_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoomLoginRes::kIdFieldNumber;
const int RoomLoginRes::kSnapShotFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoomLoginRes::RoomLoginRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_game_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.RoomLoginRes)
}

void RoomLoginRes::InitAsDefaultInstance() {
  snap_shot_ = const_cast< ::pb::RoomSnapShot*>(
      ::pb::RoomSnapShot::internal_default_instance());
}

RoomLoginRes::RoomLoginRes(const RoomLoginRes& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.RoomLoginRes)
}

void RoomLoginRes::SharedCtor() {
  _cached_size_ = 0;
  snap_shot_ = NULL;
  id_ = 0u;
}

RoomLoginRes::~RoomLoginRes() {
  // @@protoc_insertion_point(destructor:pb.RoomLoginRes)
  SharedDtor();
}

void RoomLoginRes::SharedDtor() {
  if (this != &RoomLoginRes_default_instance_.get()) {
    delete snap_shot_;
  }
}

void RoomLoginRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoomLoginRes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RoomLoginRes_descriptor_;
}

const RoomLoginRes& RoomLoginRes::default_instance() {
  protobuf_InitDefaults_game_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<RoomLoginRes> RoomLoginRes_default_instance_;

RoomLoginRes* RoomLoginRes::New(::google::protobuf::Arena* arena) const {
  RoomLoginRes* n = new RoomLoginRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoomLoginRes::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.RoomLoginRes)
  if (_has_bits_[0 / 32] & 3u) {
    id_ = 0u;
    if (has_snap_shot()) {
      if (snap_shot_ != NULL) snap_shot_->::pb::RoomSnapShot::Clear();
    }
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool RoomLoginRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.RoomLoginRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (tag == 8) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_snap_shot;
        break;
      }

      // required .pb.RoomSnapShot snap_shot = 3;
      case 3: {
        if (tag == 26) {
         parse_snap_shot:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_snap_shot()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.RoomLoginRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.RoomLoginRes)
  return false;
#undef DO_
}

void RoomLoginRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.RoomLoginRes)
  // required uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // required .pb.RoomSnapShot snap_shot = 3;
  if (has_snap_shot()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->snap_shot_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.RoomLoginRes)
}

::google::protobuf::uint8* RoomLoginRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.RoomLoginRes)
  // required uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // required .pb.RoomSnapShot snap_shot = 3;
  if (has_snap_shot()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->snap_shot_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.RoomLoginRes)
  return target;
}

size_t RoomLoginRes::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:pb.RoomLoginRes)
  size_t total_size = 0;

  if (has_id()) {
    // required uint32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  if (has_snap_shot()) {
    // required .pb.RoomSnapShot snap_shot = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->snap_shot_);
  }

  return total_size;
}
size_t RoomLoginRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.RoomLoginRes)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());

    // required .pb.RoomSnapShot snap_shot = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->snap_shot_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoomLoginRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.RoomLoginRes)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const RoomLoginRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RoomLoginRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.RoomLoginRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.RoomLoginRes)
    UnsafeMergeFrom(*source);
  }
}

void RoomLoginRes::MergeFrom(const RoomLoginRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.RoomLoginRes)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void RoomLoginRes::UnsafeMergeFrom(const RoomLoginRes& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_snap_shot()) {
      mutable_snap_shot()->::pb::RoomSnapShot::MergeFrom(from.snap_shot());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void RoomLoginRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.RoomLoginRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoomLoginRes::CopyFrom(const RoomLoginRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.RoomLoginRes)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool RoomLoginRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_snap_shot()) {
    if (!this->snap_shot_->IsInitialized()) return false;
  }
  return true;
}

void RoomLoginRes::Swap(RoomLoginRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoomLoginRes::InternalSwap(RoomLoginRes* other) {
  std::swap(id_, other->id_);
  std::swap(snap_shot_, other->snap_shot_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoomLoginRes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RoomLoginRes_descriptor_;
  metadata.reflection = RoomLoginRes_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RoomLoginRes

// required uint32 id = 1;
bool RoomLoginRes::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RoomLoginRes::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void RoomLoginRes::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void RoomLoginRes::clear_id() {
  id_ = 0u;
  clear_has_id();
}
::google::protobuf::uint32 RoomLoginRes::id() const {
  // @@protoc_insertion_point(field_get:pb.RoomLoginRes.id)
  return id_;
}
void RoomLoginRes::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:pb.RoomLoginRes.id)
}

// required .pb.RoomSnapShot snap_shot = 3;
bool RoomLoginRes::has_snap_shot() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RoomLoginRes::set_has_snap_shot() {
  _has_bits_[0] |= 0x00000002u;
}
void RoomLoginRes::clear_has_snap_shot() {
  _has_bits_[0] &= ~0x00000002u;
}
void RoomLoginRes::clear_snap_shot() {
  if (snap_shot_ != NULL) snap_shot_->::pb::RoomSnapShot::Clear();
  clear_has_snap_shot();
}
const ::pb::RoomSnapShot& RoomLoginRes::snap_shot() const {
  // @@protoc_insertion_point(field_get:pb.RoomLoginRes.snap_shot)
  return snap_shot_ != NULL ? *snap_shot_
                         : *::pb::RoomSnapShot::internal_default_instance();
}
::pb::RoomSnapShot* RoomLoginRes::mutable_snap_shot() {
  set_has_snap_shot();
  if (snap_shot_ == NULL) {
    snap_shot_ = new ::pb::RoomSnapShot;
  }
  // @@protoc_insertion_point(field_mutable:pb.RoomLoginRes.snap_shot)
  return snap_shot_;
}
::pb::RoomSnapShot* RoomLoginRes::release_snap_shot() {
  // @@protoc_insertion_point(field_release:pb.RoomLoginRes.snap_shot)
  clear_has_snap_shot();
  ::pb::RoomSnapShot* temp = snap_shot_;
  snap_shot_ = NULL;
  return temp;
}
void RoomLoginRes::set_allocated_snap_shot(::pb::RoomSnapShot* snap_shot) {
  delete snap_shot_;
  snap_shot_ = snap_shot;
  if (snap_shot) {
    set_has_snap_shot();
  } else {
    clear_has_snap_shot();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.RoomLoginRes.snap_shot)
}

inline const RoomLoginRes* RoomLoginRes::internal_default_instance() {
  return &RoomLoginRes_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoomPlayerAdd::kPlayerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoomPlayerAdd::RoomPlayerAdd()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_game_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.RoomPlayerAdd)
}

void RoomPlayerAdd::InitAsDefaultInstance() {
  player_ = const_cast< ::pb::RoomPlayer*>(
      ::pb::RoomPlayer::internal_default_instance());
}

RoomPlayerAdd::RoomPlayerAdd(const RoomPlayerAdd& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.RoomPlayerAdd)
}

void RoomPlayerAdd::SharedCtor() {
  _cached_size_ = 0;
  player_ = NULL;
}

RoomPlayerAdd::~RoomPlayerAdd() {
  // @@protoc_insertion_point(destructor:pb.RoomPlayerAdd)
  SharedDtor();
}

void RoomPlayerAdd::SharedDtor() {
  if (this != &RoomPlayerAdd_default_instance_.get()) {
    delete player_;
  }
}

void RoomPlayerAdd::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoomPlayerAdd::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RoomPlayerAdd_descriptor_;
}

const RoomPlayerAdd& RoomPlayerAdd::default_instance() {
  protobuf_InitDefaults_game_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<RoomPlayerAdd> RoomPlayerAdd_default_instance_;

RoomPlayerAdd* RoomPlayerAdd::New(::google::protobuf::Arena* arena) const {
  RoomPlayerAdd* n = new RoomPlayerAdd;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoomPlayerAdd::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.RoomPlayerAdd)
  if (has_player()) {
    if (player_ != NULL) player_->::pb::RoomPlayer::Clear();
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool RoomPlayerAdd::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.RoomPlayerAdd)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .pb.RoomPlayer player = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_player()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.RoomPlayerAdd)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.RoomPlayerAdd)
  return false;
#undef DO_
}

void RoomPlayerAdd::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.RoomPlayerAdd)
  // required .pb.RoomPlayer player = 1;
  if (has_player()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->player_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.RoomPlayerAdd)
}

::google::protobuf::uint8* RoomPlayerAdd::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.RoomPlayerAdd)
  // required .pb.RoomPlayer player = 1;
  if (has_player()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->player_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.RoomPlayerAdd)
  return target;
}

size_t RoomPlayerAdd::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.RoomPlayerAdd)
  size_t total_size = 0;

  // required .pb.RoomPlayer player = 1;
  if (has_player()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->player_);
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoomPlayerAdd::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.RoomPlayerAdd)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const RoomPlayerAdd* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RoomPlayerAdd>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.RoomPlayerAdd)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.RoomPlayerAdd)
    UnsafeMergeFrom(*source);
  }
}

void RoomPlayerAdd::MergeFrom(const RoomPlayerAdd& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.RoomPlayerAdd)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void RoomPlayerAdd::UnsafeMergeFrom(const RoomPlayerAdd& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_player()) {
      mutable_player()->::pb::RoomPlayer::MergeFrom(from.player());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void RoomPlayerAdd::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.RoomPlayerAdd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoomPlayerAdd::CopyFrom(const RoomPlayerAdd& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.RoomPlayerAdd)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool RoomPlayerAdd::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_player()) {
    if (!this->player_->IsInitialized()) return false;
  }
  return true;
}

void RoomPlayerAdd::Swap(RoomPlayerAdd* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoomPlayerAdd::InternalSwap(RoomPlayerAdd* other) {
  std::swap(player_, other->player_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoomPlayerAdd::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RoomPlayerAdd_descriptor_;
  metadata.reflection = RoomPlayerAdd_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RoomPlayerAdd

// required .pb.RoomPlayer player = 1;
bool RoomPlayerAdd::has_player() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RoomPlayerAdd::set_has_player() {
  _has_bits_[0] |= 0x00000001u;
}
void RoomPlayerAdd::clear_has_player() {
  _has_bits_[0] &= ~0x00000001u;
}
void RoomPlayerAdd::clear_player() {
  if (player_ != NULL) player_->::pb::RoomPlayer::Clear();
  clear_has_player();
}
const ::pb::RoomPlayer& RoomPlayerAdd::player() const {
  // @@protoc_insertion_point(field_get:pb.RoomPlayerAdd.player)
  return player_ != NULL ? *player_
                         : *::pb::RoomPlayer::internal_default_instance();
}
::pb::RoomPlayer* RoomPlayerAdd::mutable_player() {
  set_has_player();
  if (player_ == NULL) {
    player_ = new ::pb::RoomPlayer;
  }
  // @@protoc_insertion_point(field_mutable:pb.RoomPlayerAdd.player)
  return player_;
}
::pb::RoomPlayer* RoomPlayerAdd::release_player() {
  // @@protoc_insertion_point(field_release:pb.RoomPlayerAdd.player)
  clear_has_player();
  ::pb::RoomPlayer* temp = player_;
  player_ = NULL;
  return temp;
}
void RoomPlayerAdd::set_allocated_player(::pb::RoomPlayer* player) {
  delete player_;
  player_ = player;
  if (player) {
    set_has_player();
  } else {
    clear_has_player();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.RoomPlayerAdd.player)
}

inline const RoomPlayerAdd* RoomPlayerAdd::internal_default_instance() {
  return &RoomPlayerAdd_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoomPlayerRemove::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoomPlayerRemove::RoomPlayerRemove()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_game_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.RoomPlayerRemove)
}

void RoomPlayerRemove::InitAsDefaultInstance() {
}

RoomPlayerRemove::RoomPlayerRemove(const RoomPlayerRemove& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.RoomPlayerRemove)
}

void RoomPlayerRemove::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
}

RoomPlayerRemove::~RoomPlayerRemove() {
  // @@protoc_insertion_point(destructor:pb.RoomPlayerRemove)
  SharedDtor();
}

void RoomPlayerRemove::SharedDtor() {
}

void RoomPlayerRemove::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoomPlayerRemove::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RoomPlayerRemove_descriptor_;
}

const RoomPlayerRemove& RoomPlayerRemove::default_instance() {
  protobuf_InitDefaults_game_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<RoomPlayerRemove> RoomPlayerRemove_default_instance_;

RoomPlayerRemove* RoomPlayerRemove::New(::google::protobuf::Arena* arena) const {
  RoomPlayerRemove* n = new RoomPlayerRemove;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoomPlayerRemove::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.RoomPlayerRemove)
  id_ = 0u;
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool RoomPlayerRemove::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.RoomPlayerRemove)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (tag == 8) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.RoomPlayerRemove)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.RoomPlayerRemove)
  return false;
#undef DO_
}

void RoomPlayerRemove::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.RoomPlayerRemove)
  // required uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.RoomPlayerRemove)
}

::google::protobuf::uint8* RoomPlayerRemove::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.RoomPlayerRemove)
  // required uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.RoomPlayerRemove)
  return target;
}

size_t RoomPlayerRemove::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.RoomPlayerRemove)
  size_t total_size = 0;

  // required uint32 id = 1;
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoomPlayerRemove::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.RoomPlayerRemove)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const RoomPlayerRemove* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RoomPlayerRemove>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.RoomPlayerRemove)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.RoomPlayerRemove)
    UnsafeMergeFrom(*source);
  }
}

void RoomPlayerRemove::MergeFrom(const RoomPlayerRemove& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.RoomPlayerRemove)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void RoomPlayerRemove::UnsafeMergeFrom(const RoomPlayerRemove& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void RoomPlayerRemove::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.RoomPlayerRemove)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoomPlayerRemove::CopyFrom(const RoomPlayerRemove& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.RoomPlayerRemove)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool RoomPlayerRemove::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void RoomPlayerRemove::Swap(RoomPlayerRemove* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoomPlayerRemove::InternalSwap(RoomPlayerRemove* other) {
  std::swap(id_, other->id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoomPlayerRemove::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RoomPlayerRemove_descriptor_;
  metadata.reflection = RoomPlayerRemove_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RoomPlayerRemove

// required uint32 id = 1;
bool RoomPlayerRemove::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RoomPlayerRemove::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void RoomPlayerRemove::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void RoomPlayerRemove::clear_id() {
  id_ = 0u;
  clear_has_id();
}
::google::protobuf::uint32 RoomPlayerRemove::id() const {
  // @@protoc_insertion_point(field_get:pb.RoomPlayerRemove.id)
  return id_;
}
void RoomPlayerRemove::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:pb.RoomPlayerRemove.id)
}

inline const RoomPlayerRemove* RoomPlayerRemove::internal_default_instance() {
  return &RoomPlayerRemove_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Frame::kCmdFieldNumber;
const int Frame::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Frame::Frame()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_game_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.Frame)
}

void Frame::InitAsDefaultInstance() {
}

Frame::Frame(const Frame& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.Frame)
}

void Frame::SharedCtor() {
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cmd_ = 0u;
}

Frame::~Frame() {
  // @@protoc_insertion_point(destructor:pb.Frame)
  SharedDtor();
}

void Frame::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Frame::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Frame::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Frame_descriptor_;
}

const Frame& Frame::default_instance() {
  protobuf_InitDefaults_game_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Frame> Frame_default_instance_;

Frame* Frame::New(::google::protobuf::Arena* arena) const {
  Frame* n = new Frame;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Frame::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.Frame)
  if (_has_bits_[0 / 32] & 3u) {
    cmd_ = 0u;
    if (has_data()) {
      data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Frame::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.Frame)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 cmd = 1;
      case 1: {
        if (tag == 8) {
          set_has_cmd();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cmd_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_data;
        break;
      }

      // required bytes data = 2;
      case 2: {
        if (tag == 18) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.Frame)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.Frame)
  return false;
#undef DO_
}

void Frame::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.Frame)
  // required uint32 cmd = 1;
  if (has_cmd()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->cmd(), output);
  }

  // required bytes data = 2;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.Frame)
}

::google::protobuf::uint8* Frame::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.Frame)
  // required uint32 cmd = 1;
  if (has_cmd()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->cmd(), target);
  }

  // required bytes data = 2;
  if (has_data()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.Frame)
  return target;
}

size_t Frame::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:pb.Frame)
  size_t total_size = 0;

  if (has_cmd()) {
    // required uint32 cmd = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cmd());
  }

  if (has_data()) {
    // required bytes data = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  return total_size;
}
size_t Frame::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.Frame)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint32 cmd = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cmd());

    // required bytes data = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Frame::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.Frame)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Frame* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Frame>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.Frame)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.Frame)
    UnsafeMergeFrom(*source);
  }
}

void Frame::MergeFrom(const Frame& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.Frame)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Frame::UnsafeMergeFrom(const Frame& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cmd()) {
      set_cmd(from.cmd());
    }
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void Frame::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.Frame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Frame::CopyFrom(const Frame& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.Frame)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Frame::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void Frame::Swap(Frame* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Frame::InternalSwap(Frame* other) {
  std::swap(cmd_, other->cmd_);
  data_.Swap(&other->data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Frame::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Frame_descriptor_;
  metadata.reflection = Frame_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Frame

// required uint32 cmd = 1;
bool Frame::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Frame::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
void Frame::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
void Frame::clear_cmd() {
  cmd_ = 0u;
  clear_has_cmd();
}
::google::protobuf::uint32 Frame::cmd() const {
  // @@protoc_insertion_point(field_get:pb.Frame.cmd)
  return cmd_;
}
void Frame::set_cmd(::google::protobuf::uint32 value) {
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:pb.Frame.cmd)
}

// required bytes data = 2;
bool Frame::has_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Frame::set_has_data() {
  _has_bits_[0] |= 0x00000002u;
}
void Frame::clear_has_data() {
  _has_bits_[0] &= ~0x00000002u;
}
void Frame::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
const ::std::string& Frame::data() const {
  // @@protoc_insertion_point(field_get:pb.Frame.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Frame::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.Frame.data)
}
void Frame::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.Frame.data)
}
void Frame::set_data(const void* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.Frame.data)
}
::std::string* Frame::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:pb.Frame.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Frame::release_data() {
  // @@protoc_insertion_point(field_release:pb.Frame.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Frame::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:pb.Frame.data)
}

inline const Frame* Frame::internal_default_instance() {
  return &Frame_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoomFrameNotify::kFrameFieldNumber;
const int RoomFrameNotify::kListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoomFrameNotify::RoomFrameNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_game_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.RoomFrameNotify)
}

void RoomFrameNotify::InitAsDefaultInstance() {
}

RoomFrameNotify::RoomFrameNotify(const RoomFrameNotify& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.RoomFrameNotify)
}

void RoomFrameNotify::SharedCtor() {
  _cached_size_ = 0;
  frame_ = 0u;
}

RoomFrameNotify::~RoomFrameNotify() {
  // @@protoc_insertion_point(destructor:pb.RoomFrameNotify)
  SharedDtor();
}

void RoomFrameNotify::SharedDtor() {
}

void RoomFrameNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoomFrameNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RoomFrameNotify_descriptor_;
}

const RoomFrameNotify& RoomFrameNotify::default_instance() {
  protobuf_InitDefaults_game_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<RoomFrameNotify> RoomFrameNotify_default_instance_;

RoomFrameNotify* RoomFrameNotify::New(::google::protobuf::Arena* arena) const {
  RoomFrameNotify* n = new RoomFrameNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoomFrameNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.RoomFrameNotify)
  frame_ = 0u;
  list_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool RoomFrameNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.RoomFrameNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 frame = 1;
      case 1: {
        if (tag == 8) {
          set_has_frame();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &frame_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_list;
        break;
      }

      // repeated .pb.Frame list = 2;
      case 2: {
        if (tag == 18) {
         parse_list:
          DO_(input->IncrementRecursionDepth());
         parse_loop_list:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_list()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_list;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.RoomFrameNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.RoomFrameNotify)
  return false;
#undef DO_
}

void RoomFrameNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.RoomFrameNotify)
  // required uint32 frame = 1;
  if (has_frame()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->frame(), output);
  }

  // repeated .pb.Frame list = 2;
  for (unsigned int i = 0, n = this->list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->list(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.RoomFrameNotify)
}

::google::protobuf::uint8* RoomFrameNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.RoomFrameNotify)
  // required uint32 frame = 1;
  if (has_frame()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->frame(), target);
  }

  // repeated .pb.Frame list = 2;
  for (unsigned int i = 0, n = this->list_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->list(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.RoomFrameNotify)
  return target;
}

size_t RoomFrameNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.RoomFrameNotify)
  size_t total_size = 0;

  // required uint32 frame = 1;
  if (has_frame()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->frame());
  }
  // repeated .pb.Frame list = 2;
  {
    unsigned int count = this->list_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->list(i));
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoomFrameNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.RoomFrameNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const RoomFrameNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RoomFrameNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.RoomFrameNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.RoomFrameNotify)
    UnsafeMergeFrom(*source);
  }
}

void RoomFrameNotify::MergeFrom(const RoomFrameNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.RoomFrameNotify)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void RoomFrameNotify::UnsafeMergeFrom(const RoomFrameNotify& from) {
  GOOGLE_DCHECK(&from != this);
  list_.MergeFrom(from.list_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_frame()) {
      set_frame(from.frame());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void RoomFrameNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.RoomFrameNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoomFrameNotify::CopyFrom(const RoomFrameNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.RoomFrameNotify)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool RoomFrameNotify::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->list())) return false;
  return true;
}

void RoomFrameNotify::Swap(RoomFrameNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoomFrameNotify::InternalSwap(RoomFrameNotify* other) {
  std::swap(frame_, other->frame_);
  list_.UnsafeArenaSwap(&other->list_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoomFrameNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RoomFrameNotify_descriptor_;
  metadata.reflection = RoomFrameNotify_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RoomFrameNotify

// required uint32 frame = 1;
bool RoomFrameNotify::has_frame() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RoomFrameNotify::set_has_frame() {
  _has_bits_[0] |= 0x00000001u;
}
void RoomFrameNotify::clear_has_frame() {
  _has_bits_[0] &= ~0x00000001u;
}
void RoomFrameNotify::clear_frame() {
  frame_ = 0u;
  clear_has_frame();
}
::google::protobuf::uint32 RoomFrameNotify::frame() const {
  // @@protoc_insertion_point(field_get:pb.RoomFrameNotify.frame)
  return frame_;
}
void RoomFrameNotify::set_frame(::google::protobuf::uint32 value) {
  set_has_frame();
  frame_ = value;
  // @@protoc_insertion_point(field_set:pb.RoomFrameNotify.frame)
}

// repeated .pb.Frame list = 2;
int RoomFrameNotify::list_size() const {
  return list_.size();
}
void RoomFrameNotify::clear_list() {
  list_.Clear();
}
const ::pb::Frame& RoomFrameNotify::list(int index) const {
  // @@protoc_insertion_point(field_get:pb.RoomFrameNotify.list)
  return list_.Get(index);
}
::pb::Frame* RoomFrameNotify::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:pb.RoomFrameNotify.list)
  return list_.Mutable(index);
}
::pb::Frame* RoomFrameNotify::add_list() {
  // @@protoc_insertion_point(field_add:pb.RoomFrameNotify.list)
  return list_.Add();
}
::google::protobuf::RepeatedPtrField< ::pb::Frame >*
RoomFrameNotify::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:pb.RoomFrameNotify.list)
  return &list_;
}
const ::google::protobuf::RepeatedPtrField< ::pb::Frame >&
RoomFrameNotify::list() const {
  // @@protoc_insertion_point(field_list:pb.RoomFrameNotify.list)
  return list_;
}

inline const RoomFrameNotify* RoomFrameNotify::internal_default_instance() {
  return &RoomFrameNotify_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoomLadderNotify_Item::kIdFieldNumber;
const int RoomLadderNotify_Item::kScoreFieldNumber;
const int RoomLadderNotify_Item::kKillTimesFieldNumber;
const int RoomLadderNotify_Item::kDeadTimesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoomLadderNotify_Item::RoomLadderNotify_Item()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_game_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.RoomLadderNotify.Item)
}

void RoomLadderNotify_Item::InitAsDefaultInstance() {
}

RoomLadderNotify_Item::RoomLadderNotify_Item(const RoomLadderNotify_Item& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.RoomLadderNotify.Item)
}

void RoomLadderNotify_Item::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&id_, 0, reinterpret_cast<char*>(&dead_times_) -
    reinterpret_cast<char*>(&id_) + sizeof(dead_times_));
}

RoomLadderNotify_Item::~RoomLadderNotify_Item() {
  // @@protoc_insertion_point(destructor:pb.RoomLadderNotify.Item)
  SharedDtor();
}

void RoomLadderNotify_Item::SharedDtor() {
}

void RoomLadderNotify_Item::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoomLadderNotify_Item::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RoomLadderNotify_Item_descriptor_;
}

const RoomLadderNotify_Item& RoomLadderNotify_Item::default_instance() {
  protobuf_InitDefaults_game_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<RoomLadderNotify_Item> RoomLadderNotify_Item_default_instance_;

RoomLadderNotify_Item* RoomLadderNotify_Item::New(::google::protobuf::Arena* arena) const {
  RoomLadderNotify_Item* n = new RoomLadderNotify_Item;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoomLadderNotify_Item::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.RoomLadderNotify.Item)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(RoomLadderNotify_Item, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<RoomLadderNotify_Item*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(id_, dead_times_);

#undef ZR_HELPER_
#undef ZR_

  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool RoomLadderNotify_Item::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.RoomLadderNotify.Item)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (tag == 8) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_score;
        break;
      }

      // required int32 score = 2;
      case 2: {
        if (tag == 16) {
         parse_score:
          set_has_score();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &score_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_kill_times;
        break;
      }

      // required uint32 kill_times = 3;
      case 3: {
        if (tag == 24) {
         parse_kill_times:
          set_has_kill_times();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &kill_times_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_dead_times;
        break;
      }

      // required uint32 dead_times = 4;
      case 4: {
        if (tag == 32) {
         parse_dead_times:
          set_has_dead_times();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dead_times_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.RoomLadderNotify.Item)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.RoomLadderNotify.Item)
  return false;
#undef DO_
}

void RoomLadderNotify_Item::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.RoomLadderNotify.Item)
  // required uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // required int32 score = 2;
  if (has_score()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->score(), output);
  }

  // required uint32 kill_times = 3;
  if (has_kill_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->kill_times(), output);
  }

  // required uint32 dead_times = 4;
  if (has_dead_times()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->dead_times(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.RoomLadderNotify.Item)
}

::google::protobuf::uint8* RoomLadderNotify_Item::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.RoomLadderNotify.Item)
  // required uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // required int32 score = 2;
  if (has_score()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->score(), target);
  }

  // required uint32 kill_times = 3;
  if (has_kill_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->kill_times(), target);
  }

  // required uint32 dead_times = 4;
  if (has_dead_times()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->dead_times(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.RoomLadderNotify.Item)
  return target;
}

size_t RoomLadderNotify_Item::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:pb.RoomLadderNotify.Item)
  size_t total_size = 0;

  if (has_id()) {
    // required uint32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  if (has_score()) {
    // required int32 score = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->score());
  }

  if (has_kill_times()) {
    // required uint32 kill_times = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->kill_times());
  }

  if (has_dead_times()) {
    // required uint32 dead_times = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dead_times());
  }

  return total_size;
}
size_t RoomLadderNotify_Item::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.RoomLadderNotify.Item)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required uint32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());

    // required int32 score = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->score());

    // required uint32 kill_times = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->kill_times());

    // required uint32 dead_times = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dead_times());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoomLadderNotify_Item::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.RoomLadderNotify.Item)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const RoomLadderNotify_Item* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RoomLadderNotify_Item>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.RoomLadderNotify.Item)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.RoomLadderNotify.Item)
    UnsafeMergeFrom(*source);
  }
}

void RoomLadderNotify_Item::MergeFrom(const RoomLadderNotify_Item& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.RoomLadderNotify.Item)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void RoomLadderNotify_Item::UnsafeMergeFrom(const RoomLadderNotify_Item& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_score()) {
      set_score(from.score());
    }
    if (from.has_kill_times()) {
      set_kill_times(from.kill_times());
    }
    if (from.has_dead_times()) {
      set_dead_times(from.dead_times());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void RoomLadderNotify_Item::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.RoomLadderNotify.Item)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoomLadderNotify_Item::CopyFrom(const RoomLadderNotify_Item& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.RoomLadderNotify.Item)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool RoomLadderNotify_Item::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void RoomLadderNotify_Item::Swap(RoomLadderNotify_Item* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoomLadderNotify_Item::InternalSwap(RoomLadderNotify_Item* other) {
  std::swap(id_, other->id_);
  std::swap(score_, other->score_);
  std::swap(kill_times_, other->kill_times_);
  std::swap(dead_times_, other->dead_times_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoomLadderNotify_Item::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RoomLadderNotify_Item_descriptor_;
  metadata.reflection = RoomLadderNotify_Item_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoomLadderNotify::kItemsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoomLadderNotify::RoomLadderNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_game_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.RoomLadderNotify)
}

void RoomLadderNotify::InitAsDefaultInstance() {
}

RoomLadderNotify::RoomLadderNotify(const RoomLadderNotify& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.RoomLadderNotify)
}

void RoomLadderNotify::SharedCtor() {
  _cached_size_ = 0;
}

RoomLadderNotify::~RoomLadderNotify() {
  // @@protoc_insertion_point(destructor:pb.RoomLadderNotify)
  SharedDtor();
}

void RoomLadderNotify::SharedDtor() {
}

void RoomLadderNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoomLadderNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RoomLadderNotify_descriptor_;
}

const RoomLadderNotify& RoomLadderNotify::default_instance() {
  protobuf_InitDefaults_game_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<RoomLadderNotify> RoomLadderNotify_default_instance_;

RoomLadderNotify* RoomLadderNotify::New(::google::protobuf::Arena* arena) const {
  RoomLadderNotify* n = new RoomLadderNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoomLadderNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.RoomLadderNotify)
  items_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool RoomLadderNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.RoomLadderNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pb.RoomLadderNotify.Item items = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_items:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_items()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_items;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.RoomLadderNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.RoomLadderNotify)
  return false;
#undef DO_
}

void RoomLadderNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.RoomLadderNotify)
  // repeated .pb.RoomLadderNotify.Item items = 1;
  for (unsigned int i = 0, n = this->items_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->items(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.RoomLadderNotify)
}

::google::protobuf::uint8* RoomLadderNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.RoomLadderNotify)
  // repeated .pb.RoomLadderNotify.Item items = 1;
  for (unsigned int i = 0, n = this->items_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->items(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.RoomLadderNotify)
  return target;
}

size_t RoomLadderNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.RoomLadderNotify)
  size_t total_size = 0;

  // repeated .pb.RoomLadderNotify.Item items = 1;
  {
    unsigned int count = this->items_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->items(i));
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoomLadderNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.RoomLadderNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const RoomLadderNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RoomLadderNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.RoomLadderNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.RoomLadderNotify)
    UnsafeMergeFrom(*source);
  }
}

void RoomLadderNotify::MergeFrom(const RoomLadderNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.RoomLadderNotify)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void RoomLadderNotify::UnsafeMergeFrom(const RoomLadderNotify& from) {
  GOOGLE_DCHECK(&from != this);
  items_.MergeFrom(from.items_);
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void RoomLadderNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.RoomLadderNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoomLadderNotify::CopyFrom(const RoomLadderNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.RoomLadderNotify)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool RoomLadderNotify::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->items())) return false;
  return true;
}

void RoomLadderNotify::Swap(RoomLadderNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoomLadderNotify::InternalSwap(RoomLadderNotify* other) {
  items_.UnsafeArenaSwap(&other->items_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoomLadderNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RoomLadderNotify_descriptor_;
  metadata.reflection = RoomLadderNotify_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RoomLadderNotify_Item

// required uint32 id = 1;
bool RoomLadderNotify_Item::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RoomLadderNotify_Item::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void RoomLadderNotify_Item::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void RoomLadderNotify_Item::clear_id() {
  id_ = 0u;
  clear_has_id();
}
::google::protobuf::uint32 RoomLadderNotify_Item::id() const {
  // @@protoc_insertion_point(field_get:pb.RoomLadderNotify.Item.id)
  return id_;
}
void RoomLadderNotify_Item::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:pb.RoomLadderNotify.Item.id)
}

// required int32 score = 2;
bool RoomLadderNotify_Item::has_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RoomLadderNotify_Item::set_has_score() {
  _has_bits_[0] |= 0x00000002u;
}
void RoomLadderNotify_Item::clear_has_score() {
  _has_bits_[0] &= ~0x00000002u;
}
void RoomLadderNotify_Item::clear_score() {
  score_ = 0;
  clear_has_score();
}
::google::protobuf::int32 RoomLadderNotify_Item::score() const {
  // @@protoc_insertion_point(field_get:pb.RoomLadderNotify.Item.score)
  return score_;
}
void RoomLadderNotify_Item::set_score(::google::protobuf::int32 value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:pb.RoomLadderNotify.Item.score)
}

// required uint32 kill_times = 3;
bool RoomLadderNotify_Item::has_kill_times() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void RoomLadderNotify_Item::set_has_kill_times() {
  _has_bits_[0] |= 0x00000004u;
}
void RoomLadderNotify_Item::clear_has_kill_times() {
  _has_bits_[0] &= ~0x00000004u;
}
void RoomLadderNotify_Item::clear_kill_times() {
  kill_times_ = 0u;
  clear_has_kill_times();
}
::google::protobuf::uint32 RoomLadderNotify_Item::kill_times() const {
  // @@protoc_insertion_point(field_get:pb.RoomLadderNotify.Item.kill_times)
  return kill_times_;
}
void RoomLadderNotify_Item::set_kill_times(::google::protobuf::uint32 value) {
  set_has_kill_times();
  kill_times_ = value;
  // @@protoc_insertion_point(field_set:pb.RoomLadderNotify.Item.kill_times)
}

// required uint32 dead_times = 4;
bool RoomLadderNotify_Item::has_dead_times() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void RoomLadderNotify_Item::set_has_dead_times() {
  _has_bits_[0] |= 0x00000008u;
}
void RoomLadderNotify_Item::clear_has_dead_times() {
  _has_bits_[0] &= ~0x00000008u;
}
void RoomLadderNotify_Item::clear_dead_times() {
  dead_times_ = 0u;
  clear_has_dead_times();
}
::google::protobuf::uint32 RoomLadderNotify_Item::dead_times() const {
  // @@protoc_insertion_point(field_get:pb.RoomLadderNotify.Item.dead_times)
  return dead_times_;
}
void RoomLadderNotify_Item::set_dead_times(::google::protobuf::uint32 value) {
  set_has_dead_times();
  dead_times_ = value;
  // @@protoc_insertion_point(field_set:pb.RoomLadderNotify.Item.dead_times)
}

inline const RoomLadderNotify_Item* RoomLadderNotify_Item::internal_default_instance() {
  return &RoomLadderNotify_Item_default_instance_.get();
}
// -------------------------------------------------------------------

// RoomLadderNotify

// repeated .pb.RoomLadderNotify.Item items = 1;
int RoomLadderNotify::items_size() const {
  return items_.size();
}
void RoomLadderNotify::clear_items() {
  items_.Clear();
}
const ::pb::RoomLadderNotify_Item& RoomLadderNotify::items(int index) const {
  // @@protoc_insertion_point(field_get:pb.RoomLadderNotify.items)
  return items_.Get(index);
}
::pb::RoomLadderNotify_Item* RoomLadderNotify::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:pb.RoomLadderNotify.items)
  return items_.Mutable(index);
}
::pb::RoomLadderNotify_Item* RoomLadderNotify::add_items() {
  // @@protoc_insertion_point(field_add:pb.RoomLadderNotify.items)
  return items_.Add();
}
::google::protobuf::RepeatedPtrField< ::pb::RoomLadderNotify_Item >*
RoomLadderNotify::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:pb.RoomLadderNotify.items)
  return &items_;
}
const ::google::protobuf::RepeatedPtrField< ::pb::RoomLadderNotify_Item >&
RoomLadderNotify::items() const {
  // @@protoc_insertion_point(field_list:pb.RoomLadderNotify.items)
  return items_;
}

inline const RoomLadderNotify* RoomLadderNotify::internal_default_instance() {
  return &RoomLadderNotify_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoomPlayerMoveReq::kPosFieldNumber;
const int RoomPlayerMoveReq::kDirFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoomPlayerMoveReq::RoomPlayerMoveReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_game_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.RoomPlayerMoveReq)
}

void RoomPlayerMoveReq::InitAsDefaultInstance() {
  pos_ = const_cast< ::pb::Vector*>(
      ::pb::Vector::internal_default_instance());
  dir_ = const_cast< ::pb::Vector*>(
      ::pb::Vector::internal_default_instance());
}

RoomPlayerMoveReq::RoomPlayerMoveReq(const RoomPlayerMoveReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.RoomPlayerMoveReq)
}

void RoomPlayerMoveReq::SharedCtor() {
  _cached_size_ = 0;
  pos_ = NULL;
  dir_ = NULL;
}

RoomPlayerMoveReq::~RoomPlayerMoveReq() {
  // @@protoc_insertion_point(destructor:pb.RoomPlayerMoveReq)
  SharedDtor();
}

void RoomPlayerMoveReq::SharedDtor() {
  if (this != &RoomPlayerMoveReq_default_instance_.get()) {
    delete pos_;
    delete dir_;
  }
}

void RoomPlayerMoveReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoomPlayerMoveReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RoomPlayerMoveReq_descriptor_;
}

const RoomPlayerMoveReq& RoomPlayerMoveReq::default_instance() {
  protobuf_InitDefaults_game_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<RoomPlayerMoveReq> RoomPlayerMoveReq_default_instance_;

RoomPlayerMoveReq* RoomPlayerMoveReq::New(::google::protobuf::Arena* arena) const {
  RoomPlayerMoveReq* n = new RoomPlayerMoveReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoomPlayerMoveReq::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.RoomPlayerMoveReq)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_pos()) {
      if (pos_ != NULL) pos_->::pb::Vector::Clear();
    }
    if (has_dir()) {
      if (dir_ != NULL) dir_->::pb::Vector::Clear();
    }
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool RoomPlayerMoveReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.RoomPlayerMoveReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .pb.Vector pos = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_dir;
        break;
      }

      // required .pb.Vector dir = 2;
      case 2: {
        if (tag == 18) {
         parse_dir:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_dir()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.RoomPlayerMoveReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.RoomPlayerMoveReq)
  return false;
#undef DO_
}

void RoomPlayerMoveReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.RoomPlayerMoveReq)
  // required .pb.Vector pos = 1;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->pos_, output);
  }

  // required .pb.Vector dir = 2;
  if (has_dir()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->dir_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.RoomPlayerMoveReq)
}

::google::protobuf::uint8* RoomPlayerMoveReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.RoomPlayerMoveReq)
  // required .pb.Vector pos = 1;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->pos_, false, target);
  }

  // required .pb.Vector dir = 2;
  if (has_dir()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->dir_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.RoomPlayerMoveReq)
  return target;
}

size_t RoomPlayerMoveReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:pb.RoomPlayerMoveReq)
  size_t total_size = 0;

  if (has_pos()) {
    // required .pb.Vector pos = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pos_);
  }

  if (has_dir()) {
    // required .pb.Vector dir = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->dir_);
  }

  return total_size;
}
size_t RoomPlayerMoveReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.RoomPlayerMoveReq)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .pb.Vector pos = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pos_);

    // required .pb.Vector dir = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->dir_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoomPlayerMoveReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.RoomPlayerMoveReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const RoomPlayerMoveReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RoomPlayerMoveReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.RoomPlayerMoveReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.RoomPlayerMoveReq)
    UnsafeMergeFrom(*source);
  }
}

void RoomPlayerMoveReq::MergeFrom(const RoomPlayerMoveReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.RoomPlayerMoveReq)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void RoomPlayerMoveReq::UnsafeMergeFrom(const RoomPlayerMoveReq& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pos()) {
      mutable_pos()->::pb::Vector::MergeFrom(from.pos());
    }
    if (from.has_dir()) {
      mutable_dir()->::pb::Vector::MergeFrom(from.dir());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void RoomPlayerMoveReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.RoomPlayerMoveReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoomPlayerMoveReq::CopyFrom(const RoomPlayerMoveReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.RoomPlayerMoveReq)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool RoomPlayerMoveReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_pos()) {
    if (!this->pos_->IsInitialized()) return false;
  }
  if (has_dir()) {
    if (!this->dir_->IsInitialized()) return false;
  }
  return true;
}

void RoomPlayerMoveReq::Swap(RoomPlayerMoveReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoomPlayerMoveReq::InternalSwap(RoomPlayerMoveReq* other) {
  std::swap(pos_, other->pos_);
  std::swap(dir_, other->dir_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoomPlayerMoveReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RoomPlayerMoveReq_descriptor_;
  metadata.reflection = RoomPlayerMoveReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RoomPlayerMoveReq

// required .pb.Vector pos = 1;
bool RoomPlayerMoveReq::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RoomPlayerMoveReq::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
void RoomPlayerMoveReq::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
void RoomPlayerMoveReq::clear_pos() {
  if (pos_ != NULL) pos_->::pb::Vector::Clear();
  clear_has_pos();
}
const ::pb::Vector& RoomPlayerMoveReq::pos() const {
  // @@protoc_insertion_point(field_get:pb.RoomPlayerMoveReq.pos)
  return pos_ != NULL ? *pos_
                         : *::pb::Vector::internal_default_instance();
}
::pb::Vector* RoomPlayerMoveReq::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) {
    pos_ = new ::pb::Vector;
  }
  // @@protoc_insertion_point(field_mutable:pb.RoomPlayerMoveReq.pos)
  return pos_;
}
::pb::Vector* RoomPlayerMoveReq::release_pos() {
  // @@protoc_insertion_point(field_release:pb.RoomPlayerMoveReq.pos)
  clear_has_pos();
  ::pb::Vector* temp = pos_;
  pos_ = NULL;
  return temp;
}
void RoomPlayerMoveReq::set_allocated_pos(::pb::Vector* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.RoomPlayerMoveReq.pos)
}

// required .pb.Vector dir = 2;
bool RoomPlayerMoveReq::has_dir() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RoomPlayerMoveReq::set_has_dir() {
  _has_bits_[0] |= 0x00000002u;
}
void RoomPlayerMoveReq::clear_has_dir() {
  _has_bits_[0] &= ~0x00000002u;
}
void RoomPlayerMoveReq::clear_dir() {
  if (dir_ != NULL) dir_->::pb::Vector::Clear();
  clear_has_dir();
}
const ::pb::Vector& RoomPlayerMoveReq::dir() const {
  // @@protoc_insertion_point(field_get:pb.RoomPlayerMoveReq.dir)
  return dir_ != NULL ? *dir_
                         : *::pb::Vector::internal_default_instance();
}
::pb::Vector* RoomPlayerMoveReq::mutable_dir() {
  set_has_dir();
  if (dir_ == NULL) {
    dir_ = new ::pb::Vector;
  }
  // @@protoc_insertion_point(field_mutable:pb.RoomPlayerMoveReq.dir)
  return dir_;
}
::pb::Vector* RoomPlayerMoveReq::release_dir() {
  // @@protoc_insertion_point(field_release:pb.RoomPlayerMoveReq.dir)
  clear_has_dir();
  ::pb::Vector* temp = dir_;
  dir_ = NULL;
  return temp;
}
void RoomPlayerMoveReq::set_allocated_dir(::pb::Vector* dir) {
  delete dir_;
  dir_ = dir;
  if (dir) {
    set_has_dir();
  } else {
    clear_has_dir();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.RoomPlayerMoveReq.dir)
}

inline const RoomPlayerMoveReq* RoomPlayerMoveReq::internal_default_instance() {
  return &RoomPlayerMoveReq_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoomPlayerDragRes::kPosFieldNumber;
const int RoomPlayerDragRes::kDirFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoomPlayerDragRes::RoomPlayerDragRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_game_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.RoomPlayerDragRes)
}

void RoomPlayerDragRes::InitAsDefaultInstance() {
  pos_ = const_cast< ::pb::Vector*>(
      ::pb::Vector::internal_default_instance());
  dir_ = const_cast< ::pb::Vector*>(
      ::pb::Vector::internal_default_instance());
}

RoomPlayerDragRes::RoomPlayerDragRes(const RoomPlayerDragRes& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.RoomPlayerDragRes)
}

void RoomPlayerDragRes::SharedCtor() {
  _cached_size_ = 0;
  pos_ = NULL;
  dir_ = NULL;
}

RoomPlayerDragRes::~RoomPlayerDragRes() {
  // @@protoc_insertion_point(destructor:pb.RoomPlayerDragRes)
  SharedDtor();
}

void RoomPlayerDragRes::SharedDtor() {
  if (this != &RoomPlayerDragRes_default_instance_.get()) {
    delete pos_;
    delete dir_;
  }
}

void RoomPlayerDragRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoomPlayerDragRes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RoomPlayerDragRes_descriptor_;
}

const RoomPlayerDragRes& RoomPlayerDragRes::default_instance() {
  protobuf_InitDefaults_game_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<RoomPlayerDragRes> RoomPlayerDragRes_default_instance_;

RoomPlayerDragRes* RoomPlayerDragRes::New(::google::protobuf::Arena* arena) const {
  RoomPlayerDragRes* n = new RoomPlayerDragRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoomPlayerDragRes::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.RoomPlayerDragRes)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_pos()) {
      if (pos_ != NULL) pos_->::pb::Vector::Clear();
    }
    if (has_dir()) {
      if (dir_ != NULL) dir_->::pb::Vector::Clear();
    }
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool RoomPlayerDragRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.RoomPlayerDragRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .pb.Vector pos = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_dir;
        break;
      }

      // required .pb.Vector dir = 2;
      case 2: {
        if (tag == 18) {
         parse_dir:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_dir()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.RoomPlayerDragRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.RoomPlayerDragRes)
  return false;
#undef DO_
}

void RoomPlayerDragRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.RoomPlayerDragRes)
  // required .pb.Vector pos = 1;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->pos_, output);
  }

  // required .pb.Vector dir = 2;
  if (has_dir()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->dir_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.RoomPlayerDragRes)
}

::google::protobuf::uint8* RoomPlayerDragRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.RoomPlayerDragRes)
  // required .pb.Vector pos = 1;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->pos_, false, target);
  }

  // required .pb.Vector dir = 2;
  if (has_dir()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->dir_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.RoomPlayerDragRes)
  return target;
}

size_t RoomPlayerDragRes::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:pb.RoomPlayerDragRes)
  size_t total_size = 0;

  if (has_pos()) {
    // required .pb.Vector pos = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pos_);
  }

  if (has_dir()) {
    // required .pb.Vector dir = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->dir_);
  }

  return total_size;
}
size_t RoomPlayerDragRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.RoomPlayerDragRes)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .pb.Vector pos = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pos_);

    // required .pb.Vector dir = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->dir_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoomPlayerDragRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.RoomPlayerDragRes)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const RoomPlayerDragRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RoomPlayerDragRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.RoomPlayerDragRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.RoomPlayerDragRes)
    UnsafeMergeFrom(*source);
  }
}

void RoomPlayerDragRes::MergeFrom(const RoomPlayerDragRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.RoomPlayerDragRes)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void RoomPlayerDragRes::UnsafeMergeFrom(const RoomPlayerDragRes& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pos()) {
      mutable_pos()->::pb::Vector::MergeFrom(from.pos());
    }
    if (from.has_dir()) {
      mutable_dir()->::pb::Vector::MergeFrom(from.dir());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void RoomPlayerDragRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.RoomPlayerDragRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoomPlayerDragRes::CopyFrom(const RoomPlayerDragRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.RoomPlayerDragRes)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool RoomPlayerDragRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_pos()) {
    if (!this->pos_->IsInitialized()) return false;
  }
  if (has_dir()) {
    if (!this->dir_->IsInitialized()) return false;
  }
  return true;
}

void RoomPlayerDragRes::Swap(RoomPlayerDragRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoomPlayerDragRes::InternalSwap(RoomPlayerDragRes* other) {
  std::swap(pos_, other->pos_);
  std::swap(dir_, other->dir_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoomPlayerDragRes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RoomPlayerDragRes_descriptor_;
  metadata.reflection = RoomPlayerDragRes_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RoomPlayerDragRes

// required .pb.Vector pos = 1;
bool RoomPlayerDragRes::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RoomPlayerDragRes::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
void RoomPlayerDragRes::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
void RoomPlayerDragRes::clear_pos() {
  if (pos_ != NULL) pos_->::pb::Vector::Clear();
  clear_has_pos();
}
const ::pb::Vector& RoomPlayerDragRes::pos() const {
  // @@protoc_insertion_point(field_get:pb.RoomPlayerDragRes.pos)
  return pos_ != NULL ? *pos_
                         : *::pb::Vector::internal_default_instance();
}
::pb::Vector* RoomPlayerDragRes::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) {
    pos_ = new ::pb::Vector;
  }
  // @@protoc_insertion_point(field_mutable:pb.RoomPlayerDragRes.pos)
  return pos_;
}
::pb::Vector* RoomPlayerDragRes::release_pos() {
  // @@protoc_insertion_point(field_release:pb.RoomPlayerDragRes.pos)
  clear_has_pos();
  ::pb::Vector* temp = pos_;
  pos_ = NULL;
  return temp;
}
void RoomPlayerDragRes::set_allocated_pos(::pb::Vector* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.RoomPlayerDragRes.pos)
}

// required .pb.Vector dir = 2;
bool RoomPlayerDragRes::has_dir() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RoomPlayerDragRes::set_has_dir() {
  _has_bits_[0] |= 0x00000002u;
}
void RoomPlayerDragRes::clear_has_dir() {
  _has_bits_[0] &= ~0x00000002u;
}
void RoomPlayerDragRes::clear_dir() {
  if (dir_ != NULL) dir_->::pb::Vector::Clear();
  clear_has_dir();
}
const ::pb::Vector& RoomPlayerDragRes::dir() const {
  // @@protoc_insertion_point(field_get:pb.RoomPlayerDragRes.dir)
  return dir_ != NULL ? *dir_
                         : *::pb::Vector::internal_default_instance();
}
::pb::Vector* RoomPlayerDragRes::mutable_dir() {
  set_has_dir();
  if (dir_ == NULL) {
    dir_ = new ::pb::Vector;
  }
  // @@protoc_insertion_point(field_mutable:pb.RoomPlayerDragRes.dir)
  return dir_;
}
::pb::Vector* RoomPlayerDragRes::release_dir() {
  // @@protoc_insertion_point(field_release:pb.RoomPlayerDragRes.dir)
  clear_has_dir();
  ::pb::Vector* temp = dir_;
  dir_ = NULL;
  return temp;
}
void RoomPlayerDragRes::set_allocated_dir(::pb::Vector* dir) {
  delete dir_;
  dir_ = dir;
  if (dir) {
    set_has_dir();
  } else {
    clear_has_dir();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.RoomPlayerDragRes.dir)
}

inline const RoomPlayerDragRes* RoomPlayerDragRes::internal_default_instance() {
  return &RoomPlayerDragRes_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoomPlayerDragEndReq::RoomPlayerDragEndReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_game_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.RoomPlayerDragEndReq)
}

void RoomPlayerDragEndReq::InitAsDefaultInstance() {
}

RoomPlayerDragEndReq::RoomPlayerDragEndReq(const RoomPlayerDragEndReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.RoomPlayerDragEndReq)
}

void RoomPlayerDragEndReq::SharedCtor() {
  _cached_size_ = 0;
}

RoomPlayerDragEndReq::~RoomPlayerDragEndReq() {
  // @@protoc_insertion_point(destructor:pb.RoomPlayerDragEndReq)
  SharedDtor();
}

void RoomPlayerDragEndReq::SharedDtor() {
}

void RoomPlayerDragEndReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoomPlayerDragEndReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RoomPlayerDragEndReq_descriptor_;
}

const RoomPlayerDragEndReq& RoomPlayerDragEndReq::default_instance() {
  protobuf_InitDefaults_game_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<RoomPlayerDragEndReq> RoomPlayerDragEndReq_default_instance_;

RoomPlayerDragEndReq* RoomPlayerDragEndReq::New(::google::protobuf::Arena* arena) const {
  RoomPlayerDragEndReq* n = new RoomPlayerDragEndReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoomPlayerDragEndReq::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.RoomPlayerDragEndReq)
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool RoomPlayerDragEndReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.RoomPlayerDragEndReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:pb.RoomPlayerDragEndReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.RoomPlayerDragEndReq)
  return false;
#undef DO_
}

void RoomPlayerDragEndReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.RoomPlayerDragEndReq)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.RoomPlayerDragEndReq)
}

::google::protobuf::uint8* RoomPlayerDragEndReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.RoomPlayerDragEndReq)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.RoomPlayerDragEndReq)
  return target;
}

size_t RoomPlayerDragEndReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.RoomPlayerDragEndReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoomPlayerDragEndReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.RoomPlayerDragEndReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const RoomPlayerDragEndReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RoomPlayerDragEndReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.RoomPlayerDragEndReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.RoomPlayerDragEndReq)
    UnsafeMergeFrom(*source);
  }
}

void RoomPlayerDragEndReq::MergeFrom(const RoomPlayerDragEndReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.RoomPlayerDragEndReq)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void RoomPlayerDragEndReq::UnsafeMergeFrom(const RoomPlayerDragEndReq& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void RoomPlayerDragEndReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.RoomPlayerDragEndReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoomPlayerDragEndReq::CopyFrom(const RoomPlayerDragEndReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.RoomPlayerDragEndReq)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool RoomPlayerDragEndReq::IsInitialized() const {

  return true;
}

void RoomPlayerDragEndReq::Swap(RoomPlayerDragEndReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoomPlayerDragEndReq::InternalSwap(RoomPlayerDragEndReq* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoomPlayerDragEndReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RoomPlayerDragEndReq_descriptor_;
  metadata.reflection = RoomPlayerDragEndReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RoomPlayerDragEndReq

inline const RoomPlayerDragEndReq* RoomPlayerDragEndReq::internal_default_instance() {
  return &RoomPlayerDragEndReq_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoomPlayerReliveReq::kJobFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoomPlayerReliveReq::RoomPlayerReliveReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_game_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.RoomPlayerReliveReq)
}

void RoomPlayerReliveReq::InitAsDefaultInstance() {
}

RoomPlayerReliveReq::RoomPlayerReliveReq(const RoomPlayerReliveReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.RoomPlayerReliveReq)
}

void RoomPlayerReliveReq::SharedCtor() {
  _cached_size_ = 0;
  job_ = 0u;
}

RoomPlayerReliveReq::~RoomPlayerReliveReq() {
  // @@protoc_insertion_point(destructor:pb.RoomPlayerReliveReq)
  SharedDtor();
}

void RoomPlayerReliveReq::SharedDtor() {
}

void RoomPlayerReliveReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoomPlayerReliveReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RoomPlayerReliveReq_descriptor_;
}

const RoomPlayerReliveReq& RoomPlayerReliveReq::default_instance() {
  protobuf_InitDefaults_game_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<RoomPlayerReliveReq> RoomPlayerReliveReq_default_instance_;

RoomPlayerReliveReq* RoomPlayerReliveReq::New(::google::protobuf::Arena* arena) const {
  RoomPlayerReliveReq* n = new RoomPlayerReliveReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoomPlayerReliveReq::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.RoomPlayerReliveReq)
  job_ = 0u;
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool RoomPlayerReliveReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.RoomPlayerReliveReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 job = 1;
      case 1: {
        if (tag == 8) {
          set_has_job();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &job_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.RoomPlayerReliveReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.RoomPlayerReliveReq)
  return false;
#undef DO_
}

void RoomPlayerReliveReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.RoomPlayerReliveReq)
  // required uint32 job = 1;
  if (has_job()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->job(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.RoomPlayerReliveReq)
}

::google::protobuf::uint8* RoomPlayerReliveReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.RoomPlayerReliveReq)
  // required uint32 job = 1;
  if (has_job()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->job(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.RoomPlayerReliveReq)
  return target;
}

size_t RoomPlayerReliveReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.RoomPlayerReliveReq)
  size_t total_size = 0;

  // required uint32 job = 1;
  if (has_job()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->job());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoomPlayerReliveReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.RoomPlayerReliveReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const RoomPlayerReliveReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RoomPlayerReliveReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.RoomPlayerReliveReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.RoomPlayerReliveReq)
    UnsafeMergeFrom(*source);
  }
}

void RoomPlayerReliveReq::MergeFrom(const RoomPlayerReliveReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.RoomPlayerReliveReq)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void RoomPlayerReliveReq::UnsafeMergeFrom(const RoomPlayerReliveReq& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_job()) {
      set_job(from.job());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void RoomPlayerReliveReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.RoomPlayerReliveReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoomPlayerReliveReq::CopyFrom(const RoomPlayerReliveReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.RoomPlayerReliveReq)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool RoomPlayerReliveReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void RoomPlayerReliveReq::Swap(RoomPlayerReliveReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoomPlayerReliveReq::InternalSwap(RoomPlayerReliveReq* other) {
  std::swap(job_, other->job_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoomPlayerReliveReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RoomPlayerReliveReq_descriptor_;
  metadata.reflection = RoomPlayerReliveReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RoomPlayerReliveReq

// required uint32 job = 1;
bool RoomPlayerReliveReq::has_job() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RoomPlayerReliveReq::set_has_job() {
  _has_bits_[0] |= 0x00000001u;
}
void RoomPlayerReliveReq::clear_has_job() {
  _has_bits_[0] &= ~0x00000001u;
}
void RoomPlayerReliveReq::clear_job() {
  job_ = 0u;
  clear_has_job();
}
::google::protobuf::uint32 RoomPlayerReliveReq::job() const {
  // @@protoc_insertion_point(field_get:pb.RoomPlayerReliveReq.job)
  return job_;
}
void RoomPlayerReliveReq::set_job(::google::protobuf::uint32 value) {
  set_has_job();
  job_ = value;
  // @@protoc_insertion_point(field_set:pb.RoomPlayerReliveReq.job)
}

inline const RoomPlayerReliveReq* RoomPlayerReliveReq::internal_default_instance() {
  return &RoomPlayerReliveReq_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoomPlayerStopReq::kPosFieldNumber;
const int RoomPlayerStopReq::kDirFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoomPlayerStopReq::RoomPlayerStopReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_game_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.RoomPlayerStopReq)
}

void RoomPlayerStopReq::InitAsDefaultInstance() {
  pos_ = const_cast< ::pb::Vector*>(
      ::pb::Vector::internal_default_instance());
  dir_ = const_cast< ::pb::Vector*>(
      ::pb::Vector::internal_default_instance());
}

RoomPlayerStopReq::RoomPlayerStopReq(const RoomPlayerStopReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.RoomPlayerStopReq)
}

void RoomPlayerStopReq::SharedCtor() {
  _cached_size_ = 0;
  pos_ = NULL;
  dir_ = NULL;
}

RoomPlayerStopReq::~RoomPlayerStopReq() {
  // @@protoc_insertion_point(destructor:pb.RoomPlayerStopReq)
  SharedDtor();
}

void RoomPlayerStopReq::SharedDtor() {
  if (this != &RoomPlayerStopReq_default_instance_.get()) {
    delete pos_;
    delete dir_;
  }
}

void RoomPlayerStopReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoomPlayerStopReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RoomPlayerStopReq_descriptor_;
}

const RoomPlayerStopReq& RoomPlayerStopReq::default_instance() {
  protobuf_InitDefaults_game_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<RoomPlayerStopReq> RoomPlayerStopReq_default_instance_;

RoomPlayerStopReq* RoomPlayerStopReq::New(::google::protobuf::Arena* arena) const {
  RoomPlayerStopReq* n = new RoomPlayerStopReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoomPlayerStopReq::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.RoomPlayerStopReq)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_pos()) {
      if (pos_ != NULL) pos_->::pb::Vector::Clear();
    }
    if (has_dir()) {
      if (dir_ != NULL) dir_->::pb::Vector::Clear();
    }
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool RoomPlayerStopReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.RoomPlayerStopReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .pb.Vector pos = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_dir;
        break;
      }

      // required .pb.Vector dir = 2;
      case 2: {
        if (tag == 18) {
         parse_dir:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_dir()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.RoomPlayerStopReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.RoomPlayerStopReq)
  return false;
#undef DO_
}

void RoomPlayerStopReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.RoomPlayerStopReq)
  // required .pb.Vector pos = 1;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->pos_, output);
  }

  // required .pb.Vector dir = 2;
  if (has_dir()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->dir_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.RoomPlayerStopReq)
}

::google::protobuf::uint8* RoomPlayerStopReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.RoomPlayerStopReq)
  // required .pb.Vector pos = 1;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->pos_, false, target);
  }

  // required .pb.Vector dir = 2;
  if (has_dir()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->dir_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.RoomPlayerStopReq)
  return target;
}

size_t RoomPlayerStopReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:pb.RoomPlayerStopReq)
  size_t total_size = 0;

  if (has_pos()) {
    // required .pb.Vector pos = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pos_);
  }

  if (has_dir()) {
    // required .pb.Vector dir = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->dir_);
  }

  return total_size;
}
size_t RoomPlayerStopReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.RoomPlayerStopReq)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .pb.Vector pos = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pos_);

    // required .pb.Vector dir = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->dir_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoomPlayerStopReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.RoomPlayerStopReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const RoomPlayerStopReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RoomPlayerStopReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.RoomPlayerStopReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.RoomPlayerStopReq)
    UnsafeMergeFrom(*source);
  }
}

void RoomPlayerStopReq::MergeFrom(const RoomPlayerStopReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.RoomPlayerStopReq)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void RoomPlayerStopReq::UnsafeMergeFrom(const RoomPlayerStopReq& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pos()) {
      mutable_pos()->::pb::Vector::MergeFrom(from.pos());
    }
    if (from.has_dir()) {
      mutable_dir()->::pb::Vector::MergeFrom(from.dir());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void RoomPlayerStopReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.RoomPlayerStopReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoomPlayerStopReq::CopyFrom(const RoomPlayerStopReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.RoomPlayerStopReq)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool RoomPlayerStopReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_pos()) {
    if (!this->pos_->IsInitialized()) return false;
  }
  if (has_dir()) {
    if (!this->dir_->IsInitialized()) return false;
  }
  return true;
}

void RoomPlayerStopReq::Swap(RoomPlayerStopReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoomPlayerStopReq::InternalSwap(RoomPlayerStopReq* other) {
  std::swap(pos_, other->pos_);
  std::swap(dir_, other->dir_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoomPlayerStopReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RoomPlayerStopReq_descriptor_;
  metadata.reflection = RoomPlayerStopReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RoomPlayerStopReq

// required .pb.Vector pos = 1;
bool RoomPlayerStopReq::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RoomPlayerStopReq::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
void RoomPlayerStopReq::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
void RoomPlayerStopReq::clear_pos() {
  if (pos_ != NULL) pos_->::pb::Vector::Clear();
  clear_has_pos();
}
const ::pb::Vector& RoomPlayerStopReq::pos() const {
  // @@protoc_insertion_point(field_get:pb.RoomPlayerStopReq.pos)
  return pos_ != NULL ? *pos_
                         : *::pb::Vector::internal_default_instance();
}
::pb::Vector* RoomPlayerStopReq::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) {
    pos_ = new ::pb::Vector;
  }
  // @@protoc_insertion_point(field_mutable:pb.RoomPlayerStopReq.pos)
  return pos_;
}
::pb::Vector* RoomPlayerStopReq::release_pos() {
  // @@protoc_insertion_point(field_release:pb.RoomPlayerStopReq.pos)
  clear_has_pos();
  ::pb::Vector* temp = pos_;
  pos_ = NULL;
  return temp;
}
void RoomPlayerStopReq::set_allocated_pos(::pb::Vector* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.RoomPlayerStopReq.pos)
}

// required .pb.Vector dir = 2;
bool RoomPlayerStopReq::has_dir() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RoomPlayerStopReq::set_has_dir() {
  _has_bits_[0] |= 0x00000002u;
}
void RoomPlayerStopReq::clear_has_dir() {
  _has_bits_[0] &= ~0x00000002u;
}
void RoomPlayerStopReq::clear_dir() {
  if (dir_ != NULL) dir_->::pb::Vector::Clear();
  clear_has_dir();
}
const ::pb::Vector& RoomPlayerStopReq::dir() const {
  // @@protoc_insertion_point(field_get:pb.RoomPlayerStopReq.dir)
  return dir_ != NULL ? *dir_
                         : *::pb::Vector::internal_default_instance();
}
::pb::Vector* RoomPlayerStopReq::mutable_dir() {
  set_has_dir();
  if (dir_ == NULL) {
    dir_ = new ::pb::Vector;
  }
  // @@protoc_insertion_point(field_mutable:pb.RoomPlayerStopReq.dir)
  return dir_;
}
::pb::Vector* RoomPlayerStopReq::release_dir() {
  // @@protoc_insertion_point(field_release:pb.RoomPlayerStopReq.dir)
  clear_has_dir();
  ::pb::Vector* temp = dir_;
  dir_ = NULL;
  return temp;
}
void RoomPlayerStopReq::set_allocated_dir(::pb::Vector* dir) {
  delete dir_;
  dir_ = dir;
  if (dir) {
    set_has_dir();
  } else {
    clear_has_dir();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.RoomPlayerStopReq.dir)
}

inline const RoomPlayerStopReq* RoomPlayerStopReq::internal_default_instance() {
  return &RoomPlayerStopReq_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SpellStartReq::kXmlIdFieldNumber;
const int SpellStartReq::kPosFieldNumber;
const int SpellStartReq::kDirFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SpellStartReq::SpellStartReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_game_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.SpellStartReq)
}

void SpellStartReq::InitAsDefaultInstance() {
  pos_ = const_cast< ::pb::Vector*>(
      ::pb::Vector::internal_default_instance());
  dir_ = const_cast< ::pb::Vector*>(
      ::pb::Vector::internal_default_instance());
}

SpellStartReq::SpellStartReq(const SpellStartReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.SpellStartReq)
}

void SpellStartReq::SharedCtor() {
  _cached_size_ = 0;
  pos_ = NULL;
  dir_ = NULL;
  xml_id_ = 0u;
}

SpellStartReq::~SpellStartReq() {
  // @@protoc_insertion_point(destructor:pb.SpellStartReq)
  SharedDtor();
}

void SpellStartReq::SharedDtor() {
  if (this != &SpellStartReq_default_instance_.get()) {
    delete pos_;
    delete dir_;
  }
}

void SpellStartReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SpellStartReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SpellStartReq_descriptor_;
}

const SpellStartReq& SpellStartReq::default_instance() {
  protobuf_InitDefaults_game_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<SpellStartReq> SpellStartReq_default_instance_;

SpellStartReq* SpellStartReq::New(::google::protobuf::Arena* arena) const {
  SpellStartReq* n = new SpellStartReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SpellStartReq::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.SpellStartReq)
  if (_has_bits_[0 / 32] & 7u) {
    xml_id_ = 0u;
    if (has_pos()) {
      if (pos_ != NULL) pos_->::pb::Vector::Clear();
    }
    if (has_dir()) {
      if (dir_ != NULL) dir_->::pb::Vector::Clear();
    }
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool SpellStartReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.SpellStartReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 xml_id = 1;
      case 1: {
        if (tag == 8) {
          set_has_xml_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &xml_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_pos;
        break;
      }

      // required .pb.Vector pos = 2;
      case 2: {
        if (tag == 18) {
         parse_pos:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_dir;
        break;
      }

      // required .pb.Vector dir = 3;
      case 3: {
        if (tag == 26) {
         parse_dir:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_dir()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.SpellStartReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.SpellStartReq)
  return false;
#undef DO_
}

void SpellStartReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.SpellStartReq)
  // required uint32 xml_id = 1;
  if (has_xml_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->xml_id(), output);
  }

  // required .pb.Vector pos = 2;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->pos_, output);
  }

  // required .pb.Vector dir = 3;
  if (has_dir()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->dir_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.SpellStartReq)
}

::google::protobuf::uint8* SpellStartReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.SpellStartReq)
  // required uint32 xml_id = 1;
  if (has_xml_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->xml_id(), target);
  }

  // required .pb.Vector pos = 2;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->pos_, false, target);
  }

  // required .pb.Vector dir = 3;
  if (has_dir()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->dir_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.SpellStartReq)
  return target;
}

size_t SpellStartReq::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:pb.SpellStartReq)
  size_t total_size = 0;

  if (has_xml_id()) {
    // required uint32 xml_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->xml_id());
  }

  if (has_pos()) {
    // required .pb.Vector pos = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pos_);
  }

  if (has_dir()) {
    // required .pb.Vector dir = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->dir_);
  }

  return total_size;
}
size_t SpellStartReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.SpellStartReq)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required uint32 xml_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->xml_id());

    // required .pb.Vector pos = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pos_);

    // required .pb.Vector dir = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->dir_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SpellStartReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.SpellStartReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SpellStartReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SpellStartReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.SpellStartReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.SpellStartReq)
    UnsafeMergeFrom(*source);
  }
}

void SpellStartReq::MergeFrom(const SpellStartReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.SpellStartReq)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void SpellStartReq::UnsafeMergeFrom(const SpellStartReq& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_xml_id()) {
      set_xml_id(from.xml_id());
    }
    if (from.has_pos()) {
      mutable_pos()->::pb::Vector::MergeFrom(from.pos());
    }
    if (from.has_dir()) {
      mutable_dir()->::pb::Vector::MergeFrom(from.dir());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void SpellStartReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.SpellStartReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SpellStartReq::CopyFrom(const SpellStartReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.SpellStartReq)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool SpellStartReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  if (has_pos()) {
    if (!this->pos_->IsInitialized()) return false;
  }
  if (has_dir()) {
    if (!this->dir_->IsInitialized()) return false;
  }
  return true;
}

void SpellStartReq::Swap(SpellStartReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SpellStartReq::InternalSwap(SpellStartReq* other) {
  std::swap(xml_id_, other->xml_id_);
  std::swap(pos_, other->pos_);
  std::swap(dir_, other->dir_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SpellStartReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SpellStartReq_descriptor_;
  metadata.reflection = SpellStartReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SpellStartReq

// required uint32 xml_id = 1;
bool SpellStartReq::has_xml_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SpellStartReq::set_has_xml_id() {
  _has_bits_[0] |= 0x00000001u;
}
void SpellStartReq::clear_has_xml_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void SpellStartReq::clear_xml_id() {
  xml_id_ = 0u;
  clear_has_xml_id();
}
::google::protobuf::uint32 SpellStartReq::xml_id() const {
  // @@protoc_insertion_point(field_get:pb.SpellStartReq.xml_id)
  return xml_id_;
}
void SpellStartReq::set_xml_id(::google::protobuf::uint32 value) {
  set_has_xml_id();
  xml_id_ = value;
  // @@protoc_insertion_point(field_set:pb.SpellStartReq.xml_id)
}

// required .pb.Vector pos = 2;
bool SpellStartReq::has_pos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SpellStartReq::set_has_pos() {
  _has_bits_[0] |= 0x00000002u;
}
void SpellStartReq::clear_has_pos() {
  _has_bits_[0] &= ~0x00000002u;
}
void SpellStartReq::clear_pos() {
  if (pos_ != NULL) pos_->::pb::Vector::Clear();
  clear_has_pos();
}
const ::pb::Vector& SpellStartReq::pos() const {
  // @@protoc_insertion_point(field_get:pb.SpellStartReq.pos)
  return pos_ != NULL ? *pos_
                         : *::pb::Vector::internal_default_instance();
}
::pb::Vector* SpellStartReq::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) {
    pos_ = new ::pb::Vector;
  }
  // @@protoc_insertion_point(field_mutable:pb.SpellStartReq.pos)
  return pos_;
}
::pb::Vector* SpellStartReq::release_pos() {
  // @@protoc_insertion_point(field_release:pb.SpellStartReq.pos)
  clear_has_pos();
  ::pb::Vector* temp = pos_;
  pos_ = NULL;
  return temp;
}
void SpellStartReq::set_allocated_pos(::pb::Vector* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.SpellStartReq.pos)
}

// required .pb.Vector dir = 3;
bool SpellStartReq::has_dir() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SpellStartReq::set_has_dir() {
  _has_bits_[0] |= 0x00000004u;
}
void SpellStartReq::clear_has_dir() {
  _has_bits_[0] &= ~0x00000004u;
}
void SpellStartReq::clear_dir() {
  if (dir_ != NULL) dir_->::pb::Vector::Clear();
  clear_has_dir();
}
const ::pb::Vector& SpellStartReq::dir() const {
  // @@protoc_insertion_point(field_get:pb.SpellStartReq.dir)
  return dir_ != NULL ? *dir_
                         : *::pb::Vector::internal_default_instance();
}
::pb::Vector* SpellStartReq::mutable_dir() {
  set_has_dir();
  if (dir_ == NULL) {
    dir_ = new ::pb::Vector;
  }
  // @@protoc_insertion_point(field_mutable:pb.SpellStartReq.dir)
  return dir_;
}
::pb::Vector* SpellStartReq::release_dir() {
  // @@protoc_insertion_point(field_release:pb.SpellStartReq.dir)
  clear_has_dir();
  ::pb::Vector* temp = dir_;
  dir_ = NULL;
  return temp;
}
void SpellStartReq::set_allocated_dir(::pb::Vector* dir) {
  delete dir_;
  dir_ = dir;
  if (dir) {
    set_has_dir();
  } else {
    clear_has_dir();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.SpellStartReq.dir)
}

inline const SpellStartReq* SpellStartReq::internal_default_instance() {
  return &SpellStartReq_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SpellLevelUpReq::kXmlIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SpellLevelUpReq::SpellLevelUpReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_game_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.SpellLevelUpReq)
}

void SpellLevelUpReq::InitAsDefaultInstance() {
}

SpellLevelUpReq::SpellLevelUpReq(const SpellLevelUpReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.SpellLevelUpReq)
}

void SpellLevelUpReq::SharedCtor() {
  _cached_size_ = 0;
  xml_id_ = 0u;
}

SpellLevelUpReq::~SpellLevelUpReq() {
  // @@protoc_insertion_point(destructor:pb.SpellLevelUpReq)
  SharedDtor();
}

void SpellLevelUpReq::SharedDtor() {
}

void SpellLevelUpReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SpellLevelUpReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SpellLevelUpReq_descriptor_;
}

const SpellLevelUpReq& SpellLevelUpReq::default_instance() {
  protobuf_InitDefaults_game_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<SpellLevelUpReq> SpellLevelUpReq_default_instance_;

SpellLevelUpReq* SpellLevelUpReq::New(::google::protobuf::Arena* arena) const {
  SpellLevelUpReq* n = new SpellLevelUpReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SpellLevelUpReq::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.SpellLevelUpReq)
  xml_id_ = 0u;
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool SpellLevelUpReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.SpellLevelUpReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 xml_id = 1;
      case 1: {
        if (tag == 8) {
          set_has_xml_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &xml_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.SpellLevelUpReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.SpellLevelUpReq)
  return false;
#undef DO_
}

void SpellLevelUpReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.SpellLevelUpReq)
  // required uint32 xml_id = 1;
  if (has_xml_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->xml_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.SpellLevelUpReq)
}

::google::protobuf::uint8* SpellLevelUpReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.SpellLevelUpReq)
  // required uint32 xml_id = 1;
  if (has_xml_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->xml_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.SpellLevelUpReq)
  return target;
}

size_t SpellLevelUpReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.SpellLevelUpReq)
  size_t total_size = 0;

  // required uint32 xml_id = 1;
  if (has_xml_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->xml_id());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SpellLevelUpReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.SpellLevelUpReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SpellLevelUpReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SpellLevelUpReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.SpellLevelUpReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.SpellLevelUpReq)
    UnsafeMergeFrom(*source);
  }
}

void SpellLevelUpReq::MergeFrom(const SpellLevelUpReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.SpellLevelUpReq)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void SpellLevelUpReq::UnsafeMergeFrom(const SpellLevelUpReq& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_xml_id()) {
      set_xml_id(from.xml_id());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void SpellLevelUpReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.SpellLevelUpReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SpellLevelUpReq::CopyFrom(const SpellLevelUpReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.SpellLevelUpReq)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool SpellLevelUpReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void SpellLevelUpReq::Swap(SpellLevelUpReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SpellLevelUpReq::InternalSwap(SpellLevelUpReq* other) {
  std::swap(xml_id_, other->xml_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SpellLevelUpReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SpellLevelUpReq_descriptor_;
  metadata.reflection = SpellLevelUpReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SpellLevelUpReq

// required uint32 xml_id = 1;
bool SpellLevelUpReq::has_xml_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SpellLevelUpReq::set_has_xml_id() {
  _has_bits_[0] |= 0x00000001u;
}
void SpellLevelUpReq::clear_has_xml_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void SpellLevelUpReq::clear_xml_id() {
  xml_id_ = 0u;
  clear_has_xml_id();
}
::google::protobuf::uint32 SpellLevelUpReq::xml_id() const {
  // @@protoc_insertion_point(field_get:pb.SpellLevelUpReq.xml_id)
  return xml_id_;
}
void SpellLevelUpReq::set_xml_id(::google::protobuf::uint32 value) {
  set_has_xml_id();
  xml_id_ = value;
  // @@protoc_insertion_point(field_set:pb.SpellLevelUpReq.xml_id)
}

inline const SpellLevelUpReq* SpellLevelUpReq::internal_default_instance() {
  return &SpellLevelUpReq_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int KillNotify_KillInfo::kCatalogFieldNumber;
const int KillNotify_KillInfo::kNumberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

KillNotify_KillInfo::KillNotify_KillInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_game_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.KillNotify.KillInfo)
}

void KillNotify_KillInfo::InitAsDefaultInstance() {
}

KillNotify_KillInfo::KillNotify_KillInfo(const KillNotify_KillInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.KillNotify.KillInfo)
}

void KillNotify_KillInfo::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&catalog_, 0, reinterpret_cast<char*>(&number_) -
    reinterpret_cast<char*>(&catalog_) + sizeof(number_));
}

KillNotify_KillInfo::~KillNotify_KillInfo() {
  // @@protoc_insertion_point(destructor:pb.KillNotify.KillInfo)
  SharedDtor();
}

void KillNotify_KillInfo::SharedDtor() {
}

void KillNotify_KillInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* KillNotify_KillInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return KillNotify_KillInfo_descriptor_;
}

const KillNotify_KillInfo& KillNotify_KillInfo::default_instance() {
  protobuf_InitDefaults_game_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<KillNotify_KillInfo> KillNotify_KillInfo_default_instance_;

KillNotify_KillInfo* KillNotify_KillInfo::New(::google::protobuf::Arena* arena) const {
  KillNotify_KillInfo* n = new KillNotify_KillInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void KillNotify_KillInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.KillNotify.KillInfo)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(KillNotify_KillInfo, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<KillNotify_KillInfo*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(catalog_, number_);

#undef ZR_HELPER_
#undef ZR_

  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool KillNotify_KillInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.KillNotify.KillInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 catalog = 1;
      case 1: {
        if (tag == 8) {
          set_has_catalog();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &catalog_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_number;
        break;
      }

      // required uint32 number = 2;
      case 2: {
        if (tag == 16) {
         parse_number:
          set_has_number();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &number_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.KillNotify.KillInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.KillNotify.KillInfo)
  return false;
#undef DO_
}

void KillNotify_KillInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.KillNotify.KillInfo)
  // required uint32 catalog = 1;
  if (has_catalog()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->catalog(), output);
  }

  // required uint32 number = 2;
  if (has_number()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->number(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.KillNotify.KillInfo)
}

::google::protobuf::uint8* KillNotify_KillInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.KillNotify.KillInfo)
  // required uint32 catalog = 1;
  if (has_catalog()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->catalog(), target);
  }

  // required uint32 number = 2;
  if (has_number()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->number(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.KillNotify.KillInfo)
  return target;
}

size_t KillNotify_KillInfo::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:pb.KillNotify.KillInfo)
  size_t total_size = 0;

  if (has_catalog()) {
    // required uint32 catalog = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->catalog());
  }

  if (has_number()) {
    // required uint32 number = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->number());
  }

  return total_size;
}
size_t KillNotify_KillInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.KillNotify.KillInfo)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint32 catalog = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->catalog());

    // required uint32 number = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->number());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void KillNotify_KillInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.KillNotify.KillInfo)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const KillNotify_KillInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const KillNotify_KillInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.KillNotify.KillInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.KillNotify.KillInfo)
    UnsafeMergeFrom(*source);
  }
}

void KillNotify_KillInfo::MergeFrom(const KillNotify_KillInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.KillNotify.KillInfo)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void KillNotify_KillInfo::UnsafeMergeFrom(const KillNotify_KillInfo& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_catalog()) {
      set_catalog(from.catalog());
    }
    if (from.has_number()) {
      set_number(from.number());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void KillNotify_KillInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.KillNotify.KillInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KillNotify_KillInfo::CopyFrom(const KillNotify_KillInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.KillNotify.KillInfo)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool KillNotify_KillInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void KillNotify_KillInfo::Swap(KillNotify_KillInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void KillNotify_KillInfo::InternalSwap(KillNotify_KillInfo* other) {
  std::swap(catalog_, other->catalog_);
  std::swap(number_, other->number_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata KillNotify_KillInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = KillNotify_KillInfo_descriptor_;
  metadata.reflection = KillNotify_KillInfo_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int KillNotify::kPlayerIdFieldNumber;
const int KillNotify::kKilledIdFieldNumber;
const int KillNotify::kInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

KillNotify::KillNotify()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_game_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.KillNotify)
}

void KillNotify::InitAsDefaultInstance() {
}

KillNotify::KillNotify(const KillNotify& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.KillNotify)
}

void KillNotify::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&player_id_, 0, reinterpret_cast<char*>(&killed_id_) -
    reinterpret_cast<char*>(&player_id_) + sizeof(killed_id_));
}

KillNotify::~KillNotify() {
  // @@protoc_insertion_point(destructor:pb.KillNotify)
  SharedDtor();
}

void KillNotify::SharedDtor() {
}

void KillNotify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* KillNotify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return KillNotify_descriptor_;
}

const KillNotify& KillNotify::default_instance() {
  protobuf_InitDefaults_game_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<KillNotify> KillNotify_default_instance_;

KillNotify* KillNotify::New(::google::protobuf::Arena* arena) const {
  KillNotify* n = new KillNotify;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void KillNotify::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.KillNotify)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(KillNotify, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<KillNotify*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(player_id_, killed_id_);

#undef ZR_HELPER_
#undef ZR_

  info_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool KillNotify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.KillNotify)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 player_id = 1;
      case 1: {
        if (tag == 8) {
          set_has_player_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &player_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_killed_id;
        break;
      }

      // required uint32 killed_id = 2;
      case 2: {
        if (tag == 16) {
         parse_killed_id:
          set_has_killed_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &killed_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_info;
        break;
      }

      // repeated .pb.KillNotify.KillInfo info = 3;
      case 3: {
        if (tag == 26) {
         parse_info:
          DO_(input->IncrementRecursionDepth());
         parse_loop_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_info;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.KillNotify)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.KillNotify)
  return false;
#undef DO_
}

void KillNotify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.KillNotify)
  // required uint32 player_id = 1;
  if (has_player_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->player_id(), output);
  }

  // required uint32 killed_id = 2;
  if (has_killed_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->killed_id(), output);
  }

  // repeated .pb.KillNotify.KillInfo info = 3;
  for (unsigned int i = 0, n = this->info_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->info(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.KillNotify)
}

::google::protobuf::uint8* KillNotify::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.KillNotify)
  // required uint32 player_id = 1;
  if (has_player_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->player_id(), target);
  }

  // required uint32 killed_id = 2;
  if (has_killed_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->killed_id(), target);
  }

  // repeated .pb.KillNotify.KillInfo info = 3;
  for (unsigned int i = 0, n = this->info_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->info(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.KillNotify)
  return target;
}

size_t KillNotify::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:pb.KillNotify)
  size_t total_size = 0;

  if (has_player_id()) {
    // required uint32 player_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->player_id());
  }

  if (has_killed_id()) {
    // required uint32 killed_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->killed_id());
  }

  return total_size;
}
size_t KillNotify::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.KillNotify)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint32 player_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->player_id());

    // required uint32 killed_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->killed_id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .pb.KillNotify.KillInfo info = 3;
  {
    unsigned int count = this->info_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->info(i));
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void KillNotify::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.KillNotify)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const KillNotify* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const KillNotify>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.KillNotify)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.KillNotify)
    UnsafeMergeFrom(*source);
  }
}

void KillNotify::MergeFrom(const KillNotify& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.KillNotify)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void KillNotify::UnsafeMergeFrom(const KillNotify& from) {
  GOOGLE_DCHECK(&from != this);
  info_.MergeFrom(from.info_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_player_id()) {
      set_player_id(from.player_id());
    }
    if (from.has_killed_id()) {
      set_killed_id(from.killed_id());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void KillNotify::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.KillNotify)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KillNotify::CopyFrom(const KillNotify& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.KillNotify)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool KillNotify::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->info())) return false;
  return true;
}

void KillNotify::Swap(KillNotify* other) {
  if (other == this) return;
  InternalSwap(other);
}
void KillNotify::InternalSwap(KillNotify* other) {
  std::swap(player_id_, other->player_id_);
  std::swap(killed_id_, other->killed_id_);
  info_.UnsafeArenaSwap(&other->info_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata KillNotify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = KillNotify_descriptor_;
  metadata.reflection = KillNotify_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// KillNotify_KillInfo

// required uint32 catalog = 1;
bool KillNotify_KillInfo::has_catalog() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void KillNotify_KillInfo::set_has_catalog() {
  _has_bits_[0] |= 0x00000001u;
}
void KillNotify_KillInfo::clear_has_catalog() {
  _has_bits_[0] &= ~0x00000001u;
}
void KillNotify_KillInfo::clear_catalog() {
  catalog_ = 0u;
  clear_has_catalog();
}
::google::protobuf::uint32 KillNotify_KillInfo::catalog() const {
  // @@protoc_insertion_point(field_get:pb.KillNotify.KillInfo.catalog)
  return catalog_;
}
void KillNotify_KillInfo::set_catalog(::google::protobuf::uint32 value) {
  set_has_catalog();
  catalog_ = value;
  // @@protoc_insertion_point(field_set:pb.KillNotify.KillInfo.catalog)
}

// required uint32 number = 2;
bool KillNotify_KillInfo::has_number() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void KillNotify_KillInfo::set_has_number() {
  _has_bits_[0] |= 0x00000002u;
}
void KillNotify_KillInfo::clear_has_number() {
  _has_bits_[0] &= ~0x00000002u;
}
void KillNotify_KillInfo::clear_number() {
  number_ = 0u;
  clear_has_number();
}
::google::protobuf::uint32 KillNotify_KillInfo::number() const {
  // @@protoc_insertion_point(field_get:pb.KillNotify.KillInfo.number)
  return number_;
}
void KillNotify_KillInfo::set_number(::google::protobuf::uint32 value) {
  set_has_number();
  number_ = value;
  // @@protoc_insertion_point(field_set:pb.KillNotify.KillInfo.number)
}

inline const KillNotify_KillInfo* KillNotify_KillInfo::internal_default_instance() {
  return &KillNotify_KillInfo_default_instance_.get();
}
// -------------------------------------------------------------------

// KillNotify

// required uint32 player_id = 1;
bool KillNotify::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void KillNotify::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
void KillNotify::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void KillNotify::clear_player_id() {
  player_id_ = 0u;
  clear_has_player_id();
}
::google::protobuf::uint32 KillNotify::player_id() const {
  // @@protoc_insertion_point(field_get:pb.KillNotify.player_id)
  return player_id_;
}
void KillNotify::set_player_id(::google::protobuf::uint32 value) {
  set_has_player_id();
  player_id_ = value;
  // @@protoc_insertion_point(field_set:pb.KillNotify.player_id)
}

// required uint32 killed_id = 2;
bool KillNotify::has_killed_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void KillNotify::set_has_killed_id() {
  _has_bits_[0] |= 0x00000002u;
}
void KillNotify::clear_has_killed_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void KillNotify::clear_killed_id() {
  killed_id_ = 0u;
  clear_has_killed_id();
}
::google::protobuf::uint32 KillNotify::killed_id() const {
  // @@protoc_insertion_point(field_get:pb.KillNotify.killed_id)
  return killed_id_;
}
void KillNotify::set_killed_id(::google::protobuf::uint32 value) {
  set_has_killed_id();
  killed_id_ = value;
  // @@protoc_insertion_point(field_set:pb.KillNotify.killed_id)
}

// repeated .pb.KillNotify.KillInfo info = 3;
int KillNotify::info_size() const {
  return info_.size();
}
void KillNotify::clear_info() {
  info_.Clear();
}
const ::pb::KillNotify_KillInfo& KillNotify::info(int index) const {
  // @@protoc_insertion_point(field_get:pb.KillNotify.info)
  return info_.Get(index);
}
::pb::KillNotify_KillInfo* KillNotify::mutable_info(int index) {
  // @@protoc_insertion_point(field_mutable:pb.KillNotify.info)
  return info_.Mutable(index);
}
::pb::KillNotify_KillInfo* KillNotify::add_info() {
  // @@protoc_insertion_point(field_add:pb.KillNotify.info)
  return info_.Add();
}
::google::protobuf::RepeatedPtrField< ::pb::KillNotify_KillInfo >*
KillNotify::mutable_info() {
  // @@protoc_insertion_point(field_mutable_list:pb.KillNotify.info)
  return &info_;
}
const ::google::protobuf::RepeatedPtrField< ::pb::KillNotify_KillInfo >&
KillNotify::info() const {
  // @@protoc_insertion_point(field_list:pb.KillNotify.info)
  return info_;
}

inline const KillNotify* KillNotify::internal_default_instance() {
  return &KillNotify_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoomPingReq::RoomPingReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_game_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.RoomPingReq)
}

void RoomPingReq::InitAsDefaultInstance() {
}

RoomPingReq::RoomPingReq(const RoomPingReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.RoomPingReq)
}

void RoomPingReq::SharedCtor() {
  _cached_size_ = 0;
}

RoomPingReq::~RoomPingReq() {
  // @@protoc_insertion_point(destructor:pb.RoomPingReq)
  SharedDtor();
}

void RoomPingReq::SharedDtor() {
}

void RoomPingReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoomPingReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RoomPingReq_descriptor_;
}

const RoomPingReq& RoomPingReq::default_instance() {
  protobuf_InitDefaults_game_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<RoomPingReq> RoomPingReq_default_instance_;

RoomPingReq* RoomPingReq::New(::google::protobuf::Arena* arena) const {
  RoomPingReq* n = new RoomPingReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoomPingReq::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.RoomPingReq)
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool RoomPingReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.RoomPingReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:pb.RoomPingReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.RoomPingReq)
  return false;
#undef DO_
}

void RoomPingReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.RoomPingReq)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.RoomPingReq)
}

::google::protobuf::uint8* RoomPingReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.RoomPingReq)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.RoomPingReq)
  return target;
}

size_t RoomPingReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.RoomPingReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoomPingReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.RoomPingReq)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const RoomPingReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RoomPingReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.RoomPingReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.RoomPingReq)
    UnsafeMergeFrom(*source);
  }
}

void RoomPingReq::MergeFrom(const RoomPingReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.RoomPingReq)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void RoomPingReq::UnsafeMergeFrom(const RoomPingReq& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void RoomPingReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.RoomPingReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoomPingReq::CopyFrom(const RoomPingReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.RoomPingReq)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool RoomPingReq::IsInitialized() const {

  return true;
}

void RoomPingReq::Swap(RoomPingReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoomPingReq::InternalSwap(RoomPingReq* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoomPingReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RoomPingReq_descriptor_;
  metadata.reflection = RoomPingReq_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RoomPingReq

inline const RoomPingReq* RoomPingReq::internal_default_instance() {
  return &RoomPingReq_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoomPingRes::kCurFrameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoomPingRes::RoomPingRes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_game_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.RoomPingRes)
}

void RoomPingRes::InitAsDefaultInstance() {
}

RoomPingRes::RoomPingRes(const RoomPingRes& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.RoomPingRes)
}

void RoomPingRes::SharedCtor() {
  _cached_size_ = 0;
  cur_frame_ = 0u;
}

RoomPingRes::~RoomPingRes() {
  // @@protoc_insertion_point(destructor:pb.RoomPingRes)
  SharedDtor();
}

void RoomPingRes::SharedDtor() {
}

void RoomPingRes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoomPingRes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RoomPingRes_descriptor_;
}

const RoomPingRes& RoomPingRes::default_instance() {
  protobuf_InitDefaults_game_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<RoomPingRes> RoomPingRes_default_instance_;

RoomPingRes* RoomPingRes::New(::google::protobuf::Arena* arena) const {
  RoomPingRes* n = new RoomPingRes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoomPingRes::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.RoomPingRes)
  cur_frame_ = 0u;
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool RoomPingRes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.RoomPingRes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 cur_frame = 1;
      case 1: {
        if (tag == 8) {
          set_has_cur_frame();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cur_frame_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.RoomPingRes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.RoomPingRes)
  return false;
#undef DO_
}

void RoomPingRes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.RoomPingRes)
  // required uint32 cur_frame = 1;
  if (has_cur_frame()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->cur_frame(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.RoomPingRes)
}

::google::protobuf::uint8* RoomPingRes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.RoomPingRes)
  // required uint32 cur_frame = 1;
  if (has_cur_frame()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->cur_frame(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.RoomPingRes)
  return target;
}

size_t RoomPingRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.RoomPingRes)
  size_t total_size = 0;

  // required uint32 cur_frame = 1;
  if (has_cur_frame()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cur_frame());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoomPingRes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.RoomPingRes)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const RoomPingRes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RoomPingRes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.RoomPingRes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.RoomPingRes)
    UnsafeMergeFrom(*source);
  }
}

void RoomPingRes::MergeFrom(const RoomPingRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.RoomPingRes)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void RoomPingRes::UnsafeMergeFrom(const RoomPingRes& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cur_frame()) {
      set_cur_frame(from.cur_frame());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void RoomPingRes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.RoomPingRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoomPingRes::CopyFrom(const RoomPingRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.RoomPingRes)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool RoomPingRes::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void RoomPingRes::Swap(RoomPingRes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoomPingRes::InternalSwap(RoomPingRes* other) {
  std::swap(cur_frame_, other->cur_frame_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoomPingRes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RoomPingRes_descriptor_;
  metadata.reflection = RoomPingRes_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RoomPingRes

// required uint32 cur_frame = 1;
bool RoomPingRes::has_cur_frame() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RoomPingRes::set_has_cur_frame() {
  _has_bits_[0] |= 0x00000001u;
}
void RoomPingRes::clear_has_cur_frame() {
  _has_bits_[0] &= ~0x00000001u;
}
void RoomPingRes::clear_cur_frame() {
  cur_frame_ = 0u;
  clear_has_cur_frame();
}
::google::protobuf::uint32 RoomPingRes::cur_frame() const {
  // @@protoc_insertion_point(field_get:pb.RoomPingRes.cur_frame)
  return cur_frame_;
}
void RoomPingRes::set_cur_frame(::google::protobuf::uint32 value) {
  set_has_cur_frame();
  cur_frame_ = value;
  // @@protoc_insertion_point(field_set:pb.RoomPingRes.cur_frame)
}

inline const RoomPingRes* RoomPingRes::internal_default_instance() {
  return &RoomPingRes_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FrameMove::kIdFieldNumber;
const int FrameMove::kPosFieldNumber;
const int FrameMove::kDirFieldNumber;
const int FrameMove::kCurPosFieldNumber;
const int FrameMove::kCurDirFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FrameMove::FrameMove()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_game_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.FrameMove)
}

void FrameMove::InitAsDefaultInstance() {
  pos_ = const_cast< ::pb::Vector*>(
      ::pb::Vector::internal_default_instance());
  dir_ = const_cast< ::pb::Vector*>(
      ::pb::Vector::internal_default_instance());
  cur_pos_ = const_cast< ::pb::Vector*>(
      ::pb::Vector::internal_default_instance());
  cur_dir_ = const_cast< ::pb::Vector*>(
      ::pb::Vector::internal_default_instance());
}

FrameMove::FrameMove(const FrameMove& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.FrameMove)
}

void FrameMove::SharedCtor() {
  _cached_size_ = 0;
  pos_ = NULL;
  dir_ = NULL;
  cur_pos_ = NULL;
  cur_dir_ = NULL;
  id_ = 0u;
}

FrameMove::~FrameMove() {
  // @@protoc_insertion_point(destructor:pb.FrameMove)
  SharedDtor();
}

void FrameMove::SharedDtor() {
  if (this != &FrameMove_default_instance_.get()) {
    delete pos_;
    delete dir_;
    delete cur_pos_;
    delete cur_dir_;
  }
}

void FrameMove::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FrameMove::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FrameMove_descriptor_;
}

const FrameMove& FrameMove::default_instance() {
  protobuf_InitDefaults_game_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<FrameMove> FrameMove_default_instance_;

FrameMove* FrameMove::New(::google::protobuf::Arena* arena) const {
  FrameMove* n = new FrameMove;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FrameMove::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.FrameMove)
  if (_has_bits_[0 / 32] & 31u) {
    id_ = 0u;
    if (has_pos()) {
      if (pos_ != NULL) pos_->::pb::Vector::Clear();
    }
    if (has_dir()) {
      if (dir_ != NULL) dir_->::pb::Vector::Clear();
    }
    if (has_cur_pos()) {
      if (cur_pos_ != NULL) cur_pos_->::pb::Vector::Clear();
    }
    if (has_cur_dir()) {
      if (cur_dir_ != NULL) cur_dir_->::pb::Vector::Clear();
    }
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool FrameMove::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.FrameMove)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (tag == 8) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_pos;
        break;
      }

      // required .pb.Vector pos = 2;
      case 2: {
        if (tag == 18) {
         parse_pos:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_dir;
        break;
      }

      // required .pb.Vector dir = 3;
      case 3: {
        if (tag == 26) {
         parse_dir:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_dir()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_cur_pos;
        break;
      }

      // required .pb.Vector cur_pos = 4;
      case 4: {
        if (tag == 34) {
         parse_cur_pos:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_cur_pos()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_cur_dir;
        break;
      }

      // required .pb.Vector cur_dir = 5;
      case 5: {
        if (tag == 42) {
         parse_cur_dir:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_cur_dir()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.FrameMove)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.FrameMove)
  return false;
#undef DO_
}

void FrameMove::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.FrameMove)
  // required uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // required .pb.Vector pos = 2;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->pos_, output);
  }

  // required .pb.Vector dir = 3;
  if (has_dir()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->dir_, output);
  }

  // required .pb.Vector cur_pos = 4;
  if (has_cur_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->cur_pos_, output);
  }

  // required .pb.Vector cur_dir = 5;
  if (has_cur_dir()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->cur_dir_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.FrameMove)
}

::google::protobuf::uint8* FrameMove::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.FrameMove)
  // required uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // required .pb.Vector pos = 2;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->pos_, false, target);
  }

  // required .pb.Vector dir = 3;
  if (has_dir()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->dir_, false, target);
  }

  // required .pb.Vector cur_pos = 4;
  if (has_cur_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->cur_pos_, false, target);
  }

  // required .pb.Vector cur_dir = 5;
  if (has_cur_dir()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->cur_dir_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.FrameMove)
  return target;
}

size_t FrameMove::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:pb.FrameMove)
  size_t total_size = 0;

  if (has_id()) {
    // required uint32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  if (has_pos()) {
    // required .pb.Vector pos = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pos_);
  }

  if (has_dir()) {
    // required .pb.Vector dir = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->dir_);
  }

  if (has_cur_pos()) {
    // required .pb.Vector cur_pos = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->cur_pos_);
  }

  if (has_cur_dir()) {
    // required .pb.Vector cur_dir = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->cur_dir_);
  }

  return total_size;
}
size_t FrameMove::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.FrameMove)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x0000001f) ^ 0x0000001f) == 0) {  // All required fields are present.
    // required uint32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());

    // required .pb.Vector pos = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pos_);

    // required .pb.Vector dir = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->dir_);

    // required .pb.Vector cur_pos = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->cur_pos_);

    // required .pb.Vector cur_dir = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->cur_dir_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FrameMove::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.FrameMove)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const FrameMove* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FrameMove>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.FrameMove)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.FrameMove)
    UnsafeMergeFrom(*source);
  }
}

void FrameMove::MergeFrom(const FrameMove& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.FrameMove)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void FrameMove::UnsafeMergeFrom(const FrameMove& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_pos()) {
      mutable_pos()->::pb::Vector::MergeFrom(from.pos());
    }
    if (from.has_dir()) {
      mutable_dir()->::pb::Vector::MergeFrom(from.dir());
    }
    if (from.has_cur_pos()) {
      mutable_cur_pos()->::pb::Vector::MergeFrom(from.cur_pos());
    }
    if (from.has_cur_dir()) {
      mutable_cur_dir()->::pb::Vector::MergeFrom(from.cur_dir());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void FrameMove::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.FrameMove)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FrameMove::CopyFrom(const FrameMove& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.FrameMove)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool FrameMove::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;

  if (has_pos()) {
    if (!this->pos_->IsInitialized()) return false;
  }
  if (has_dir()) {
    if (!this->dir_->IsInitialized()) return false;
  }
  if (has_cur_pos()) {
    if (!this->cur_pos_->IsInitialized()) return false;
  }
  if (has_cur_dir()) {
    if (!this->cur_dir_->IsInitialized()) return false;
  }
  return true;
}

void FrameMove::Swap(FrameMove* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FrameMove::InternalSwap(FrameMove* other) {
  std::swap(id_, other->id_);
  std::swap(pos_, other->pos_);
  std::swap(dir_, other->dir_);
  std::swap(cur_pos_, other->cur_pos_);
  std::swap(cur_dir_, other->cur_dir_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FrameMove::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FrameMove_descriptor_;
  metadata.reflection = FrameMove_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FrameMove

// required uint32 id = 1;
bool FrameMove::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void FrameMove::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void FrameMove::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void FrameMove::clear_id() {
  id_ = 0u;
  clear_has_id();
}
::google::protobuf::uint32 FrameMove::id() const {
  // @@protoc_insertion_point(field_get:pb.FrameMove.id)
  return id_;
}
void FrameMove::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:pb.FrameMove.id)
}

// required .pb.Vector pos = 2;
bool FrameMove::has_pos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void FrameMove::set_has_pos() {
  _has_bits_[0] |= 0x00000002u;
}
void FrameMove::clear_has_pos() {
  _has_bits_[0] &= ~0x00000002u;
}
void FrameMove::clear_pos() {
  if (pos_ != NULL) pos_->::pb::Vector::Clear();
  clear_has_pos();
}
const ::pb::Vector& FrameMove::pos() const {
  // @@protoc_insertion_point(field_get:pb.FrameMove.pos)
  return pos_ != NULL ? *pos_
                         : *::pb::Vector::internal_default_instance();
}
::pb::Vector* FrameMove::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) {
    pos_ = new ::pb::Vector;
  }
  // @@protoc_insertion_point(field_mutable:pb.FrameMove.pos)
  return pos_;
}
::pb::Vector* FrameMove::release_pos() {
  // @@protoc_insertion_point(field_release:pb.FrameMove.pos)
  clear_has_pos();
  ::pb::Vector* temp = pos_;
  pos_ = NULL;
  return temp;
}
void FrameMove::set_allocated_pos(::pb::Vector* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.FrameMove.pos)
}

// required .pb.Vector dir = 3;
bool FrameMove::has_dir() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void FrameMove::set_has_dir() {
  _has_bits_[0] |= 0x00000004u;
}
void FrameMove::clear_has_dir() {
  _has_bits_[0] &= ~0x00000004u;
}
void FrameMove::clear_dir() {
  if (dir_ != NULL) dir_->::pb::Vector::Clear();
  clear_has_dir();
}
const ::pb::Vector& FrameMove::dir() const {
  // @@protoc_insertion_point(field_get:pb.FrameMove.dir)
  return dir_ != NULL ? *dir_
                         : *::pb::Vector::internal_default_instance();
}
::pb::Vector* FrameMove::mutable_dir() {
  set_has_dir();
  if (dir_ == NULL) {
    dir_ = new ::pb::Vector;
  }
  // @@protoc_insertion_point(field_mutable:pb.FrameMove.dir)
  return dir_;
}
::pb::Vector* FrameMove::release_dir() {
  // @@protoc_insertion_point(field_release:pb.FrameMove.dir)
  clear_has_dir();
  ::pb::Vector* temp = dir_;
  dir_ = NULL;
  return temp;
}
void FrameMove::set_allocated_dir(::pb::Vector* dir) {
  delete dir_;
  dir_ = dir;
  if (dir) {
    set_has_dir();
  } else {
    clear_has_dir();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.FrameMove.dir)
}

// required .pb.Vector cur_pos = 4;
bool FrameMove::has_cur_pos() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void FrameMove::set_has_cur_pos() {
  _has_bits_[0] |= 0x00000008u;
}
void FrameMove::clear_has_cur_pos() {
  _has_bits_[0] &= ~0x00000008u;
}
void FrameMove::clear_cur_pos() {
  if (cur_pos_ != NULL) cur_pos_->::pb::Vector::Clear();
  clear_has_cur_pos();
}
const ::pb::Vector& FrameMove::cur_pos() const {
  // @@protoc_insertion_point(field_get:pb.FrameMove.cur_pos)
  return cur_pos_ != NULL ? *cur_pos_
                         : *::pb::Vector::internal_default_instance();
}
::pb::Vector* FrameMove::mutable_cur_pos() {
  set_has_cur_pos();
  if (cur_pos_ == NULL) {
    cur_pos_ = new ::pb::Vector;
  }
  // @@protoc_insertion_point(field_mutable:pb.FrameMove.cur_pos)
  return cur_pos_;
}
::pb::Vector* FrameMove::release_cur_pos() {
  // @@protoc_insertion_point(field_release:pb.FrameMove.cur_pos)
  clear_has_cur_pos();
  ::pb::Vector* temp = cur_pos_;
  cur_pos_ = NULL;
  return temp;
}
void FrameMove::set_allocated_cur_pos(::pb::Vector* cur_pos) {
  delete cur_pos_;
  cur_pos_ = cur_pos;
  if (cur_pos) {
    set_has_cur_pos();
  } else {
    clear_has_cur_pos();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.FrameMove.cur_pos)
}

// required .pb.Vector cur_dir = 5;
bool FrameMove::has_cur_dir() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void FrameMove::set_has_cur_dir() {
  _has_bits_[0] |= 0x00000010u;
}
void FrameMove::clear_has_cur_dir() {
  _has_bits_[0] &= ~0x00000010u;
}
void FrameMove::clear_cur_dir() {
  if (cur_dir_ != NULL) cur_dir_->::pb::Vector::Clear();
  clear_has_cur_dir();
}
const ::pb::Vector& FrameMove::cur_dir() const {
  // @@protoc_insertion_point(field_get:pb.FrameMove.cur_dir)
  return cur_dir_ != NULL ? *cur_dir_
                         : *::pb::Vector::internal_default_instance();
}
::pb::Vector* FrameMove::mutable_cur_dir() {
  set_has_cur_dir();
  if (cur_dir_ == NULL) {
    cur_dir_ = new ::pb::Vector;
  }
  // @@protoc_insertion_point(field_mutable:pb.FrameMove.cur_dir)
  return cur_dir_;
}
::pb::Vector* FrameMove::release_cur_dir() {
  // @@protoc_insertion_point(field_release:pb.FrameMove.cur_dir)
  clear_has_cur_dir();
  ::pb::Vector* temp = cur_dir_;
  cur_dir_ = NULL;
  return temp;
}
void FrameMove::set_allocated_cur_dir(::pb::Vector* cur_dir) {
  delete cur_dir_;
  cur_dir_ = cur_dir;
  if (cur_dir) {
    set_has_cur_dir();
  } else {
    clear_has_cur_dir();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.FrameMove.cur_dir)
}

inline const FrameMove* FrameMove::internal_default_instance() {
  return &FrameMove_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FrameMoveTest::kIdFieldNumber;
const int FrameMoveTest::kPosFieldNumber;
const int FrameMoveTest::kDirFieldNumber;
const int FrameMoveTest::kPrePosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FrameMoveTest::FrameMoveTest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_game_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.FrameMoveTest)
}

void FrameMoveTest::InitAsDefaultInstance() {
  pos_ = const_cast< ::pb::Vector*>(
      ::pb::Vector::internal_default_instance());
  dir_ = const_cast< ::pb::Vector*>(
      ::pb::Vector::internal_default_instance());
  pre_pos_ = const_cast< ::pb::Vector*>(
      ::pb::Vector::internal_default_instance());
}

FrameMoveTest::FrameMoveTest(const FrameMoveTest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.FrameMoveTest)
}

void FrameMoveTest::SharedCtor() {
  _cached_size_ = 0;
  pos_ = NULL;
  dir_ = NULL;
  pre_pos_ = NULL;
  id_ = 0u;
}

FrameMoveTest::~FrameMoveTest() {
  // @@protoc_insertion_point(destructor:pb.FrameMoveTest)
  SharedDtor();
}

void FrameMoveTest::SharedDtor() {
  if (this != &FrameMoveTest_default_instance_.get()) {
    delete pos_;
    delete dir_;
    delete pre_pos_;
  }
}

void FrameMoveTest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FrameMoveTest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FrameMoveTest_descriptor_;
}

const FrameMoveTest& FrameMoveTest::default_instance() {
  protobuf_InitDefaults_game_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<FrameMoveTest> FrameMoveTest_default_instance_;

FrameMoveTest* FrameMoveTest::New(::google::protobuf::Arena* arena) const {
  FrameMoveTest* n = new FrameMoveTest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FrameMoveTest::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.FrameMoveTest)
  if (_has_bits_[0 / 32] & 15u) {
    id_ = 0u;
    if (has_pos()) {
      if (pos_ != NULL) pos_->::pb::Vector::Clear();
    }
    if (has_dir()) {
      if (dir_ != NULL) dir_->::pb::Vector::Clear();
    }
    if (has_pre_pos()) {
      if (pre_pos_ != NULL) pre_pos_->::pb::Vector::Clear();
    }
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool FrameMoveTest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.FrameMoveTest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (tag == 8) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_pos;
        break;
      }

      // required .pb.Vector pos = 2;
      case 2: {
        if (tag == 18) {
         parse_pos:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_dir;
        break;
      }

      // required .pb.Vector dir = 3;
      case 3: {
        if (tag == 26) {
         parse_dir:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_dir()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_pre_pos;
        break;
      }

      // required .pb.Vector pre_pos = 4;
      case 4: {
        if (tag == 34) {
         parse_pre_pos:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pre_pos()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.FrameMoveTest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.FrameMoveTest)
  return false;
#undef DO_
}

void FrameMoveTest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.FrameMoveTest)
  // required uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // required .pb.Vector pos = 2;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->pos_, output);
  }

  // required .pb.Vector dir = 3;
  if (has_dir()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->dir_, output);
  }

  // required .pb.Vector pre_pos = 4;
  if (has_pre_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->pre_pos_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.FrameMoveTest)
}

::google::protobuf::uint8* FrameMoveTest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.FrameMoveTest)
  // required uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // required .pb.Vector pos = 2;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->pos_, false, target);
  }

  // required .pb.Vector dir = 3;
  if (has_dir()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->dir_, false, target);
  }

  // required .pb.Vector pre_pos = 4;
  if (has_pre_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->pre_pos_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.FrameMoveTest)
  return target;
}

size_t FrameMoveTest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:pb.FrameMoveTest)
  size_t total_size = 0;

  if (has_id()) {
    // required uint32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  if (has_pos()) {
    // required .pb.Vector pos = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pos_);
  }

  if (has_dir()) {
    // required .pb.Vector dir = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->dir_);
  }

  if (has_pre_pos()) {
    // required .pb.Vector pre_pos = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pre_pos_);
  }

  return total_size;
}
size_t FrameMoveTest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.FrameMoveTest)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required uint32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());

    // required .pb.Vector pos = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pos_);

    // required .pb.Vector dir = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->dir_);

    // required .pb.Vector pre_pos = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pre_pos_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FrameMoveTest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.FrameMoveTest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const FrameMoveTest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FrameMoveTest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.FrameMoveTest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.FrameMoveTest)
    UnsafeMergeFrom(*source);
  }
}

void FrameMoveTest::MergeFrom(const FrameMoveTest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.FrameMoveTest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void FrameMoveTest::UnsafeMergeFrom(const FrameMoveTest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_pos()) {
      mutable_pos()->::pb::Vector::MergeFrom(from.pos());
    }
    if (from.has_dir()) {
      mutable_dir()->::pb::Vector::MergeFrom(from.dir());
    }
    if (from.has_pre_pos()) {
      mutable_pre_pos()->::pb::Vector::MergeFrom(from.pre_pos());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void FrameMoveTest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.FrameMoveTest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FrameMoveTest::CopyFrom(const FrameMoveTest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.FrameMoveTest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool FrameMoveTest::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  if (has_pos()) {
    if (!this->pos_->IsInitialized()) return false;
  }
  if (has_dir()) {
    if (!this->dir_->IsInitialized()) return false;
  }
  if (has_pre_pos()) {
    if (!this->pre_pos_->IsInitialized()) return false;
  }
  return true;
}

void FrameMoveTest::Swap(FrameMoveTest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FrameMoveTest::InternalSwap(FrameMoveTest* other) {
  std::swap(id_, other->id_);
  std::swap(pos_, other->pos_);
  std::swap(dir_, other->dir_);
  std::swap(pre_pos_, other->pre_pos_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FrameMoveTest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FrameMoveTest_descriptor_;
  metadata.reflection = FrameMoveTest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FrameMoveTest

// required uint32 id = 1;
bool FrameMoveTest::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void FrameMoveTest::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void FrameMoveTest::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void FrameMoveTest::clear_id() {
  id_ = 0u;
  clear_has_id();
}
::google::protobuf::uint32 FrameMoveTest::id() const {
  // @@protoc_insertion_point(field_get:pb.FrameMoveTest.id)
  return id_;
}
void FrameMoveTest::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:pb.FrameMoveTest.id)
}

// required .pb.Vector pos = 2;
bool FrameMoveTest::has_pos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void FrameMoveTest::set_has_pos() {
  _has_bits_[0] |= 0x00000002u;
}
void FrameMoveTest::clear_has_pos() {
  _has_bits_[0] &= ~0x00000002u;
}
void FrameMoveTest::clear_pos() {
  if (pos_ != NULL) pos_->::pb::Vector::Clear();
  clear_has_pos();
}
const ::pb::Vector& FrameMoveTest::pos() const {
  // @@protoc_insertion_point(field_get:pb.FrameMoveTest.pos)
  return pos_ != NULL ? *pos_
                         : *::pb::Vector::internal_default_instance();
}
::pb::Vector* FrameMoveTest::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) {
    pos_ = new ::pb::Vector;
  }
  // @@protoc_insertion_point(field_mutable:pb.FrameMoveTest.pos)
  return pos_;
}
::pb::Vector* FrameMoveTest::release_pos() {
  // @@protoc_insertion_point(field_release:pb.FrameMoveTest.pos)
  clear_has_pos();
  ::pb::Vector* temp = pos_;
  pos_ = NULL;
  return temp;
}
void FrameMoveTest::set_allocated_pos(::pb::Vector* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.FrameMoveTest.pos)
}

// required .pb.Vector dir = 3;
bool FrameMoveTest::has_dir() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void FrameMoveTest::set_has_dir() {
  _has_bits_[0] |= 0x00000004u;
}
void FrameMoveTest::clear_has_dir() {
  _has_bits_[0] &= ~0x00000004u;
}
void FrameMoveTest::clear_dir() {
  if (dir_ != NULL) dir_->::pb::Vector::Clear();
  clear_has_dir();
}
const ::pb::Vector& FrameMoveTest::dir() const {
  // @@protoc_insertion_point(field_get:pb.FrameMoveTest.dir)
  return dir_ != NULL ? *dir_
                         : *::pb::Vector::internal_default_instance();
}
::pb::Vector* FrameMoveTest::mutable_dir() {
  set_has_dir();
  if (dir_ == NULL) {
    dir_ = new ::pb::Vector;
  }
  // @@protoc_insertion_point(field_mutable:pb.FrameMoveTest.dir)
  return dir_;
}
::pb::Vector* FrameMoveTest::release_dir() {
  // @@protoc_insertion_point(field_release:pb.FrameMoveTest.dir)
  clear_has_dir();
  ::pb::Vector* temp = dir_;
  dir_ = NULL;
  return temp;
}
void FrameMoveTest::set_allocated_dir(::pb::Vector* dir) {
  delete dir_;
  dir_ = dir;
  if (dir) {
    set_has_dir();
  } else {
    clear_has_dir();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.FrameMoveTest.dir)
}

// required .pb.Vector pre_pos = 4;
bool FrameMoveTest::has_pre_pos() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void FrameMoveTest::set_has_pre_pos() {
  _has_bits_[0] |= 0x00000008u;
}
void FrameMoveTest::clear_has_pre_pos() {
  _has_bits_[0] &= ~0x00000008u;
}
void FrameMoveTest::clear_pre_pos() {
  if (pre_pos_ != NULL) pre_pos_->::pb::Vector::Clear();
  clear_has_pre_pos();
}
const ::pb::Vector& FrameMoveTest::pre_pos() const {
  // @@protoc_insertion_point(field_get:pb.FrameMoveTest.pre_pos)
  return pre_pos_ != NULL ? *pre_pos_
                         : *::pb::Vector::internal_default_instance();
}
::pb::Vector* FrameMoveTest::mutable_pre_pos() {
  set_has_pre_pos();
  if (pre_pos_ == NULL) {
    pre_pos_ = new ::pb::Vector;
  }
  // @@protoc_insertion_point(field_mutable:pb.FrameMoveTest.pre_pos)
  return pre_pos_;
}
::pb::Vector* FrameMoveTest::release_pre_pos() {
  // @@protoc_insertion_point(field_release:pb.FrameMoveTest.pre_pos)
  clear_has_pre_pos();
  ::pb::Vector* temp = pre_pos_;
  pre_pos_ = NULL;
  return temp;
}
void FrameMoveTest::set_allocated_pre_pos(::pb::Vector* pre_pos) {
  delete pre_pos_;
  pre_pos_ = pre_pos;
  if (pre_pos) {
    set_has_pre_pos();
  } else {
    clear_has_pre_pos();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.FrameMoveTest.pre_pos)
}

inline const FrameMoveTest* FrameMoveTest::internal_default_instance() {
  return &FrameMoveTest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FrameStop::kIdFieldNumber;
const int FrameStop::kPosFieldNumber;
const int FrameStop::kDirFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FrameStop::FrameStop()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_game_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.FrameStop)
}

void FrameStop::InitAsDefaultInstance() {
  pos_ = const_cast< ::pb::Vector*>(
      ::pb::Vector::internal_default_instance());
  dir_ = const_cast< ::pb::Vector*>(
      ::pb::Vector::internal_default_instance());
}

FrameStop::FrameStop(const FrameStop& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.FrameStop)
}

void FrameStop::SharedCtor() {
  _cached_size_ = 0;
  pos_ = NULL;
  dir_ = NULL;
  id_ = 0u;
}

FrameStop::~FrameStop() {
  // @@protoc_insertion_point(destructor:pb.FrameStop)
  SharedDtor();
}

void FrameStop::SharedDtor() {
  if (this != &FrameStop_default_instance_.get()) {
    delete pos_;
    delete dir_;
  }
}

void FrameStop::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FrameStop::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FrameStop_descriptor_;
}

const FrameStop& FrameStop::default_instance() {
  protobuf_InitDefaults_game_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<FrameStop> FrameStop_default_instance_;

FrameStop* FrameStop::New(::google::protobuf::Arena* arena) const {
  FrameStop* n = new FrameStop;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FrameStop::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.FrameStop)
  if (_has_bits_[0 / 32] & 7u) {
    id_ = 0u;
    if (has_pos()) {
      if (pos_ != NULL) pos_->::pb::Vector::Clear();
    }
    if (has_dir()) {
      if (dir_ != NULL) dir_->::pb::Vector::Clear();
    }
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool FrameStop::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.FrameStop)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (tag == 8) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_pos;
        break;
      }

      // required .pb.Vector pos = 2;
      case 2: {
        if (tag == 18) {
         parse_pos:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_dir;
        break;
      }

      // required .pb.Vector dir = 3;
      case 3: {
        if (tag == 26) {
         parse_dir:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_dir()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.FrameStop)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.FrameStop)
  return false;
#undef DO_
}

void FrameStop::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.FrameStop)
  // required uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // required .pb.Vector pos = 2;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->pos_, output);
  }

  // required .pb.Vector dir = 3;
  if (has_dir()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->dir_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.FrameStop)
}

::google::protobuf::uint8* FrameStop::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.FrameStop)
  // required uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // required .pb.Vector pos = 2;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->pos_, false, target);
  }

  // required .pb.Vector dir = 3;
  if (has_dir()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->dir_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.FrameStop)
  return target;
}

size_t FrameStop::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:pb.FrameStop)
  size_t total_size = 0;

  if (has_id()) {
    // required uint32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  if (has_pos()) {
    // required .pb.Vector pos = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pos_);
  }

  if (has_dir()) {
    // required .pb.Vector dir = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->dir_);
  }

  return total_size;
}
size_t FrameStop::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.FrameStop)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required uint32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());

    // required .pb.Vector pos = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->pos_);

    // required .pb.Vector dir = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->dir_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FrameStop::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.FrameStop)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const FrameStop* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FrameStop>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.FrameStop)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.FrameStop)
    UnsafeMergeFrom(*source);
  }
}

void FrameStop::MergeFrom(const FrameStop& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.FrameStop)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void FrameStop::UnsafeMergeFrom(const FrameStop& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_pos()) {
      mutable_pos()->::pb::Vector::MergeFrom(from.pos());
    }
    if (from.has_dir()) {
      mutable_dir()->::pb::Vector::MergeFrom(from.dir());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void FrameStop::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.FrameStop)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FrameStop::CopyFrom(const FrameStop& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.FrameStop)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool FrameStop::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  if (has_pos()) {
    if (!this->pos_->IsInitialized()) return false;
  }
  if (has_dir()) {
    if (!this->dir_->IsInitialized()) return false;
  }
  return true;
}

void FrameStop::Swap(FrameStop* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FrameStop::InternalSwap(FrameStop* other) {
  std::swap(id_, other->id_);
  std::swap(pos_, other->pos_);
  std::swap(dir_, other->dir_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FrameStop::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FrameStop_descriptor_;
  metadata.reflection = FrameStop_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FrameStop

// required uint32 id = 1;
bool FrameStop::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void FrameStop::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void FrameStop::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void FrameStop::clear_id() {
  id_ = 0u;
  clear_has_id();
}
::google::protobuf::uint32 FrameStop::id() const {
  // @@protoc_insertion_point(field_get:pb.FrameStop.id)
  return id_;
}
void FrameStop::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:pb.FrameStop.id)
}

// required .pb.Vector pos = 2;
bool FrameStop::has_pos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void FrameStop::set_has_pos() {
  _has_bits_[0] |= 0x00000002u;
}
void FrameStop::clear_has_pos() {
  _has_bits_[0] &= ~0x00000002u;
}
void FrameStop::clear_pos() {
  if (pos_ != NULL) pos_->::pb::Vector::Clear();
  clear_has_pos();
}
const ::pb::Vector& FrameStop::pos() const {
  // @@protoc_insertion_point(field_get:pb.FrameStop.pos)
  return pos_ != NULL ? *pos_
                         : *::pb::Vector::internal_default_instance();
}
::pb::Vector* FrameStop::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) {
    pos_ = new ::pb::Vector;
  }
  // @@protoc_insertion_point(field_mutable:pb.FrameStop.pos)
  return pos_;
}
::pb::Vector* FrameStop::release_pos() {
  // @@protoc_insertion_point(field_release:pb.FrameStop.pos)
  clear_has_pos();
  ::pb::Vector* temp = pos_;
  pos_ = NULL;
  return temp;
}
void FrameStop::set_allocated_pos(::pb::Vector* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.FrameStop.pos)
}

// required .pb.Vector dir = 3;
bool FrameStop::has_dir() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void FrameStop::set_has_dir() {
  _has_bits_[0] |= 0x00000004u;
}
void FrameStop::clear_has_dir() {
  _has_bits_[0] &= ~0x00000004u;
}
void FrameStop::clear_dir() {
  if (dir_ != NULL) dir_->::pb::Vector::Clear();
  clear_has_dir();
}
const ::pb::Vector& FrameStop::dir() const {
  // @@protoc_insertion_point(field_get:pb.FrameStop.dir)
  return dir_ != NULL ? *dir_
                         : *::pb::Vector::internal_default_instance();
}
::pb::Vector* FrameStop::mutable_dir() {
  set_has_dir();
  if (dir_ == NULL) {
    dir_ = new ::pb::Vector;
  }
  // @@protoc_insertion_point(field_mutable:pb.FrameStop.dir)
  return dir_;
}
::pb::Vector* FrameStop::release_dir() {
  // @@protoc_insertion_point(field_release:pb.FrameStop.dir)
  clear_has_dir();
  ::pb::Vector* temp = dir_;
  dir_ = NULL;
  return temp;
}
void FrameStop::set_allocated_dir(::pb::Vector* dir) {
  delete dir_;
  dir_ = dir;
  if (dir) {
    set_has_dir();
  } else {
    clear_has_dir();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.FrameStop.dir)
}

inline const FrameStop* FrameStop::internal_default_instance() {
  return &FrameStop_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FrameDeath::kIdFieldNumber;
const int FrameDeath::kMurdererIdFieldNumber;
const int FrameDeath::kMurdererCurSocreFieldNumber;
const int FrameDeath::kOwnerCurSocreFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FrameDeath::FrameDeath()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_game_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.FrameDeath)
}

void FrameDeath::InitAsDefaultInstance() {
}

FrameDeath::FrameDeath(const FrameDeath& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.FrameDeath)
}

void FrameDeath::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&id_, 0, reinterpret_cast<char*>(&owner_cur_socre_) -
    reinterpret_cast<char*>(&id_) + sizeof(owner_cur_socre_));
}

FrameDeath::~FrameDeath() {
  // @@protoc_insertion_point(destructor:pb.FrameDeath)
  SharedDtor();
}

void FrameDeath::SharedDtor() {
}

void FrameDeath::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FrameDeath::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FrameDeath_descriptor_;
}

const FrameDeath& FrameDeath::default_instance() {
  protobuf_InitDefaults_game_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<FrameDeath> FrameDeath_default_instance_;

FrameDeath* FrameDeath::New(::google::protobuf::Arena* arena) const {
  FrameDeath* n = new FrameDeath;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FrameDeath::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.FrameDeath)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(FrameDeath, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<FrameDeath*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(id_, owner_cur_socre_);

#undef ZR_HELPER_
#undef ZR_

  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool FrameDeath::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.FrameDeath)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (tag == 8) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_murderer_id;
        break;
      }

      // required uint32 murderer_id = 2;
      case 2: {
        if (tag == 16) {
         parse_murderer_id:
          set_has_murderer_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &murderer_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_murderer_cur_socre;
        break;
      }

      // required uint32 murderer_cur_socre = 3;
      case 3: {
        if (tag == 24) {
         parse_murderer_cur_socre:
          set_has_murderer_cur_socre();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &murderer_cur_socre_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_owner_cur_socre;
        break;
      }

      // required uint32 owner_cur_socre = 4;
      case 4: {
        if (tag == 32) {
         parse_owner_cur_socre:
          set_has_owner_cur_socre();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &owner_cur_socre_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.FrameDeath)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.FrameDeath)
  return false;
#undef DO_
}

void FrameDeath::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.FrameDeath)
  // required uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // required uint32 murderer_id = 2;
  if (has_murderer_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->murderer_id(), output);
  }

  // required uint32 murderer_cur_socre = 3;
  if (has_murderer_cur_socre()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->murderer_cur_socre(), output);
  }

  // required uint32 owner_cur_socre = 4;
  if (has_owner_cur_socre()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->owner_cur_socre(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.FrameDeath)
}

::google::protobuf::uint8* FrameDeath::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.FrameDeath)
  // required uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // required uint32 murderer_id = 2;
  if (has_murderer_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->murderer_id(), target);
  }

  // required uint32 murderer_cur_socre = 3;
  if (has_murderer_cur_socre()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->murderer_cur_socre(), target);
  }

  // required uint32 owner_cur_socre = 4;
  if (has_owner_cur_socre()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->owner_cur_socre(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.FrameDeath)
  return target;
}

size_t FrameDeath::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:pb.FrameDeath)
  size_t total_size = 0;

  if (has_id()) {
    // required uint32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  if (has_murderer_id()) {
    // required uint32 murderer_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->murderer_id());
  }

  if (has_murderer_cur_socre()) {
    // required uint32 murderer_cur_socre = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->murderer_cur_socre());
  }

  if (has_owner_cur_socre()) {
    // required uint32 owner_cur_socre = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->owner_cur_socre());
  }

  return total_size;
}
size_t FrameDeath::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.FrameDeath)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required uint32 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());

    // required uint32 murderer_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->murderer_id());

    // required uint32 murderer_cur_socre = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->murderer_cur_socre());

    // required uint32 owner_cur_socre = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->owner_cur_socre());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FrameDeath::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.FrameDeath)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const FrameDeath* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FrameDeath>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.FrameDeath)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.FrameDeath)
    UnsafeMergeFrom(*source);
  }
}

void FrameDeath::MergeFrom(const FrameDeath& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.FrameDeath)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void FrameDeath::UnsafeMergeFrom(const FrameDeath& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_murderer_id()) {
      set_murderer_id(from.murderer_id());
    }
    if (from.has_murderer_cur_socre()) {
      set_murderer_cur_socre(from.murderer_cur_socre());
    }
    if (from.has_owner_cur_socre()) {
      set_owner_cur_socre(from.owner_cur_socre());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void FrameDeath::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.FrameDeath)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FrameDeath::CopyFrom(const FrameDeath& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.FrameDeath)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool FrameDeath::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void FrameDeath::Swap(FrameDeath* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FrameDeath::InternalSwap(FrameDeath* other) {
  std::swap(id_, other->id_);
  std::swap(murderer_id_, other->murderer_id_);
  std::swap(murderer_cur_socre_, other->murderer_cur_socre_);
  std::swap(owner_cur_socre_, other->owner_cur_socre_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FrameDeath::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FrameDeath_descriptor_;
  metadata.reflection = FrameDeath_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FrameDeath

// required uint32 id = 1;
bool FrameDeath::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void FrameDeath::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void FrameDeath::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void FrameDeath::clear_id() {
  id_ = 0u;
  clear_has_id();
}
::google::protobuf::uint32 FrameDeath::id() const {
  // @@protoc_insertion_point(field_get:pb.FrameDeath.id)
  return id_;
}
void FrameDeath::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:pb.FrameDeath.id)
}

// required uint32 murderer_id = 2;
bool FrameDeath::has_murderer_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void FrameDeath::set_has_murderer_id() {
  _has_bits_[0] |= 0x00000002u;
}
void FrameDeath::clear_has_murderer_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void FrameDeath::clear_murderer_id() {
  murderer_id_ = 0u;
  clear_has_murderer_id();
}
::google::protobuf::uint32 FrameDeath::murderer_id() const {
  // @@protoc_insertion_point(field_get:pb.FrameDeath.murderer_id)
  return murderer_id_;
}
void FrameDeath::set_murderer_id(::google::protobuf::uint32 value) {
  set_has_murderer_id();
  murderer_id_ = value;
  // @@protoc_insertion_point(field_set:pb.FrameDeath.murderer_id)
}

// required uint32 murderer_cur_socre = 3;
bool FrameDeath::has_murderer_cur_socre() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void FrameDeath::set_has_murderer_cur_socre() {
  _has_bits_[0] |= 0x00000004u;
}
void FrameDeath::clear_has_murderer_cur_socre() {
  _has_bits_[0] &= ~0x00000004u;
}
void FrameDeath::clear_murderer_cur_socre() {
  murderer_cur_socre_ = 0u;
  clear_has_murderer_cur_socre();
}
::google::protobuf::uint32 FrameDeath::murderer_cur_socre() const {
  // @@protoc_insertion_point(field_get:pb.FrameDeath.murderer_cur_socre)
  return murderer_cur_socre_;
}
void FrameDeath::set_murderer_cur_socre(::google::protobuf::uint32 value) {
  set_has_murderer_cur_socre();
  murderer_cur_socre_ = value;
  // @@protoc_insertion_point(field_set:pb.FrameDeath.murderer_cur_socre)
}

// required uint32 owner_cur_socre = 4;
bool FrameDeath::has_owner_cur_socre() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void FrameDeath::set_has_owner_cur_socre() {
  _has_bits_[0] |= 0x00000008u;
}
void FrameDeath::clear_has_owner_cur_socre() {
  _has_bits_[0] &= ~0x00000008u;
}
void FrameDeath::clear_owner_cur_socre() {
  owner_cur_socre_ = 0u;
  clear_has_owner_cur_socre();
}
::google::protobuf::uint32 FrameDeath::owner_cur_socre() const {
  // @@protoc_insertion_point(field_get:pb.FrameDeath.owner_cur_socre)
  return owner_cur_socre_;
}
void FrameDeath::set_owner_cur_socre(::google::protobuf::uint32 value) {
  set_has_owner_cur_socre();
  owner_cur_socre_ = value;
  // @@protoc_insertion_point(field_set:pb.FrameDeath.owner_cur_socre)
}

inline const FrameDeath* FrameDeath::internal_default_instance() {
  return &FrameDeath_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FrameRelive::kPlayerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FrameRelive::FrameRelive()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_game_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.FrameRelive)
}

void FrameRelive::InitAsDefaultInstance() {
  player_ = const_cast< ::pb::RoomPlayer*>(
      ::pb::RoomPlayer::internal_default_instance());
}

FrameRelive::FrameRelive(const FrameRelive& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.FrameRelive)
}

void FrameRelive::SharedCtor() {
  _cached_size_ = 0;
  player_ = NULL;
}

FrameRelive::~FrameRelive() {
  // @@protoc_insertion_point(destructor:pb.FrameRelive)
  SharedDtor();
}

void FrameRelive::SharedDtor() {
  if (this != &FrameRelive_default_instance_.get()) {
    delete player_;
  }
}

void FrameRelive::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FrameRelive::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FrameRelive_descriptor_;
}

const FrameRelive& FrameRelive::default_instance() {
  protobuf_InitDefaults_game_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<FrameRelive> FrameRelive_default_instance_;

FrameRelive* FrameRelive::New(::google::protobuf::Arena* arena) const {
  FrameRelive* n = new FrameRelive;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FrameRelive::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.FrameRelive)
  if (has_player()) {
    if (player_ != NULL) player_->::pb::RoomPlayer::Clear();
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool FrameRelive::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.FrameRelive)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .pb.RoomPlayer player = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_player()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.FrameRelive)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.FrameRelive)
  return false;
#undef DO_
}

void FrameRelive::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.FrameRelive)
  // required .pb.RoomPlayer player = 1;
  if (has_player()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->player_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.FrameRelive)
}

::google::protobuf::uint8* FrameRelive::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.FrameRelive)
  // required .pb.RoomPlayer player = 1;
  if (has_player()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->player_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.FrameRelive)
  return target;
}

size_t FrameRelive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.FrameRelive)
  size_t total_size = 0;

  // required .pb.RoomPlayer player = 1;
  if (has_player()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->player_);
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FrameRelive::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.FrameRelive)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const FrameRelive* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FrameRelive>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.FrameRelive)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.FrameRelive)
    UnsafeMergeFrom(*source);
  }
}

void FrameRelive::MergeFrom(const FrameRelive& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.FrameRelive)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void FrameRelive::UnsafeMergeFrom(const FrameRelive& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_player()) {
      mutable_player()->::pb::RoomPlayer::MergeFrom(from.player());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void FrameRelive::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.FrameRelive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FrameRelive::CopyFrom(const FrameRelive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.FrameRelive)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool FrameRelive::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_player()) {
    if (!this->player_->IsInitialized()) return false;
  }
  return true;
}

void FrameRelive::Swap(FrameRelive* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FrameRelive::InternalSwap(FrameRelive* other) {
  std::swap(player_, other->player_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FrameRelive::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FrameRelive_descriptor_;
  metadata.reflection = FrameRelive_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FrameRelive

// required .pb.RoomPlayer player = 1;
bool FrameRelive::has_player() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void FrameRelive::set_has_player() {
  _has_bits_[0] |= 0x00000001u;
}
void FrameRelive::clear_has_player() {
  _has_bits_[0] &= ~0x00000001u;
}
void FrameRelive::clear_player() {
  if (player_ != NULL) player_->::pb::RoomPlayer::Clear();
  clear_has_player();
}
const ::pb::RoomPlayer& FrameRelive::player() const {
  // @@protoc_insertion_point(field_get:pb.FrameRelive.player)
  return player_ != NULL ? *player_
                         : *::pb::RoomPlayer::internal_default_instance();
}
::pb::RoomPlayer* FrameRelive::mutable_player() {
  set_has_player();
  if (player_ == NULL) {
    player_ = new ::pb::RoomPlayer;
  }
  // @@protoc_insertion_point(field_mutable:pb.FrameRelive.player)
  return player_;
}
::pb::RoomPlayer* FrameRelive::release_player() {
  // @@protoc_insertion_point(field_release:pb.FrameRelive.player)
  clear_has_player();
  ::pb::RoomPlayer* temp = player_;
  player_ = NULL;
  return temp;
}
void FrameRelive::set_allocated_player(::pb::RoomPlayer* player) {
  delete player_;
  player_ = player;
  if (player) {
    set_has_player();
  } else {
    clear_has_player();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.FrameRelive.player)
}

inline const FrameRelive* FrameRelive::internal_default_instance() {
  return &FrameRelive_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FrameActionStart::kPlayerIdFieldNumber;
const int FrameActionStart::kSpellIdFieldNumber;
const int FrameActionStart::kActionIdFieldNumber;
const int FrameActionStart::kLeftCdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FrameActionStart::FrameActionStart()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_game_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.FrameActionStart)
}

void FrameActionStart::InitAsDefaultInstance() {
}

FrameActionStart::FrameActionStart(const FrameActionStart& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.FrameActionStart)
}

void FrameActionStart::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&player_id_, 0, reinterpret_cast<char*>(&left_cd_) -
    reinterpret_cast<char*>(&player_id_) + sizeof(left_cd_));
}

FrameActionStart::~FrameActionStart() {
  // @@protoc_insertion_point(destructor:pb.FrameActionStart)
  SharedDtor();
}

void FrameActionStart::SharedDtor() {
}

void FrameActionStart::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FrameActionStart::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FrameActionStart_descriptor_;
}

const FrameActionStart& FrameActionStart::default_instance() {
  protobuf_InitDefaults_game_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<FrameActionStart> FrameActionStart_default_instance_;

FrameActionStart* FrameActionStart::New(::google::protobuf::Arena* arena) const {
  FrameActionStart* n = new FrameActionStart;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FrameActionStart::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.FrameActionStart)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(FrameActionStart, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<FrameActionStart*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(player_id_, left_cd_);

#undef ZR_HELPER_
#undef ZR_

  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool FrameActionStart::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.FrameActionStart)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 player_id = 1;
      case 1: {
        if (tag == 8) {
          set_has_player_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &player_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_spell_id;
        break;
      }

      // required uint32 spell_id = 2;
      case 2: {
        if (tag == 16) {
         parse_spell_id:
          set_has_spell_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &spell_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_action_id;
        break;
      }

      // required uint32 action_id = 3;
      case 3: {
        if (tag == 24) {
         parse_action_id:
          set_has_action_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &action_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_left_cd;
        break;
      }

      // required uint32 left_cd = 4;
      case 4: {
        if (tag == 32) {
         parse_left_cd:
          set_has_left_cd();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &left_cd_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.FrameActionStart)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.FrameActionStart)
  return false;
#undef DO_
}

void FrameActionStart::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.FrameActionStart)
  // required uint32 player_id = 1;
  if (has_player_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->player_id(), output);
  }

  // required uint32 spell_id = 2;
  if (has_spell_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->spell_id(), output);
  }

  // required uint32 action_id = 3;
  if (has_action_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->action_id(), output);
  }

  // required uint32 left_cd = 4;
  if (has_left_cd()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->left_cd(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.FrameActionStart)
}

::google::protobuf::uint8* FrameActionStart::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.FrameActionStart)
  // required uint32 player_id = 1;
  if (has_player_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->player_id(), target);
  }

  // required uint32 spell_id = 2;
  if (has_spell_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->spell_id(), target);
  }

  // required uint32 action_id = 3;
  if (has_action_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->action_id(), target);
  }

  // required uint32 left_cd = 4;
  if (has_left_cd()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->left_cd(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.FrameActionStart)
  return target;
}

size_t FrameActionStart::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:pb.FrameActionStart)
  size_t total_size = 0;

  if (has_player_id()) {
    // required uint32 player_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->player_id());
  }

  if (has_spell_id()) {
    // required uint32 spell_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->spell_id());
  }

  if (has_action_id()) {
    // required uint32 action_id = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->action_id());
  }

  if (has_left_cd()) {
    // required uint32 left_cd = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->left_cd());
  }

  return total_size;
}
size_t FrameActionStart::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.FrameActionStart)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required uint32 player_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->player_id());

    // required uint32 spell_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->spell_id());

    // required uint32 action_id = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->action_id());

    // required uint32 left_cd = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->left_cd());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FrameActionStart::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.FrameActionStart)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const FrameActionStart* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FrameActionStart>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.FrameActionStart)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.FrameActionStart)
    UnsafeMergeFrom(*source);
  }
}

void FrameActionStart::MergeFrom(const FrameActionStart& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.FrameActionStart)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void FrameActionStart::UnsafeMergeFrom(const FrameActionStart& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_player_id()) {
      set_player_id(from.player_id());
    }
    if (from.has_spell_id()) {
      set_spell_id(from.spell_id());
    }
    if (from.has_action_id()) {
      set_action_id(from.action_id());
    }
    if (from.has_left_cd()) {
      set_left_cd(from.left_cd());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void FrameActionStart::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.FrameActionStart)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FrameActionStart::CopyFrom(const FrameActionStart& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.FrameActionStart)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool FrameActionStart::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void FrameActionStart::Swap(FrameActionStart* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FrameActionStart::InternalSwap(FrameActionStart* other) {
  std::swap(player_id_, other->player_id_);
  std::swap(spell_id_, other->spell_id_);
  std::swap(action_id_, other->action_id_);
  std::swap(left_cd_, other->left_cd_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FrameActionStart::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FrameActionStart_descriptor_;
  metadata.reflection = FrameActionStart_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FrameActionStart

// required uint32 player_id = 1;
bool FrameActionStart::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void FrameActionStart::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
void FrameActionStart::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void FrameActionStart::clear_player_id() {
  player_id_ = 0u;
  clear_has_player_id();
}
::google::protobuf::uint32 FrameActionStart::player_id() const {
  // @@protoc_insertion_point(field_get:pb.FrameActionStart.player_id)
  return player_id_;
}
void FrameActionStart::set_player_id(::google::protobuf::uint32 value) {
  set_has_player_id();
  player_id_ = value;
  // @@protoc_insertion_point(field_set:pb.FrameActionStart.player_id)
}

// required uint32 spell_id = 2;
bool FrameActionStart::has_spell_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void FrameActionStart::set_has_spell_id() {
  _has_bits_[0] |= 0x00000002u;
}
void FrameActionStart::clear_has_spell_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void FrameActionStart::clear_spell_id() {
  spell_id_ = 0u;
  clear_has_spell_id();
}
::google::protobuf::uint32 FrameActionStart::spell_id() const {
  // @@protoc_insertion_point(field_get:pb.FrameActionStart.spell_id)
  return spell_id_;
}
void FrameActionStart::set_spell_id(::google::protobuf::uint32 value) {
  set_has_spell_id();
  spell_id_ = value;
  // @@protoc_insertion_point(field_set:pb.FrameActionStart.spell_id)
}

// required uint32 action_id = 3;
bool FrameActionStart::has_action_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void FrameActionStart::set_has_action_id() {
  _has_bits_[0] |= 0x00000004u;
}
void FrameActionStart::clear_has_action_id() {
  _has_bits_[0] &= ~0x00000004u;
}
void FrameActionStart::clear_action_id() {
  action_id_ = 0u;
  clear_has_action_id();
}
::google::protobuf::uint32 FrameActionStart::action_id() const {
  // @@protoc_insertion_point(field_get:pb.FrameActionStart.action_id)
  return action_id_;
}
void FrameActionStart::set_action_id(::google::protobuf::uint32 value) {
  set_has_action_id();
  action_id_ = value;
  // @@protoc_insertion_point(field_set:pb.FrameActionStart.action_id)
}

// required uint32 left_cd = 4;
bool FrameActionStart::has_left_cd() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void FrameActionStart::set_has_left_cd() {
  _has_bits_[0] |= 0x00000008u;
}
void FrameActionStart::clear_has_left_cd() {
  _has_bits_[0] &= ~0x00000008u;
}
void FrameActionStart::clear_left_cd() {
  left_cd_ = 0u;
  clear_has_left_cd();
}
::google::protobuf::uint32 FrameActionStart::left_cd() const {
  // @@protoc_insertion_point(field_get:pb.FrameActionStart.left_cd)
  return left_cd_;
}
void FrameActionStart::set_left_cd(::google::protobuf::uint32 value) {
  set_has_left_cd();
  left_cd_ = value;
  // @@protoc_insertion_point(field_set:pb.FrameActionStart.left_cd)
}

inline const FrameActionStart* FrameActionStart::internal_default_instance() {
  return &FrameActionStart_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FrameStartBuff::kBuffFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FrameStartBuff::FrameStartBuff()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_game_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.FrameStartBuff)
}

void FrameStartBuff::InitAsDefaultInstance() {
  buff_ = const_cast< ::pb::RoomBuff*>(
      ::pb::RoomBuff::internal_default_instance());
}

FrameStartBuff::FrameStartBuff(const FrameStartBuff& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.FrameStartBuff)
}

void FrameStartBuff::SharedCtor() {
  _cached_size_ = 0;
  buff_ = NULL;
}

FrameStartBuff::~FrameStartBuff() {
  // @@protoc_insertion_point(destructor:pb.FrameStartBuff)
  SharedDtor();
}

void FrameStartBuff::SharedDtor() {
  if (this != &FrameStartBuff_default_instance_.get()) {
    delete buff_;
  }
}

void FrameStartBuff::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FrameStartBuff::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FrameStartBuff_descriptor_;
}

const FrameStartBuff& FrameStartBuff::default_instance() {
  protobuf_InitDefaults_game_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<FrameStartBuff> FrameStartBuff_default_instance_;

FrameStartBuff* FrameStartBuff::New(::google::protobuf::Arena* arena) const {
  FrameStartBuff* n = new FrameStartBuff;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FrameStartBuff::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.FrameStartBuff)
  if (has_buff()) {
    if (buff_ != NULL) buff_->::pb::RoomBuff::Clear();
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool FrameStartBuff::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.FrameStartBuff)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .pb.RoomBuff buff = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_buff()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.FrameStartBuff)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.FrameStartBuff)
  return false;
#undef DO_
}

void FrameStartBuff::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.FrameStartBuff)
  // required .pb.RoomBuff buff = 1;
  if (has_buff()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->buff_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.FrameStartBuff)
}

::google::protobuf::uint8* FrameStartBuff::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.FrameStartBuff)
  // required .pb.RoomBuff buff = 1;
  if (has_buff()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->buff_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.FrameStartBuff)
  return target;
}

size_t FrameStartBuff::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.FrameStartBuff)
  size_t total_size = 0;

  // required .pb.RoomBuff buff = 1;
  if (has_buff()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->buff_);
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FrameStartBuff::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.FrameStartBuff)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const FrameStartBuff* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FrameStartBuff>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.FrameStartBuff)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.FrameStartBuff)
    UnsafeMergeFrom(*source);
  }
}

void FrameStartBuff::MergeFrom(const FrameStartBuff& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.FrameStartBuff)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void FrameStartBuff::UnsafeMergeFrom(const FrameStartBuff& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_buff()) {
      mutable_buff()->::pb::RoomBuff::MergeFrom(from.buff());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void FrameStartBuff::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.FrameStartBuff)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FrameStartBuff::CopyFrom(const FrameStartBuff& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.FrameStartBuff)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool FrameStartBuff::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_buff()) {
    if (!this->buff_->IsInitialized()) return false;
  }
  return true;
}

void FrameStartBuff::Swap(FrameStartBuff* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FrameStartBuff::InternalSwap(FrameStartBuff* other) {
  std::swap(buff_, other->buff_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FrameStartBuff::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FrameStartBuff_descriptor_;
  metadata.reflection = FrameStartBuff_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FrameStartBuff

// required .pb.RoomBuff buff = 1;
bool FrameStartBuff::has_buff() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void FrameStartBuff::set_has_buff() {
  _has_bits_[0] |= 0x00000001u;
}
void FrameStartBuff::clear_has_buff() {
  _has_bits_[0] &= ~0x00000001u;
}
void FrameStartBuff::clear_buff() {
  if (buff_ != NULL) buff_->::pb::RoomBuff::Clear();
  clear_has_buff();
}
const ::pb::RoomBuff& FrameStartBuff::buff() const {
  // @@protoc_insertion_point(field_get:pb.FrameStartBuff.buff)
  return buff_ != NULL ? *buff_
                         : *::pb::RoomBuff::internal_default_instance();
}
::pb::RoomBuff* FrameStartBuff::mutable_buff() {
  set_has_buff();
  if (buff_ == NULL) {
    buff_ = new ::pb::RoomBuff;
  }
  // @@protoc_insertion_point(field_mutable:pb.FrameStartBuff.buff)
  return buff_;
}
::pb::RoomBuff* FrameStartBuff::release_buff() {
  // @@protoc_insertion_point(field_release:pb.FrameStartBuff.buff)
  clear_has_buff();
  ::pb::RoomBuff* temp = buff_;
  buff_ = NULL;
  return temp;
}
void FrameStartBuff::set_allocated_buff(::pb::RoomBuff* buff) {
  delete buff_;
  buff_ = buff;
  if (buff) {
    set_has_buff();
  } else {
    clear_has_buff();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.FrameStartBuff.buff)
}

inline const FrameStartBuff* FrameStartBuff::internal_default_instance() {
  return &FrameStartBuff_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FrameRemoveBuff::kPlayerIdFieldNumber;
const int FrameRemoveBuff::kBuffIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FrameRemoveBuff::FrameRemoveBuff()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_game_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.FrameRemoveBuff)
}

void FrameRemoveBuff::InitAsDefaultInstance() {
}

FrameRemoveBuff::FrameRemoveBuff(const FrameRemoveBuff& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.FrameRemoveBuff)
}

void FrameRemoveBuff::SharedCtor() {
  _cached_size_ = 0;
  buff_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  player_id_ = 0u;
}

FrameRemoveBuff::~FrameRemoveBuff() {
  // @@protoc_insertion_point(destructor:pb.FrameRemoveBuff)
  SharedDtor();
}

void FrameRemoveBuff::SharedDtor() {
  buff_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FrameRemoveBuff::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FrameRemoveBuff::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FrameRemoveBuff_descriptor_;
}

const FrameRemoveBuff& FrameRemoveBuff::default_instance() {
  protobuf_InitDefaults_game_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<FrameRemoveBuff> FrameRemoveBuff_default_instance_;

FrameRemoveBuff* FrameRemoveBuff::New(::google::protobuf::Arena* arena) const {
  FrameRemoveBuff* n = new FrameRemoveBuff;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FrameRemoveBuff::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.FrameRemoveBuff)
  if (_has_bits_[0 / 32] & 3u) {
    player_id_ = 0u;
    if (has_buff_id()) {
      buff_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool FrameRemoveBuff::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.FrameRemoveBuff)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 player_id = 1;
      case 1: {
        if (tag == 8) {
          set_has_player_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &player_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_buff_id;
        break;
      }

      // required string buff_id = 2;
      case 2: {
        if (tag == 18) {
         parse_buff_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_buff_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->buff_id().data(), this->buff_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pb.FrameRemoveBuff.buff_id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.FrameRemoveBuff)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.FrameRemoveBuff)
  return false;
#undef DO_
}

void FrameRemoveBuff::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.FrameRemoveBuff)
  // optional uint32 player_id = 1;
  if (has_player_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->player_id(), output);
  }

  // required string buff_id = 2;
  if (has_buff_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->buff_id().data(), this->buff_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pb.FrameRemoveBuff.buff_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->buff_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.FrameRemoveBuff)
}

::google::protobuf::uint8* FrameRemoveBuff::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.FrameRemoveBuff)
  // optional uint32 player_id = 1;
  if (has_player_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->player_id(), target);
  }

  // required string buff_id = 2;
  if (has_buff_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->buff_id().data(), this->buff_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pb.FrameRemoveBuff.buff_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->buff_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.FrameRemoveBuff)
  return target;
}

size_t FrameRemoveBuff::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.FrameRemoveBuff)
  size_t total_size = 0;

  // required string buff_id = 2;
  if (has_buff_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->buff_id());
  }
  // optional uint32 player_id = 1;
  if (has_player_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->player_id());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FrameRemoveBuff::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.FrameRemoveBuff)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const FrameRemoveBuff* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FrameRemoveBuff>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.FrameRemoveBuff)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.FrameRemoveBuff)
    UnsafeMergeFrom(*source);
  }
}

void FrameRemoveBuff::MergeFrom(const FrameRemoveBuff& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.FrameRemoveBuff)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void FrameRemoveBuff::UnsafeMergeFrom(const FrameRemoveBuff& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_player_id()) {
      set_player_id(from.player_id());
    }
    if (from.has_buff_id()) {
      set_has_buff_id();
      buff_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.buff_id_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void FrameRemoveBuff::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.FrameRemoveBuff)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FrameRemoveBuff::CopyFrom(const FrameRemoveBuff& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.FrameRemoveBuff)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool FrameRemoveBuff::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;

  return true;
}

void FrameRemoveBuff::Swap(FrameRemoveBuff* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FrameRemoveBuff::InternalSwap(FrameRemoveBuff* other) {
  std::swap(player_id_, other->player_id_);
  buff_id_.Swap(&other->buff_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FrameRemoveBuff::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FrameRemoveBuff_descriptor_;
  metadata.reflection = FrameRemoveBuff_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FrameRemoveBuff

// optional uint32 player_id = 1;
bool FrameRemoveBuff::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void FrameRemoveBuff::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
void FrameRemoveBuff::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void FrameRemoveBuff::clear_player_id() {
  player_id_ = 0u;
  clear_has_player_id();
}
::google::protobuf::uint32 FrameRemoveBuff::player_id() const {
  // @@protoc_insertion_point(field_get:pb.FrameRemoveBuff.player_id)
  return player_id_;
}
void FrameRemoveBuff::set_player_id(::google::protobuf::uint32 value) {
  set_has_player_id();
  player_id_ = value;
  // @@protoc_insertion_point(field_set:pb.FrameRemoveBuff.player_id)
}

// required string buff_id = 2;
bool FrameRemoveBuff::has_buff_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void FrameRemoveBuff::set_has_buff_id() {
  _has_bits_[0] |= 0x00000002u;
}
void FrameRemoveBuff::clear_has_buff_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void FrameRemoveBuff::clear_buff_id() {
  buff_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_buff_id();
}
const ::std::string& FrameRemoveBuff::buff_id() const {
  // @@protoc_insertion_point(field_get:pb.FrameRemoveBuff.buff_id)
  return buff_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FrameRemoveBuff::set_buff_id(const ::std::string& value) {
  set_has_buff_id();
  buff_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.FrameRemoveBuff.buff_id)
}
void FrameRemoveBuff::set_buff_id(const char* value) {
  set_has_buff_id();
  buff_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.FrameRemoveBuff.buff_id)
}
void FrameRemoveBuff::set_buff_id(const char* value, size_t size) {
  set_has_buff_id();
  buff_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.FrameRemoveBuff.buff_id)
}
::std::string* FrameRemoveBuff::mutable_buff_id() {
  set_has_buff_id();
  // @@protoc_insertion_point(field_mutable:pb.FrameRemoveBuff.buff_id)
  return buff_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FrameRemoveBuff::release_buff_id() {
  // @@protoc_insertion_point(field_release:pb.FrameRemoveBuff.buff_id)
  clear_has_buff_id();
  return buff_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FrameRemoveBuff::set_allocated_buff_id(::std::string* buff_id) {
  if (buff_id != NULL) {
    set_has_buff_id();
  } else {
    clear_has_buff_id();
  }
  buff_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), buff_id);
  // @@protoc_insertion_point(field_set_allocated:pb.FrameRemoveBuff.buff_id)
}

inline const FrameRemoveBuff* FrameRemoveBuff::internal_default_instance() {
  return &FrameRemoveBuff_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FrameSpellState::kPlayerIdFieldNumber;
const int FrameSpellState::kActionIdFieldNumber;
const int FrameSpellState::kStateFieldNumber;
const int FrameSpellState::kCurGenIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FrameSpellState::FrameSpellState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_game_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.FrameSpellState)
}

void FrameSpellState::InitAsDefaultInstance() {
}

FrameSpellState::FrameSpellState(const FrameSpellState& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.FrameSpellState)
}

void FrameSpellState::SharedCtor() {
  _cached_size_ = 0;
  action_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cur_gen_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&player_id_, 0, reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&player_id_) + sizeof(state_));
}

FrameSpellState::~FrameSpellState() {
  // @@protoc_insertion_point(destructor:pb.FrameSpellState)
  SharedDtor();
}

void FrameSpellState::SharedDtor() {
  action_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cur_gen_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FrameSpellState::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FrameSpellState::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FrameSpellState_descriptor_;
}

const FrameSpellState& FrameSpellState::default_instance() {
  protobuf_InitDefaults_game_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<FrameSpellState> FrameSpellState_default_instance_;

FrameSpellState* FrameSpellState::New(::google::protobuf::Arena* arena) const {
  FrameSpellState* n = new FrameSpellState;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FrameSpellState::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.FrameSpellState)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(FrameSpellState, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<FrameSpellState*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 15u) {
    ZR_(player_id_, state_);
    if (has_action_id()) {
      action_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_cur_gen_id()) {
      cur_gen_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool FrameSpellState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.FrameSpellState)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 player_id = 1;
      case 1: {
        if (tag == 8) {
          set_has_player_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &player_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_action_id;
        break;
      }

      // required string action_id = 2;
      case 2: {
        if (tag == 18) {
         parse_action_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_action_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->action_id().data(), this->action_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pb.FrameSpellState.action_id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_state;
        break;
      }

      // required uint32 state = 3;
      case 3: {
        if (tag == 24) {
         parse_state:
          set_has_state();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_cur_gen_id;
        break;
      }

      // required string cur_gen_id = 4;
      case 4: {
        if (tag == 34) {
         parse_cur_gen_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cur_gen_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->cur_gen_id().data(), this->cur_gen_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pb.FrameSpellState.cur_gen_id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.FrameSpellState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.FrameSpellState)
  return false;
#undef DO_
}

void FrameSpellState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.FrameSpellState)
  // required uint32 player_id = 1;
  if (has_player_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->player_id(), output);
  }

  // required string action_id = 2;
  if (has_action_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->action_id().data(), this->action_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pb.FrameSpellState.action_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->action_id(), output);
  }

  // required uint32 state = 3;
  if (has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->state(), output);
  }

  // required string cur_gen_id = 4;
  if (has_cur_gen_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cur_gen_id().data(), this->cur_gen_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pb.FrameSpellState.cur_gen_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->cur_gen_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.FrameSpellState)
}

::google::protobuf::uint8* FrameSpellState::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.FrameSpellState)
  // required uint32 player_id = 1;
  if (has_player_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->player_id(), target);
  }

  // required string action_id = 2;
  if (has_action_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->action_id().data(), this->action_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pb.FrameSpellState.action_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->action_id(), target);
  }

  // required uint32 state = 3;
  if (has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->state(), target);
  }

  // required string cur_gen_id = 4;
  if (has_cur_gen_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->cur_gen_id().data(), this->cur_gen_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pb.FrameSpellState.cur_gen_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->cur_gen_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.FrameSpellState)
  return target;
}

size_t FrameSpellState::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:pb.FrameSpellState)
  size_t total_size = 0;

  if (has_player_id()) {
    // required uint32 player_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->player_id());
  }

  if (has_action_id()) {
    // required string action_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->action_id());
  }

  if (has_state()) {
    // required uint32 state = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->state());
  }

  if (has_cur_gen_id()) {
    // required string cur_gen_id = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cur_gen_id());
  }

  return total_size;
}
size_t FrameSpellState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.FrameSpellState)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required uint32 player_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->player_id());

    // required string action_id = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->action_id());

    // required uint32 state = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->state());

    // required string cur_gen_id = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cur_gen_id());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FrameSpellState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.FrameSpellState)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const FrameSpellState* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FrameSpellState>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.FrameSpellState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.FrameSpellState)
    UnsafeMergeFrom(*source);
  }
}

void FrameSpellState::MergeFrom(const FrameSpellState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.FrameSpellState)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void FrameSpellState::UnsafeMergeFrom(const FrameSpellState& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_player_id()) {
      set_player_id(from.player_id());
    }
    if (from.has_action_id()) {
      set_has_action_id();
      action_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.action_id_);
    }
    if (from.has_state()) {
      set_state(from.state());
    }
    if (from.has_cur_gen_id()) {
      set_has_cur_gen_id();
      cur_gen_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cur_gen_id_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void FrameSpellState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.FrameSpellState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FrameSpellState::CopyFrom(const FrameSpellState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.FrameSpellState)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool FrameSpellState::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void FrameSpellState::Swap(FrameSpellState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FrameSpellState::InternalSwap(FrameSpellState* other) {
  std::swap(player_id_, other->player_id_);
  action_id_.Swap(&other->action_id_);
  std::swap(state_, other->state_);
  cur_gen_id_.Swap(&other->cur_gen_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FrameSpellState::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FrameSpellState_descriptor_;
  metadata.reflection = FrameSpellState_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FrameSpellState

// required uint32 player_id = 1;
bool FrameSpellState::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void FrameSpellState::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
void FrameSpellState::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void FrameSpellState::clear_player_id() {
  player_id_ = 0u;
  clear_has_player_id();
}
::google::protobuf::uint32 FrameSpellState::player_id() const {
  // @@protoc_insertion_point(field_get:pb.FrameSpellState.player_id)
  return player_id_;
}
void FrameSpellState::set_player_id(::google::protobuf::uint32 value) {
  set_has_player_id();
  player_id_ = value;
  // @@protoc_insertion_point(field_set:pb.FrameSpellState.player_id)
}

// required string action_id = 2;
bool FrameSpellState::has_action_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void FrameSpellState::set_has_action_id() {
  _has_bits_[0] |= 0x00000002u;
}
void FrameSpellState::clear_has_action_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void FrameSpellState::clear_action_id() {
  action_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_action_id();
}
const ::std::string& FrameSpellState::action_id() const {
  // @@protoc_insertion_point(field_get:pb.FrameSpellState.action_id)
  return action_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FrameSpellState::set_action_id(const ::std::string& value) {
  set_has_action_id();
  action_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.FrameSpellState.action_id)
}
void FrameSpellState::set_action_id(const char* value) {
  set_has_action_id();
  action_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.FrameSpellState.action_id)
}
void FrameSpellState::set_action_id(const char* value, size_t size) {
  set_has_action_id();
  action_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.FrameSpellState.action_id)
}
::std::string* FrameSpellState::mutable_action_id() {
  set_has_action_id();
  // @@protoc_insertion_point(field_mutable:pb.FrameSpellState.action_id)
  return action_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FrameSpellState::release_action_id() {
  // @@protoc_insertion_point(field_release:pb.FrameSpellState.action_id)
  clear_has_action_id();
  return action_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FrameSpellState::set_allocated_action_id(::std::string* action_id) {
  if (action_id != NULL) {
    set_has_action_id();
  } else {
    clear_has_action_id();
  }
  action_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), action_id);
  // @@protoc_insertion_point(field_set_allocated:pb.FrameSpellState.action_id)
}

// required uint32 state = 3;
bool FrameSpellState::has_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void FrameSpellState::set_has_state() {
  _has_bits_[0] |= 0x00000004u;
}
void FrameSpellState::clear_has_state() {
  _has_bits_[0] &= ~0x00000004u;
}
void FrameSpellState::clear_state() {
  state_ = 0u;
  clear_has_state();
}
::google::protobuf::uint32 FrameSpellState::state() const {
  // @@protoc_insertion_point(field_get:pb.FrameSpellState.state)
  return state_;
}
void FrameSpellState::set_state(::google::protobuf::uint32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:pb.FrameSpellState.state)
}

// required string cur_gen_id = 4;
bool FrameSpellState::has_cur_gen_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void FrameSpellState::set_has_cur_gen_id() {
  _has_bits_[0] |= 0x00000008u;
}
void FrameSpellState::clear_has_cur_gen_id() {
  _has_bits_[0] &= ~0x00000008u;
}
void FrameSpellState::clear_cur_gen_id() {
  cur_gen_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_cur_gen_id();
}
const ::std::string& FrameSpellState::cur_gen_id() const {
  // @@protoc_insertion_point(field_get:pb.FrameSpellState.cur_gen_id)
  return cur_gen_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FrameSpellState::set_cur_gen_id(const ::std::string& value) {
  set_has_cur_gen_id();
  cur_gen_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.FrameSpellState.cur_gen_id)
}
void FrameSpellState::set_cur_gen_id(const char* value) {
  set_has_cur_gen_id();
  cur_gen_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.FrameSpellState.cur_gen_id)
}
void FrameSpellState::set_cur_gen_id(const char* value, size_t size) {
  set_has_cur_gen_id();
  cur_gen_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.FrameSpellState.cur_gen_id)
}
::std::string* FrameSpellState::mutable_cur_gen_id() {
  set_has_cur_gen_id();
  // @@protoc_insertion_point(field_mutable:pb.FrameSpellState.cur_gen_id)
  return cur_gen_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FrameSpellState::release_cur_gen_id() {
  // @@protoc_insertion_point(field_release:pb.FrameSpellState.cur_gen_id)
  clear_has_cur_gen_id();
  return cur_gen_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FrameSpellState::set_allocated_cur_gen_id(::std::string* cur_gen_id) {
  if (cur_gen_id != NULL) {
    set_has_cur_gen_id();
  } else {
    clear_has_cur_gen_id();
  }
  cur_gen_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cur_gen_id);
  // @@protoc_insertion_point(field_set_allocated:pb.FrameSpellState.cur_gen_id)
}

inline const FrameSpellState* FrameSpellState::internal_default_instance() {
  return &FrameSpellState_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FrameSpellLevel::kPlayerIdFieldNumber;
const int FrameSpellLevel::kSpellsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FrameSpellLevel::FrameSpellLevel()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_game_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.FrameSpellLevel)
}

void FrameSpellLevel::InitAsDefaultInstance() {
}

FrameSpellLevel::FrameSpellLevel(const FrameSpellLevel& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.FrameSpellLevel)
}

void FrameSpellLevel::SharedCtor() {
  _cached_size_ = 0;
  player_id_ = 0u;
}

FrameSpellLevel::~FrameSpellLevel() {
  // @@protoc_insertion_point(destructor:pb.FrameSpellLevel)
  SharedDtor();
}

void FrameSpellLevel::SharedDtor() {
}

void FrameSpellLevel::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FrameSpellLevel::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FrameSpellLevel_descriptor_;
}

const FrameSpellLevel& FrameSpellLevel::default_instance() {
  protobuf_InitDefaults_game_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<FrameSpellLevel> FrameSpellLevel_default_instance_;

FrameSpellLevel* FrameSpellLevel::New(::google::protobuf::Arena* arena) const {
  FrameSpellLevel* n = new FrameSpellLevel;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FrameSpellLevel::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.FrameSpellLevel)
  player_id_ = 0u;
  spells_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool FrameSpellLevel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.FrameSpellLevel)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 player_id = 1;
      case 1: {
        if (tag == 8) {
          set_has_player_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &player_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_spells;
        break;
      }

      // repeated .pb.RoomPlayerSpell spells = 2;
      case 2: {
        if (tag == 18) {
         parse_spells:
          DO_(input->IncrementRecursionDepth());
         parse_loop_spells:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_spells()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_spells;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.FrameSpellLevel)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.FrameSpellLevel)
  return false;
#undef DO_
}

void FrameSpellLevel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.FrameSpellLevel)
  // required uint32 player_id = 1;
  if (has_player_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->player_id(), output);
  }

  // repeated .pb.RoomPlayerSpell spells = 2;
  for (unsigned int i = 0, n = this->spells_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->spells(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.FrameSpellLevel)
}

::google::protobuf::uint8* FrameSpellLevel::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.FrameSpellLevel)
  // required uint32 player_id = 1;
  if (has_player_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->player_id(), target);
  }

  // repeated .pb.RoomPlayerSpell spells = 2;
  for (unsigned int i = 0, n = this->spells_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->spells(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.FrameSpellLevel)
  return target;
}

size_t FrameSpellLevel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.FrameSpellLevel)
  size_t total_size = 0;

  // required uint32 player_id = 1;
  if (has_player_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->player_id());
  }
  // repeated .pb.RoomPlayerSpell spells = 2;
  {
    unsigned int count = this->spells_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->spells(i));
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FrameSpellLevel::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.FrameSpellLevel)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const FrameSpellLevel* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FrameSpellLevel>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.FrameSpellLevel)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.FrameSpellLevel)
    UnsafeMergeFrom(*source);
  }
}

void FrameSpellLevel::MergeFrom(const FrameSpellLevel& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.FrameSpellLevel)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void FrameSpellLevel::UnsafeMergeFrom(const FrameSpellLevel& from) {
  GOOGLE_DCHECK(&from != this);
  spells_.MergeFrom(from.spells_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_player_id()) {
      set_player_id(from.player_id());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void FrameSpellLevel::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.FrameSpellLevel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FrameSpellLevel::CopyFrom(const FrameSpellLevel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.FrameSpellLevel)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool FrameSpellLevel::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->spells())) return false;
  return true;
}

void FrameSpellLevel::Swap(FrameSpellLevel* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FrameSpellLevel::InternalSwap(FrameSpellLevel* other) {
  std::swap(player_id_, other->player_id_);
  spells_.UnsafeArenaSwap(&other->spells_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FrameSpellLevel::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FrameSpellLevel_descriptor_;
  metadata.reflection = FrameSpellLevel_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FrameSpellLevel

// required uint32 player_id = 1;
bool FrameSpellLevel::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void FrameSpellLevel::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
void FrameSpellLevel::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void FrameSpellLevel::clear_player_id() {
  player_id_ = 0u;
  clear_has_player_id();
}
::google::protobuf::uint32 FrameSpellLevel::player_id() const {
  // @@protoc_insertion_point(field_get:pb.FrameSpellLevel.player_id)
  return player_id_;
}
void FrameSpellLevel::set_player_id(::google::protobuf::uint32 value) {
  set_has_player_id();
  player_id_ = value;
  // @@protoc_insertion_point(field_set:pb.FrameSpellLevel.player_id)
}

// repeated .pb.RoomPlayerSpell spells = 2;
int FrameSpellLevel::spells_size() const {
  return spells_.size();
}
void FrameSpellLevel::clear_spells() {
  spells_.Clear();
}
const ::pb::RoomPlayerSpell& FrameSpellLevel::spells(int index) const {
  // @@protoc_insertion_point(field_get:pb.FrameSpellLevel.spells)
  return spells_.Get(index);
}
::pb::RoomPlayerSpell* FrameSpellLevel::mutable_spells(int index) {
  // @@protoc_insertion_point(field_mutable:pb.FrameSpellLevel.spells)
  return spells_.Mutable(index);
}
::pb::RoomPlayerSpell* FrameSpellLevel::add_spells() {
  // @@protoc_insertion_point(field_add:pb.FrameSpellLevel.spells)
  return spells_.Add();
}
::google::protobuf::RepeatedPtrField< ::pb::RoomPlayerSpell >*
FrameSpellLevel::mutable_spells() {
  // @@protoc_insertion_point(field_mutable_list:pb.FrameSpellLevel.spells)
  return &spells_;
}
const ::google::protobuf::RepeatedPtrField< ::pb::RoomPlayerSpell >&
FrameSpellLevel::spells() const {
  // @@protoc_insertion_point(field_list:pb.FrameSpellLevel.spells)
  return spells_;
}

inline const FrameSpellLevel* FrameSpellLevel::internal_default_instance() {
  return &FrameSpellLevel_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FrameSceneItemCreate::kItemFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FrameSceneItemCreate::FrameSceneItemCreate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_game_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.FrameSceneItemCreate)
}

void FrameSceneItemCreate::InitAsDefaultInstance() {
  item_ = const_cast< ::pb::RoomItem*>(
      ::pb::RoomItem::internal_default_instance());
}

FrameSceneItemCreate::FrameSceneItemCreate(const FrameSceneItemCreate& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.FrameSceneItemCreate)
}

void FrameSceneItemCreate::SharedCtor() {
  _cached_size_ = 0;
  item_ = NULL;
}

FrameSceneItemCreate::~FrameSceneItemCreate() {
  // @@protoc_insertion_point(destructor:pb.FrameSceneItemCreate)
  SharedDtor();
}

void FrameSceneItemCreate::SharedDtor() {
  if (this != &FrameSceneItemCreate_default_instance_.get()) {
    delete item_;
  }
}

void FrameSceneItemCreate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FrameSceneItemCreate::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FrameSceneItemCreate_descriptor_;
}

const FrameSceneItemCreate& FrameSceneItemCreate::default_instance() {
  protobuf_InitDefaults_game_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<FrameSceneItemCreate> FrameSceneItemCreate_default_instance_;

FrameSceneItemCreate* FrameSceneItemCreate::New(::google::protobuf::Arena* arena) const {
  FrameSceneItemCreate* n = new FrameSceneItemCreate;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FrameSceneItemCreate::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.FrameSceneItemCreate)
  if (has_item()) {
    if (item_ != NULL) item_->::pb::RoomItem::Clear();
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool FrameSceneItemCreate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.FrameSceneItemCreate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .pb.RoomItem item = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_item()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.FrameSceneItemCreate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.FrameSceneItemCreate)
  return false;
#undef DO_
}

void FrameSceneItemCreate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.FrameSceneItemCreate)
  // required .pb.RoomItem item = 1;
  if (has_item()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->item_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.FrameSceneItemCreate)
}

::google::protobuf::uint8* FrameSceneItemCreate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.FrameSceneItemCreate)
  // required .pb.RoomItem item = 1;
  if (has_item()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->item_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.FrameSceneItemCreate)
  return target;
}

size_t FrameSceneItemCreate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.FrameSceneItemCreate)
  size_t total_size = 0;

  // required .pb.RoomItem item = 1;
  if (has_item()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->item_);
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FrameSceneItemCreate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.FrameSceneItemCreate)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const FrameSceneItemCreate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FrameSceneItemCreate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.FrameSceneItemCreate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.FrameSceneItemCreate)
    UnsafeMergeFrom(*source);
  }
}

void FrameSceneItemCreate::MergeFrom(const FrameSceneItemCreate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.FrameSceneItemCreate)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void FrameSceneItemCreate::UnsafeMergeFrom(const FrameSceneItemCreate& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item()) {
      mutable_item()->::pb::RoomItem::MergeFrom(from.item());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void FrameSceneItemCreate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.FrameSceneItemCreate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FrameSceneItemCreate::CopyFrom(const FrameSceneItemCreate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.FrameSceneItemCreate)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool FrameSceneItemCreate::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_item()) {
    if (!this->item_->IsInitialized()) return false;
  }
  return true;
}

void FrameSceneItemCreate::Swap(FrameSceneItemCreate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FrameSceneItemCreate::InternalSwap(FrameSceneItemCreate* other) {
  std::swap(item_, other->item_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FrameSceneItemCreate::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FrameSceneItemCreate_descriptor_;
  metadata.reflection = FrameSceneItemCreate_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FrameSceneItemCreate

// required .pb.RoomItem item = 1;
bool FrameSceneItemCreate::has_item() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void FrameSceneItemCreate::set_has_item() {
  _has_bits_[0] |= 0x00000001u;
}
void FrameSceneItemCreate::clear_has_item() {
  _has_bits_[0] &= ~0x00000001u;
}
void FrameSceneItemCreate::clear_item() {
  if (item_ != NULL) item_->::pb::RoomItem::Clear();
  clear_has_item();
}
const ::pb::RoomItem& FrameSceneItemCreate::item() const {
  // @@protoc_insertion_point(field_get:pb.FrameSceneItemCreate.item)
  return item_ != NULL ? *item_
                         : *::pb::RoomItem::internal_default_instance();
}
::pb::RoomItem* FrameSceneItemCreate::mutable_item() {
  set_has_item();
  if (item_ == NULL) {
    item_ = new ::pb::RoomItem;
  }
  // @@protoc_insertion_point(field_mutable:pb.FrameSceneItemCreate.item)
  return item_;
}
::pb::RoomItem* FrameSceneItemCreate::release_item() {
  // @@protoc_insertion_point(field_release:pb.FrameSceneItemCreate.item)
  clear_has_item();
  ::pb::RoomItem* temp = item_;
  item_ = NULL;
  return temp;
}
void FrameSceneItemCreate::set_allocated_item(::pb::RoomItem* item) {
  delete item_;
  item_ = item;
  if (item) {
    set_has_item();
  } else {
    clear_has_item();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.FrameSceneItemCreate.item)
}

inline const FrameSceneItemCreate* FrameSceneItemCreate::internal_default_instance() {
  return &FrameSceneItemCreate_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FrameSceneItemRemove::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FrameSceneItemRemove::FrameSceneItemRemove()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_game_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.FrameSceneItemRemove)
}

void FrameSceneItemRemove::InitAsDefaultInstance() {
}

FrameSceneItemRemove::FrameSceneItemRemove(const FrameSceneItemRemove& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.FrameSceneItemRemove)
}

void FrameSceneItemRemove::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
}

FrameSceneItemRemove::~FrameSceneItemRemove() {
  // @@protoc_insertion_point(destructor:pb.FrameSceneItemRemove)
  SharedDtor();
}

void FrameSceneItemRemove::SharedDtor() {
}

void FrameSceneItemRemove::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FrameSceneItemRemove::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FrameSceneItemRemove_descriptor_;
}

const FrameSceneItemRemove& FrameSceneItemRemove::default_instance() {
  protobuf_InitDefaults_game_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<FrameSceneItemRemove> FrameSceneItemRemove_default_instance_;

FrameSceneItemRemove* FrameSceneItemRemove::New(::google::protobuf::Arena* arena) const {
  FrameSceneItemRemove* n = new FrameSceneItemRemove;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FrameSceneItemRemove::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.FrameSceneItemRemove)
  id_ = 0u;
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool FrameSceneItemRemove::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.FrameSceneItemRemove)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (tag == 8) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.FrameSceneItemRemove)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.FrameSceneItemRemove)
  return false;
#undef DO_
}

void FrameSceneItemRemove::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.FrameSceneItemRemove)
  // required uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.FrameSceneItemRemove)
}

::google::protobuf::uint8* FrameSceneItemRemove::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.FrameSceneItemRemove)
  // required uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.FrameSceneItemRemove)
  return target;
}

size_t FrameSceneItemRemove::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.FrameSceneItemRemove)
  size_t total_size = 0;

  // required uint32 id = 1;
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FrameSceneItemRemove::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.FrameSceneItemRemove)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const FrameSceneItemRemove* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FrameSceneItemRemove>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.FrameSceneItemRemove)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.FrameSceneItemRemove)
    UnsafeMergeFrom(*source);
  }
}

void FrameSceneItemRemove::MergeFrom(const FrameSceneItemRemove& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.FrameSceneItemRemove)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void FrameSceneItemRemove::UnsafeMergeFrom(const FrameSceneItemRemove& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void FrameSceneItemRemove::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.FrameSceneItemRemove)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FrameSceneItemRemove::CopyFrom(const FrameSceneItemRemove& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.FrameSceneItemRemove)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool FrameSceneItemRemove::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void FrameSceneItemRemove::Swap(FrameSceneItemRemove* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FrameSceneItemRemove::InternalSwap(FrameSceneItemRemove* other) {
  std::swap(id_, other->id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FrameSceneItemRemove::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FrameSceneItemRemove_descriptor_;
  metadata.reflection = FrameSceneItemRemove_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FrameSceneItemRemove

// required uint32 id = 1;
bool FrameSceneItemRemove::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void FrameSceneItemRemove::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void FrameSceneItemRemove::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void FrameSceneItemRemove::clear_id() {
  id_ = 0u;
  clear_has_id();
}
::google::protobuf::uint32 FrameSceneItemRemove::id() const {
  // @@protoc_insertion_point(field_get:pb.FrameSceneItemRemove.id)
  return id_;
}
void FrameSceneItemRemove::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:pb.FrameSceneItemRemove.id)
}

inline const FrameSceneItemRemove* FrameSceneItemRemove::internal_default_instance() {
  return &FrameSceneItemRemove_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FrameLevelUp::kPlayerIdFieldNumber;
const int FrameLevelUp::kPlayerLevelFieldNumber;
const int FrameLevelUp::kPlayerSpellPointFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FrameLevelUp::FrameLevelUp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_game_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.FrameLevelUp)
}

void FrameLevelUp::InitAsDefaultInstance() {
}

FrameLevelUp::FrameLevelUp(const FrameLevelUp& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.FrameLevelUp)
}

void FrameLevelUp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&player_id_, 0, reinterpret_cast<char*>(&player_spell_point_) -
    reinterpret_cast<char*>(&player_id_) + sizeof(player_spell_point_));
}

FrameLevelUp::~FrameLevelUp() {
  // @@protoc_insertion_point(destructor:pb.FrameLevelUp)
  SharedDtor();
}

void FrameLevelUp::SharedDtor() {
}

void FrameLevelUp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FrameLevelUp::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FrameLevelUp_descriptor_;
}

const FrameLevelUp& FrameLevelUp::default_instance() {
  protobuf_InitDefaults_game_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<FrameLevelUp> FrameLevelUp_default_instance_;

FrameLevelUp* FrameLevelUp::New(::google::protobuf::Arena* arena) const {
  FrameLevelUp* n = new FrameLevelUp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FrameLevelUp::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.FrameLevelUp)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(FrameLevelUp, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<FrameLevelUp*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(player_id_, player_spell_point_);

#undef ZR_HELPER_
#undef ZR_

  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool FrameLevelUp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.FrameLevelUp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 player_id = 1;
      case 1: {
        if (tag == 8) {
          set_has_player_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &player_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_player_level;
        break;
      }

      // required uint32 player_level = 2;
      case 2: {
        if (tag == 16) {
         parse_player_level:
          set_has_player_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &player_level_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_player_spell_point;
        break;
      }

      // required uint32 player_spell_point = 3;
      case 3: {
        if (tag == 24) {
         parse_player_spell_point:
          set_has_player_spell_point();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &player_spell_point_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.FrameLevelUp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.FrameLevelUp)
  return false;
#undef DO_
}

void FrameLevelUp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.FrameLevelUp)
  // required uint32 player_id = 1;
  if (has_player_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->player_id(), output);
  }

  // required uint32 player_level = 2;
  if (has_player_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->player_level(), output);
  }

  // required uint32 player_spell_point = 3;
  if (has_player_spell_point()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->player_spell_point(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.FrameLevelUp)
}

::google::protobuf::uint8* FrameLevelUp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.FrameLevelUp)
  // required uint32 player_id = 1;
  if (has_player_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->player_id(), target);
  }

  // required uint32 player_level = 2;
  if (has_player_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->player_level(), target);
  }

  // required uint32 player_spell_point = 3;
  if (has_player_spell_point()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->player_spell_point(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.FrameLevelUp)
  return target;
}

size_t FrameLevelUp::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:pb.FrameLevelUp)
  size_t total_size = 0;

  if (has_player_id()) {
    // required uint32 player_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->player_id());
  }

  if (has_player_level()) {
    // required uint32 player_level = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->player_level());
  }

  if (has_player_spell_point()) {
    // required uint32 player_spell_point = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->player_spell_point());
  }

  return total_size;
}
size_t FrameLevelUp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.FrameLevelUp)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required uint32 player_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->player_id());

    // required uint32 player_level = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->player_level());

    // required uint32 player_spell_point = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->player_spell_point());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FrameLevelUp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.FrameLevelUp)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const FrameLevelUp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FrameLevelUp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.FrameLevelUp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.FrameLevelUp)
    UnsafeMergeFrom(*source);
  }
}

void FrameLevelUp::MergeFrom(const FrameLevelUp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.FrameLevelUp)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void FrameLevelUp::UnsafeMergeFrom(const FrameLevelUp& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_player_id()) {
      set_player_id(from.player_id());
    }
    if (from.has_player_level()) {
      set_player_level(from.player_level());
    }
    if (from.has_player_spell_point()) {
      set_player_spell_point(from.player_spell_point());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void FrameLevelUp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.FrameLevelUp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FrameLevelUp::CopyFrom(const FrameLevelUp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.FrameLevelUp)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool FrameLevelUp::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void FrameLevelUp::Swap(FrameLevelUp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FrameLevelUp::InternalSwap(FrameLevelUp* other) {
  std::swap(player_id_, other->player_id_);
  std::swap(player_level_, other->player_level_);
  std::swap(player_spell_point_, other->player_spell_point_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FrameLevelUp::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FrameLevelUp_descriptor_;
  metadata.reflection = FrameLevelUp_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FrameLevelUp

// required uint32 player_id = 1;
bool FrameLevelUp::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void FrameLevelUp::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
void FrameLevelUp::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void FrameLevelUp::clear_player_id() {
  player_id_ = 0u;
  clear_has_player_id();
}
::google::protobuf::uint32 FrameLevelUp::player_id() const {
  // @@protoc_insertion_point(field_get:pb.FrameLevelUp.player_id)
  return player_id_;
}
void FrameLevelUp::set_player_id(::google::protobuf::uint32 value) {
  set_has_player_id();
  player_id_ = value;
  // @@protoc_insertion_point(field_set:pb.FrameLevelUp.player_id)
}

// required uint32 player_level = 2;
bool FrameLevelUp::has_player_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void FrameLevelUp::set_has_player_level() {
  _has_bits_[0] |= 0x00000002u;
}
void FrameLevelUp::clear_has_player_level() {
  _has_bits_[0] &= ~0x00000002u;
}
void FrameLevelUp::clear_player_level() {
  player_level_ = 0u;
  clear_has_player_level();
}
::google::protobuf::uint32 FrameLevelUp::player_level() const {
  // @@protoc_insertion_point(field_get:pb.FrameLevelUp.player_level)
  return player_level_;
}
void FrameLevelUp::set_player_level(::google::protobuf::uint32 value) {
  set_has_player_level();
  player_level_ = value;
  // @@protoc_insertion_point(field_set:pb.FrameLevelUp.player_level)
}

// required uint32 player_spell_point = 3;
bool FrameLevelUp::has_player_spell_point() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void FrameLevelUp::set_has_player_spell_point() {
  _has_bits_[0] |= 0x00000004u;
}
void FrameLevelUp::clear_has_player_spell_point() {
  _has_bits_[0] &= ~0x00000004u;
}
void FrameLevelUp::clear_player_spell_point() {
  player_spell_point_ = 0u;
  clear_has_player_spell_point();
}
::google::protobuf::uint32 FrameLevelUp::player_spell_point() const {
  // @@protoc_insertion_point(field_get:pb.FrameLevelUp.player_spell_point)
  return player_spell_point_;
}
void FrameLevelUp::set_player_spell_point(::google::protobuf::uint32 value) {
  set_has_player_spell_point();
  player_spell_point_ = value;
  // @@protoc_insertion_point(field_set:pb.FrameLevelUp.player_spell_point)
}

inline const FrameLevelUp* FrameLevelUp::internal_default_instance() {
  return &FrameLevelUp_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FramePlayerBaseState::kPlayerIdFieldNumber;
const int FramePlayerBaseState::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FramePlayerBaseState::FramePlayerBaseState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_game_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.FramePlayerBaseState)
}

void FramePlayerBaseState::InitAsDefaultInstance() {
  state_ = const_cast< ::pb::RoomPlayerState*>(
      ::pb::RoomPlayerState::internal_default_instance());
}

FramePlayerBaseState::FramePlayerBaseState(const FramePlayerBaseState& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pb.FramePlayerBaseState)
}

void FramePlayerBaseState::SharedCtor() {
  _cached_size_ = 0;
  state_ = NULL;
  player_id_ = 0u;
}

FramePlayerBaseState::~FramePlayerBaseState() {
  // @@protoc_insertion_point(destructor:pb.FramePlayerBaseState)
  SharedDtor();
}

void FramePlayerBaseState::SharedDtor() {
  if (this != &FramePlayerBaseState_default_instance_.get()) {
    delete state_;
  }
}

void FramePlayerBaseState::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FramePlayerBaseState::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FramePlayerBaseState_descriptor_;
}

const FramePlayerBaseState& FramePlayerBaseState::default_instance() {
  protobuf_InitDefaults_game_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<FramePlayerBaseState> FramePlayerBaseState_default_instance_;

FramePlayerBaseState* FramePlayerBaseState::New(::google::protobuf::Arena* arena) const {
  FramePlayerBaseState* n = new FramePlayerBaseState;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FramePlayerBaseState::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.FramePlayerBaseState)
  if (_has_bits_[0 / 32] & 3u) {
    player_id_ = 0u;
    if (has_state()) {
      if (state_ != NULL) state_->::pb::RoomPlayerState::Clear();
    }
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool FramePlayerBaseState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pb.FramePlayerBaseState)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 player_id = 1;
      case 1: {
        if (tag == 8) {
          set_has_player_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &player_id_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_state;
        break;
      }

      // required .pb.RoomPlayerState state = 2;
      case 2: {
        if (tag == 18) {
         parse_state:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_state()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pb.FramePlayerBaseState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pb.FramePlayerBaseState)
  return false;
#undef DO_
}

void FramePlayerBaseState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pb.FramePlayerBaseState)
  // required uint32 player_id = 1;
  if (has_player_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->player_id(), output);
  }

  // required .pb.RoomPlayerState state = 2;
  if (has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->state_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pb.FramePlayerBaseState)
}

::google::protobuf::uint8* FramePlayerBaseState::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pb.FramePlayerBaseState)
  // required uint32 player_id = 1;
  if (has_player_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->player_id(), target);
  }

  // required .pb.RoomPlayerState state = 2;
  if (has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->state_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.FramePlayerBaseState)
  return target;
}

size_t FramePlayerBaseState::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:pb.FramePlayerBaseState)
  size_t total_size = 0;

  if (has_player_id()) {
    // required uint32 player_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->player_id());
  }

  if (has_state()) {
    // required .pb.RoomPlayerState state = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->state_);
  }

  return total_size;
}
size_t FramePlayerBaseState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.FramePlayerBaseState)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required uint32 player_id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->player_id());

    // required .pb.RoomPlayerState state = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->state_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FramePlayerBaseState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.FramePlayerBaseState)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const FramePlayerBaseState* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FramePlayerBaseState>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.FramePlayerBaseState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.FramePlayerBaseState)
    UnsafeMergeFrom(*source);
  }
}

void FramePlayerBaseState::MergeFrom(const FramePlayerBaseState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.FramePlayerBaseState)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void FramePlayerBaseState::UnsafeMergeFrom(const FramePlayerBaseState& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_player_id()) {
      set_player_id(from.player_id());
    }
    if (from.has_state()) {
      mutable_state()->::pb::RoomPlayerState::MergeFrom(from.state());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void FramePlayerBaseState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.FramePlayerBaseState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FramePlayerBaseState::CopyFrom(const FramePlayerBaseState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.FramePlayerBaseState)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool FramePlayerBaseState::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_state()) {
    if (!this->state_->IsInitialized()) return false;
  }
  return true;
}

void FramePlayerBaseState::Swap(FramePlayerBaseState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FramePlayerBaseState::InternalSwap(FramePlayerBaseState* other) {
  std::swap(player_id_, other->player_id_);
  std::swap(state_, other->state_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FramePlayerBaseState::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FramePlayerBaseState_descriptor_;
  metadata.reflection = FramePlayerBaseState_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FramePlayerBaseState

// required uint32 player_id = 1;
bool FramePlayerBaseState::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void FramePlayerBaseState::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
void FramePlayerBaseState::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void FramePlayerBaseState::clear_player_id() {
  player_id_ = 0u;
  clear_has_player_id();
}
::google::protobuf::uint32 FramePlayerBaseState::player_id() const {
  // @@protoc_insertion_point(field_get:pb.FramePlayerBaseState.player_id)
  return player_id_;
}
void FramePlayerBaseState::set_player_id(::google::protobuf::uint32 value) {
  set_has_player_id();
  player_id_ = value;
  // @@protoc_insertion_point(field_set:pb.FramePlayerBaseState.player_id)
}

// required .pb.RoomPlayerState state = 2;
bool FramePlayerBaseState::has_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void FramePlayerBaseState::set_has_state() {
  _has_bits_[0] |= 0x00000002u;
}
void FramePlayerBaseState::clear_has_state() {
  _has_bits_[0] &= ~0x00000002u;
}
void FramePlayerBaseState::clear_state() {
  if (state_ != NULL) state_->::pb::RoomPlayerState::Clear();
  clear_has_state();
}
const ::pb::RoomPlayerState& FramePlayerBaseState::state() const {
  // @@protoc_insertion_point(field_get:pb.FramePlayerBaseState.state)
  return state_ != NULL ? *state_
                         : *::pb::RoomPlayerState::internal_default_instance();
}
::pb::RoomPlayerState* FramePlayerBaseState::mutable_state() {
  set_has_state();
  if (state_ == NULL) {
    state_ = new ::pb::RoomPlayerState;
  }
  // @@protoc_insertion_point(field_mutable:pb.FramePlayerBaseState.state)
  return state_;
}
::pb::RoomPlayerState* FramePlayerBaseState::release_state() {
  // @@protoc_insertion_point(field_release:pb.FramePlayerBaseState.state)
  clear_has_state();
  ::pb::RoomPlayerState* temp = state_;
  state_ = NULL;
  return temp;
}
void FramePlayerBaseState::set_allocated_state(::pb::RoomPlayerState* state) {
  delete state_;
  state_ = state;
  if (state) {
    set_has_state();
  } else {
    clear_has_state();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.FramePlayerBaseState.state)
}

inline const FramePlayerBaseState* FramePlayerBaseState::internal_default_instance() {
  return &FramePlayerBaseState_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)
