// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: game.proto

#ifndef PROTOBUF_game_2eproto__INCLUDED
#define PROTOBUF_game_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace pb {
class ErrorMsg;
class ErrorMsgDefaultTypeInternal;
extern ErrorMsgDefaultTypeInternal _ErrorMsg_default_instance_;
class Frame;
class FrameDefaultTypeInternal;
extern FrameDefaultTypeInternal _Frame_default_instance_;
class FrameActionStart;
class FrameActionStartDefaultTypeInternal;
extern FrameActionStartDefaultTypeInternal _FrameActionStart_default_instance_;
class FrameDeath;
class FrameDeathDefaultTypeInternal;
extern FrameDeathDefaultTypeInternal _FrameDeath_default_instance_;
class FrameLevelUp;
class FrameLevelUpDefaultTypeInternal;
extern FrameLevelUpDefaultTypeInternal _FrameLevelUp_default_instance_;
class FrameMove;
class FrameMoveDefaultTypeInternal;
extern FrameMoveDefaultTypeInternal _FrameMove_default_instance_;
class FrameMoveTest;
class FrameMoveTestDefaultTypeInternal;
extern FrameMoveTestDefaultTypeInternal _FrameMoveTest_default_instance_;
class FramePlayerBaseState;
class FramePlayerBaseStateDefaultTypeInternal;
extern FramePlayerBaseStateDefaultTypeInternal _FramePlayerBaseState_default_instance_;
class FrameRelive;
class FrameReliveDefaultTypeInternal;
extern FrameReliveDefaultTypeInternal _FrameRelive_default_instance_;
class FrameRemoveBuff;
class FrameRemoveBuffDefaultTypeInternal;
extern FrameRemoveBuffDefaultTypeInternal _FrameRemoveBuff_default_instance_;
class FrameSceneItemCreate;
class FrameSceneItemCreateDefaultTypeInternal;
extern FrameSceneItemCreateDefaultTypeInternal _FrameSceneItemCreate_default_instance_;
class FrameSceneItemRemove;
class FrameSceneItemRemoveDefaultTypeInternal;
extern FrameSceneItemRemoveDefaultTypeInternal _FrameSceneItemRemove_default_instance_;
class FrameSpellLevel;
class FrameSpellLevelDefaultTypeInternal;
extern FrameSpellLevelDefaultTypeInternal _FrameSpellLevel_default_instance_;
class FrameSpellState;
class FrameSpellStateDefaultTypeInternal;
extern FrameSpellStateDefaultTypeInternal _FrameSpellState_default_instance_;
class FrameStartBuff;
class FrameStartBuffDefaultTypeInternal;
extern FrameStartBuffDefaultTypeInternal _FrameStartBuff_default_instance_;
class FrameStop;
class FrameStopDefaultTypeInternal;
extern FrameStopDefaultTypeInternal _FrameStop_default_instance_;
class GameIssueReq;
class GameIssueReqDefaultTypeInternal;
extern GameIssueReqDefaultTypeInternal _GameIssueReq_default_instance_;
class GameIssueRes;
class GameIssueResDefaultTypeInternal;
extern GameIssueResDefaultTypeInternal _GameIssueRes_default_instance_;
class HallLoginReq;
class HallLoginReqDefaultTypeInternal;
extern HallLoginReqDefaultTypeInternal _HallLoginReq_default_instance_;
class HallLoginRes;
class HallLoginResDefaultTypeInternal;
extern HallLoginResDefaultTypeInternal _HallLoginRes_default_instance_;
class HallStartGameReq;
class HallStartGameReqDefaultTypeInternal;
extern HallStartGameReqDefaultTypeInternal _HallStartGameReq_default_instance_;
class HallStartGameRes;
class HallStartGameResDefaultTypeInternal;
extern HallStartGameResDefaultTypeInternal _HallStartGameRes_default_instance_;
class KillNotify;
class KillNotifyDefaultTypeInternal;
extern KillNotifyDefaultTypeInternal _KillNotify_default_instance_;
class KillNotify_KillInfo;
class KillNotify_KillInfoDefaultTypeInternal;
extern KillNotify_KillInfoDefaultTypeInternal _KillNotify_KillInfo_default_instance_;
class RCenterRegisterReq;
class RCenterRegisterReqDefaultTypeInternal;
extern RCenterRegisterReqDefaultTypeInternal _RCenterRegisterReq_default_instance_;
class RCenterRegisterRes;
class RCenterRegisterResDefaultTypeInternal;
extern RCenterRegisterResDefaultTypeInternal _RCenterRegisterRes_default_instance_;
class RoomBuff;
class RoomBuffDefaultTypeInternal;
extern RoomBuffDefaultTypeInternal _RoomBuff_default_instance_;
class RoomFrameNotify;
class RoomFrameNotifyDefaultTypeInternal;
extern RoomFrameNotifyDefaultTypeInternal _RoomFrameNotify_default_instance_;
class RoomItem;
class RoomItemDefaultTypeInternal;
extern RoomItemDefaultTypeInternal _RoomItem_default_instance_;
class RoomLadderNotify;
class RoomLadderNotifyDefaultTypeInternal;
extern RoomLadderNotifyDefaultTypeInternal _RoomLadderNotify_default_instance_;
class RoomLadderNotify_Item;
class RoomLadderNotify_ItemDefaultTypeInternal;
extern RoomLadderNotify_ItemDefaultTypeInternal _RoomLadderNotify_Item_default_instance_;
class RoomLoginReq;
class RoomLoginReqDefaultTypeInternal;
extern RoomLoginReqDefaultTypeInternal _RoomLoginReq_default_instance_;
class RoomLoginRes;
class RoomLoginResDefaultTypeInternal;
extern RoomLoginResDefaultTypeInternal _RoomLoginRes_default_instance_;
class RoomPingReq;
class RoomPingReqDefaultTypeInternal;
extern RoomPingReqDefaultTypeInternal _RoomPingReq_default_instance_;
class RoomPingRes;
class RoomPingResDefaultTypeInternal;
extern RoomPingResDefaultTypeInternal _RoomPingRes_default_instance_;
class RoomPlayer;
class RoomPlayerDefaultTypeInternal;
extern RoomPlayerDefaultTypeInternal _RoomPlayer_default_instance_;
class RoomPlayerAdd;
class RoomPlayerAddDefaultTypeInternal;
extern RoomPlayerAddDefaultTypeInternal _RoomPlayerAdd_default_instance_;
class RoomPlayerDragEndReq;
class RoomPlayerDragEndReqDefaultTypeInternal;
extern RoomPlayerDragEndReqDefaultTypeInternal _RoomPlayerDragEndReq_default_instance_;
class RoomPlayerDragRes;
class RoomPlayerDragResDefaultTypeInternal;
extern RoomPlayerDragResDefaultTypeInternal _RoomPlayerDragRes_default_instance_;
class RoomPlayerMoveReq;
class RoomPlayerMoveReqDefaultTypeInternal;
extern RoomPlayerMoveReqDefaultTypeInternal _RoomPlayerMoveReq_default_instance_;
class RoomPlayerReliveReq;
class RoomPlayerReliveReqDefaultTypeInternal;
extern RoomPlayerReliveReqDefaultTypeInternal _RoomPlayerReliveReq_default_instance_;
class RoomPlayerRemove;
class RoomPlayerRemoveDefaultTypeInternal;
extern RoomPlayerRemoveDefaultTypeInternal _RoomPlayerRemove_default_instance_;
class RoomPlayerSpell;
class RoomPlayerSpellDefaultTypeInternal;
extern RoomPlayerSpellDefaultTypeInternal _RoomPlayerSpell_default_instance_;
class RoomPlayerState;
class RoomPlayerStateDefaultTypeInternal;
extern RoomPlayerStateDefaultTypeInternal _RoomPlayerState_default_instance_;
class RoomPlayerStopReq;
class RoomPlayerStopReqDefaultTypeInternal;
extern RoomPlayerStopReqDefaultTypeInternal _RoomPlayerStopReq_default_instance_;
class RoomSnapShot;
class RoomSnapShotDefaultTypeInternal;
extern RoomSnapShotDefaultTypeInternal _RoomSnapShot_default_instance_;
class SpellLevelUpReq;
class SpellLevelUpReqDefaultTypeInternal;
extern SpellLevelUpReqDefaultTypeInternal _SpellLevelUpReq_default_instance_;
class SpellStartReq;
class SpellStartReqDefaultTypeInternal;
extern SpellStartReqDefaultTypeInternal _SpellStartReq_default_instance_;
class Vector;
class VectorDefaultTypeInternal;
extern VectorDefaultTypeInternal _Vector_default_instance_;
}  // namespace pb

namespace pb {

namespace protobuf_game_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_game_2eproto

enum CMD {
  NONE = 0,
  ERROR_MSG = 1000,
  GAME_ISSUE = 2001,
  HALL_LOGIN = 2002,
  HALL_START_GAME = 2003,
  ROOM_LOGIN = 3001,
  ROOM_PING = 3002,
  ROOM_PLAYER_ADD = 3004,
  ROOM_PLAYER_REMOVE = 3005,
  ROOM_FRAME_NOTIFY = 3006,
  ROOM_LADDER_NOTIFY = 3007,
  ROOM_KILLS_NOTIFY = 3008,
  ROOM_PLAYER_RELIVE = 3009,
  ROOM_PLAYER_MOVE = 3010,
  ROOM_PLAYER_STOP = 3011,
  ROOM_PLAYER_SPELL = 3012,
  ROOM_SPELL_LEVEL_UP = 3013,
  ROOM_PLAYER_DRAG = 3101,
  ROOM_PLAYER_DRAG_END = 3102,
  RCENTER_REGISTER = 4001
};
bool CMD_IsValid(int value);
const CMD CMD_MIN = NONE;
const CMD CMD_MAX = RCENTER_REGISTER;
const int CMD_ARRAYSIZE = CMD_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMD_descriptor();
inline const ::std::string& CMD_Name(CMD value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMD_descriptor(), value);
}
inline bool CMD_Parse(
    const ::std::string& name, CMD* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMD>(
    CMD_descriptor(), name, value);
}
enum E {
  OK = 0,
  INVALID_REQUEST = 1,
  INTERNAL_ERROR = 2,
  HALL_GET_ROOM_FAIL = 1000,
  HALL_GET_DB_DATA_FAIL = 1001,
  HALL_INVALID_TOKEN = 1002,
  HALL_PLAYER_ALREADY_LOGIN = 1003,
  ROOM_GAME_ISSUE = 1004,
  ROOM_ROAL_NOT_EXIST = 2001,
  ROOM_SPELL_NOT_EXIST = 2002,
  ROOM_SPELL_IS_LIMIT = 2003,
  ROOM_SPELL_NORMAL_NOT_UP = 2004,
  ROOM_SPELL_LEVEL_UP_ERROR = 2005,
  ROOM_SPELL_POINT_NOT_ENOUGH = 2006
};
bool E_IsValid(int value);
const E E_MIN = OK;
const E E_MAX = ROOM_SPELL_POINT_NOT_ENOUGH;
const int E_ARRAYSIZE = E_MAX + 1;

const ::google::protobuf::EnumDescriptor* E_descriptor();
inline const ::std::string& E_Name(E value) {
  return ::google::protobuf::internal::NameOfEnum(
    E_descriptor(), value);
}
inline bool E_Parse(
    const ::std::string& name, E* value) {
  return ::google::protobuf::internal::ParseNamedEnum<E>(
    E_descriptor(), name, value);
}
enum FRAME {
  CMD_NONE = 0,
  CMD_MOVE = 1,
  CMD_STOP = 2,
  CMD_DEATH = 3,
  CMD_RELIVE = 4,
  CMD_ACTION_START = 5,
  CMD_BUFF_START = 6,
  CMD_BUFF_REMOVE = 7,
  CMD_SPELL_SATE = 8,
  CMD_SCENE_ITEM_CREATE = 9,
  CMD_SCENE_TIEM_REMOVE = 10,
  CMD_LEVEL_UP = 11,
  CMD_BASE_STATE = 12,
  CMD_SPELL_LEVEL_UP = 13,
  CMD_MOVE_TEST = 14
};
bool FRAME_IsValid(int value);
const FRAME FRAME_MIN = CMD_NONE;
const FRAME FRAME_MAX = CMD_MOVE_TEST;
const int FRAME_ARRAYSIZE = FRAME_MAX + 1;

const ::google::protobuf::EnumDescriptor* FRAME_descriptor();
inline const ::std::string& FRAME_Name(FRAME value) {
  return ::google::protobuf::internal::NameOfEnum(
    FRAME_descriptor(), value);
}
inline bool FRAME_Parse(
    const ::std::string& name, FRAME* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FRAME>(
    FRAME_descriptor(), name, value);
}
// ===================================================================

class ErrorMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.ErrorMsg) */ {
 public:
  ErrorMsg();
  virtual ~ErrorMsg();

  ErrorMsg(const ErrorMsg& from);

  inline ErrorMsg& operator=(const ErrorMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ErrorMsg& default_instance();

  static inline const ErrorMsg* internal_default_instance() {
    return reinterpret_cast<const ErrorMsg*>(
               &_ErrorMsg_default_instance_);
  }

  void Swap(ErrorMsg* other);

  // implements Message ----------------------------------------------

  inline ErrorMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  ErrorMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ErrorMsg& from);
  void MergeFrom(const ErrorMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ErrorMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 command = 1;
  bool has_command() const;
  void clear_command();
  static const int kCommandFieldNumber = 1;
  ::google::protobuf::uint32 command() const;
  void set_command(::google::protobuf::uint32 value);

  // required uint32 error_code = 2;
  bool has_error_code() const;
  void clear_error_code();
  static const int kErrorCodeFieldNumber = 2;
  ::google::protobuf::uint32 error_code() const;
  void set_error_code(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.ErrorMsg)
 private:
  void set_has_command();
  void clear_has_command();
  void set_has_error_code();
  void clear_has_error_code();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 command_;
  ::google::protobuf::uint32 error_code_;
  friend struct  protobuf_game_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GameIssueReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.GameIssueReq) */ {
 public:
  GameIssueReq();
  virtual ~GameIssueReq();

  GameIssueReq(const GameIssueReq& from);

  inline GameIssueReq& operator=(const GameIssueReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GameIssueReq& default_instance();

  static inline const GameIssueReq* internal_default_instance() {
    return reinterpret_cast<const GameIssueReq*>(
               &_GameIssueReq_default_instance_);
  }

  void Swap(GameIssueReq* other);

  // implements Message ----------------------------------------------

  inline GameIssueReq* New() const PROTOBUF_FINAL { return New(NULL); }

  GameIssueReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GameIssueReq& from);
  void MergeFrom(const GameIssueReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GameIssueReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:pb.GameIssueReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct  protobuf_game_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GameIssueRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.GameIssueRes) */ {
 public:
  GameIssueRes();
  virtual ~GameIssueRes();

  GameIssueRes(const GameIssueRes& from);

  inline GameIssueRes& operator=(const GameIssueRes& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GameIssueRes& default_instance();

  static inline const GameIssueRes* internal_default_instance() {
    return reinterpret_cast<const GameIssueRes*>(
               &_GameIssueRes_default_instance_);
  }

  void Swap(GameIssueRes* other);

  // implements Message ----------------------------------------------

  inline GameIssueRes* New() const PROTOBUF_FINAL { return New(NULL); }

  GameIssueRes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GameIssueRes& from);
  void MergeFrom(const GameIssueRes& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GameIssueRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string GameIssue = 1;
  bool has_gameissue() const;
  void clear_gameissue();
  static const int kGameIssueFieldNumber = 1;
  const ::std::string& gameissue() const;
  void set_gameissue(const ::std::string& value);
  #if LANG_CXX11
  void set_gameissue(::std::string&& value);
  #endif
  void set_gameissue(const char* value);
  void set_gameissue(const char* value, size_t size);
  ::std::string* mutable_gameissue();
  ::std::string* release_gameissue();
  void set_allocated_gameissue(::std::string* gameissue);

  // @@protoc_insertion_point(class_scope:pb.GameIssueRes)
 private:
  void set_has_gameissue();
  void clear_has_gameissue();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr gameissue_;
  friend struct  protobuf_game_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HallLoginReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.HallLoginReq) */ {
 public:
  HallLoginReq();
  virtual ~HallLoginReq();

  HallLoginReq(const HallLoginReq& from);

  inline HallLoginReq& operator=(const HallLoginReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HallLoginReq& default_instance();

  static inline const HallLoginReq* internal_default_instance() {
    return reinterpret_cast<const HallLoginReq*>(
               &_HallLoginReq_default_instance_);
  }

  void Swap(HallLoginReq* other);

  // implements Message ----------------------------------------------

  inline HallLoginReq* New() const PROTOBUF_FINAL { return New(NULL); }

  HallLoginReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HallLoginReq& from);
  void MergeFrom(const HallLoginReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HallLoginReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string token = 1;
  bool has_token() const;
  void clear_token();
  static const int kTokenFieldNumber = 1;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // @@protoc_insertion_point(class_scope:pb.HallLoginReq)
 private:
  void set_has_token();
  void clear_has_token();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  friend struct  protobuf_game_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HallLoginRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.HallLoginRes) */ {
 public:
  HallLoginRes();
  virtual ~HallLoginRes();

  HallLoginRes(const HallLoginRes& from);

  inline HallLoginRes& operator=(const HallLoginRes& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HallLoginRes& default_instance();

  static inline const HallLoginRes* internal_default_instance() {
    return reinterpret_cast<const HallLoginRes*>(
               &_HallLoginRes_default_instance_);
  }

  void Swap(HallLoginRes* other);

  // implements Message ----------------------------------------------

  inline HallLoginRes* New() const PROTOBUF_FINAL { return New(NULL); }

  HallLoginRes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HallLoginRes& from);
  void MergeFrom(const HallLoginRes& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HallLoginRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // required uint32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.HallLoginRes)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_name();
  void clear_has_name();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint32 id_;
  friend struct  protobuf_game_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HallStartGameReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.HallStartGameReq) */ {
 public:
  HallStartGameReq();
  virtual ~HallStartGameReq();

  HallStartGameReq(const HallStartGameReq& from);

  inline HallStartGameReq& operator=(const HallStartGameReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HallStartGameReq& default_instance();

  static inline const HallStartGameReq* internal_default_instance() {
    return reinterpret_cast<const HallStartGameReq*>(
               &_HallStartGameReq_default_instance_);
  }

  void Swap(HallStartGameReq* other);

  // implements Message ----------------------------------------------

  inline HallStartGameReq* New() const PROTOBUF_FINAL { return New(NULL); }

  HallStartGameReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HallStartGameReq& from);
  void MergeFrom(const HallStartGameReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HallStartGameReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:pb.HallStartGameReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct  protobuf_game_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HallStartGameRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.HallStartGameRes) */ {
 public:
  HallStartGameRes();
  virtual ~HallStartGameRes();

  HallStartGameRes(const HallStartGameRes& from);

  inline HallStartGameRes& operator=(const HallStartGameRes& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HallStartGameRes& default_instance();

  static inline const HallStartGameRes* internal_default_instance() {
    return reinterpret_cast<const HallStartGameRes*>(
               &_HallStartGameRes_default_instance_);
  }

  void Swap(HallStartGameRes* other);

  // implements Message ----------------------------------------------

  inline HallStartGameRes* New() const PROTOBUF_FINAL { return New(NULL); }

  HallStartGameRes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HallStartGameRes& from);
  void MergeFrom(const HallStartGameRes& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HallStartGameRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string tcp_addr = 2;
  bool has_tcp_addr() const;
  void clear_tcp_addr();
  static const int kTcpAddrFieldNumber = 2;
  const ::std::string& tcp_addr() const;
  void set_tcp_addr(const ::std::string& value);
  #if LANG_CXX11
  void set_tcp_addr(::std::string&& value);
  #endif
  void set_tcp_addr(const char* value);
  void set_tcp_addr(const char* value, size_t size);
  ::std::string* mutable_tcp_addr();
  ::std::string* release_tcp_addr();
  void set_allocated_tcp_addr(::std::string* tcp_addr);

  // required string udp_addr = 3;
  bool has_udp_addr() const;
  void clear_udp_addr();
  static const int kUdpAddrFieldNumber = 3;
  const ::std::string& udp_addr() const;
  void set_udp_addr(const ::std::string& value);
  #if LANG_CXX11
  void set_udp_addr(::std::string&& value);
  #endif
  void set_udp_addr(const char* value);
  void set_udp_addr(const char* value, size_t size);
  ::std::string* mutable_udp_addr();
  ::std::string* release_udp_addr();
  void set_allocated_udp_addr(::std::string* udp_addr);

  // required string ws_addr = 4;
  bool has_ws_addr() const;
  void clear_ws_addr();
  static const int kWsAddrFieldNumber = 4;
  const ::std::string& ws_addr() const;
  void set_ws_addr(const ::std::string& value);
  #if LANG_CXX11
  void set_ws_addr(::std::string&& value);
  #endif
  void set_ws_addr(const char* value);
  void set_ws_addr(const char* value, size_t size);
  ::std::string* mutable_ws_addr();
  ::std::string* release_ws_addr();
  void set_allocated_ws_addr(::std::string* ws_addr);

  // required string room_key = 5;
  bool has_room_key() const;
  void clear_room_key();
  static const int kRoomKeyFieldNumber = 5;
  const ::std::string& room_key() const;
  void set_room_key(const ::std::string& value);
  #if LANG_CXX11
  void set_room_key(::std::string&& value);
  #endif
  void set_room_key(const char* value);
  void set_room_key(const char* value, size_t size);
  ::std::string* mutable_room_key();
  ::std::string* release_room_key();
  void set_allocated_room_key(::std::string* room_key);

  // required uint32 room_id = 1;
  bool has_room_id() const;
  void clear_room_id();
  static const int kRoomIdFieldNumber = 1;
  ::google::protobuf::uint32 room_id() const;
  void set_room_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.HallStartGameRes)
 private:
  void set_has_room_id();
  void clear_has_room_id();
  void set_has_tcp_addr();
  void clear_has_tcp_addr();
  void set_has_udp_addr();
  void clear_has_udp_addr();
  void set_has_ws_addr();
  void clear_has_ws_addr();
  void set_has_room_key();
  void clear_has_room_key();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr tcp_addr_;
  ::google::protobuf::internal::ArenaStringPtr udp_addr_;
  ::google::protobuf::internal::ArenaStringPtr ws_addr_;
  ::google::protobuf::internal::ArenaStringPtr room_key_;
  ::google::protobuf::uint32 room_id_;
  friend struct  protobuf_game_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RCenterRegisterReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.RCenterRegisterReq) */ {
 public:
  RCenterRegisterReq();
  virtual ~RCenterRegisterReq();

  RCenterRegisterReq(const RCenterRegisterReq& from);

  inline RCenterRegisterReq& operator=(const RCenterRegisterReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RCenterRegisterReq& default_instance();

  static inline const RCenterRegisterReq* internal_default_instance() {
    return reinterpret_cast<const RCenterRegisterReq*>(
               &_RCenterRegisterReq_default_instance_);
  }

  void Swap(RCenterRegisterReq* other);

  // implements Message ----------------------------------------------

  inline RCenterRegisterReq* New() const PROTOBUF_FINAL { return New(NULL); }

  RCenterRegisterReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RCenterRegisterReq& from);
  void MergeFrom(const RCenterRegisterReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RCenterRegisterReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string tcp_addr = 1;
  bool has_tcp_addr() const;
  void clear_tcp_addr();
  static const int kTcpAddrFieldNumber = 1;
  const ::std::string& tcp_addr() const;
  void set_tcp_addr(const ::std::string& value);
  #if LANG_CXX11
  void set_tcp_addr(::std::string&& value);
  #endif
  void set_tcp_addr(const char* value);
  void set_tcp_addr(const char* value, size_t size);
  ::std::string* mutable_tcp_addr();
  ::std::string* release_tcp_addr();
  void set_allocated_tcp_addr(::std::string* tcp_addr);

  // required string udp_addr = 2;
  bool has_udp_addr() const;
  void clear_udp_addr();
  static const int kUdpAddrFieldNumber = 2;
  const ::std::string& udp_addr() const;
  void set_udp_addr(const ::std::string& value);
  #if LANG_CXX11
  void set_udp_addr(::std::string&& value);
  #endif
  void set_udp_addr(const char* value);
  void set_udp_addr(const char* value, size_t size);
  ::std::string* mutable_udp_addr();
  ::std::string* release_udp_addr();
  void set_allocated_udp_addr(::std::string* udp_addr);

  // required string ws_addr = 3;
  bool has_ws_addr() const;
  void clear_ws_addr();
  static const int kWsAddrFieldNumber = 3;
  const ::std::string& ws_addr() const;
  void set_ws_addr(const ::std::string& value);
  #if LANG_CXX11
  void set_ws_addr(::std::string&& value);
  #endif
  void set_ws_addr(const char* value);
  void set_ws_addr(const char* value, size_t size);
  ::std::string* mutable_ws_addr();
  ::std::string* release_ws_addr();
  void set_allocated_ws_addr(::std::string* ws_addr);

  // required string key = 4;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 4;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // @@protoc_insertion_point(class_scope:pb.RCenterRegisterReq)
 private:
  void set_has_tcp_addr();
  void clear_has_tcp_addr();
  void set_has_udp_addr();
  void clear_has_udp_addr();
  void set_has_ws_addr();
  void clear_has_ws_addr();
  void set_has_key();
  void clear_has_key();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr tcp_addr_;
  ::google::protobuf::internal::ArenaStringPtr udp_addr_;
  ::google::protobuf::internal::ArenaStringPtr ws_addr_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  friend struct  protobuf_game_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RCenterRegisterRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.RCenterRegisterRes) */ {
 public:
  RCenterRegisterRes();
  virtual ~RCenterRegisterRes();

  RCenterRegisterRes(const RCenterRegisterRes& from);

  inline RCenterRegisterRes& operator=(const RCenterRegisterRes& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RCenterRegisterRes& default_instance();

  static inline const RCenterRegisterRes* internal_default_instance() {
    return reinterpret_cast<const RCenterRegisterRes*>(
               &_RCenterRegisterRes_default_instance_);
  }

  void Swap(RCenterRegisterRes* other);

  // implements Message ----------------------------------------------

  inline RCenterRegisterRes* New() const PROTOBUF_FINAL { return New(NULL); }

  RCenterRegisterRes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RCenterRegisterRes& from);
  void MergeFrom(const RCenterRegisterRes& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RCenterRegisterRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.RCenterRegisterRes)
 private:
  void set_has_id();
  void clear_has_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  friend struct  protobuf_game_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Vector : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.Vector) */ {
 public:
  Vector();
  virtual ~Vector();

  Vector(const Vector& from);

  inline Vector& operator=(const Vector& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Vector& default_instance();

  static inline const Vector* internal_default_instance() {
    return reinterpret_cast<const Vector*>(
               &_Vector_default_instance_);
  }

  void Swap(Vector* other);

  // implements Message ----------------------------------------------

  inline Vector* New() const PROTOBUF_FINAL { return New(NULL); }

  Vector* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Vector& from);
  void MergeFrom(const Vector& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Vector* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sint32 x = 1;
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 1;
  ::google::protobuf::int32 x() const;
  void set_x(::google::protobuf::int32 value);

  // required sint32 z = 2;
  bool has_z() const;
  void clear_z();
  static const int kZFieldNumber = 2;
  ::google::protobuf::int32 z() const;
  void set_z(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:pb.Vector)
 private:
  void set_has_x();
  void clear_has_x();
  void set_has_z();
  void clear_has_z();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 x_;
  ::google::protobuf::int32 z_;
  friend struct  protobuf_game_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RoomPlayer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.RoomPlayer) */ {
 public:
  RoomPlayer();
  virtual ~RoomPlayer();

  RoomPlayer(const RoomPlayer& from);

  inline RoomPlayer& operator=(const RoomPlayer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoomPlayer& default_instance();

  static inline const RoomPlayer* internal_default_instance() {
    return reinterpret_cast<const RoomPlayer*>(
               &_RoomPlayer_default_instance_);
  }

  void Swap(RoomPlayer* other);

  // implements Message ----------------------------------------------

  inline RoomPlayer* New() const PROTOBUF_FINAL { return New(NULL); }

  RoomPlayer* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RoomPlayer& from);
  void MergeFrom(const RoomPlayer& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RoomPlayer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.RoomPlayerSpell spells = 9;
  int spells_size() const;
  void clear_spells();
  static const int kSpellsFieldNumber = 9;
  const ::pb::RoomPlayerSpell& spells(int index) const;
  ::pb::RoomPlayerSpell* mutable_spells(int index);
  ::pb::RoomPlayerSpell* add_spells();
  ::google::protobuf::RepeatedPtrField< ::pb::RoomPlayerSpell >*
      mutable_spells();
  const ::google::protobuf::RepeatedPtrField< ::pb::RoomPlayerSpell >&
      spells() const;

  // required string nickname = 2;
  bool has_nickname() const;
  void clear_nickname();
  static const int kNicknameFieldNumber = 2;
  const ::std::string& nickname() const;
  void set_nickname(const ::std::string& value);
  #if LANG_CXX11
  void set_nickname(::std::string&& value);
  #endif
  void set_nickname(const char* value);
  void set_nickname(const char* value, size_t size);
  ::std::string* mutable_nickname();
  ::std::string* release_nickname();
  void set_allocated_nickname(::std::string* nickname);

  // required .pb.RoomPlayerState state = 3;
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 3;
  const ::pb::RoomPlayerState& state() const;
  ::pb::RoomPlayerState* mutable_state();
  ::pb::RoomPlayerState* release_state();
  void set_allocated_state(::pb::RoomPlayerState* state);

  // required .pb.Vector pos = 6;
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 6;
  const ::pb::Vector& pos() const;
  ::pb::Vector* mutable_pos();
  ::pb::Vector* release_pos();
  void set_allocated_pos(::pb::Vector* pos);

  // required .pb.Vector dir = 7;
  bool has_dir() const;
  void clear_dir();
  static const int kDirFieldNumber = 7;
  const ::pb::Vector& dir() const;
  ::pb::Vector* mutable_dir();
  ::pb::Vector* release_dir();
  void set_allocated_dir(::pb::Vector* dir);

  // required uint32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // required uint32 job = 4;
  bool has_job() const;
  void clear_job();
  static const int kJobFieldNumber = 4;
  ::google::protobuf::uint32 job() const;
  void set_job(::google::protobuf::uint32 value);

  // required uint32 level = 5;
  bool has_level() const;
  void clear_level();
  static const int kLevelFieldNumber = 5;
  ::google::protobuf::uint32 level() const;
  void set_level(::google::protobuf::uint32 value);

  // required uint32 score = 8;
  bool has_score() const;
  void clear_score();
  static const int kScoreFieldNumber = 8;
  ::google::protobuf::uint32 score() const;
  void set_score(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.RoomPlayer)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_nickname();
  void clear_has_nickname();
  void set_has_state();
  void clear_has_state();
  void set_has_job();
  void clear_has_job();
  void set_has_level();
  void clear_has_level();
  void set_has_pos();
  void clear_has_pos();
  void set_has_dir();
  void clear_has_dir();
  void set_has_score();
  void clear_has_score();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::RoomPlayerSpell > spells_;
  ::google::protobuf::internal::ArenaStringPtr nickname_;
  ::pb::RoomPlayerState* state_;
  ::pb::Vector* pos_;
  ::pb::Vector* dir_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 job_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 score_;
  friend struct  protobuf_game_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RoomPlayerState : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.RoomPlayerState) */ {
 public:
  RoomPlayerState();
  virtual ~RoomPlayerState();

  RoomPlayerState(const RoomPlayerState& from);

  inline RoomPlayerState& operator=(const RoomPlayerState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoomPlayerState& default_instance();

  static inline const RoomPlayerState* internal_default_instance() {
    return reinterpret_cast<const RoomPlayerState*>(
               &_RoomPlayerState_default_instance_);
  }

  void Swap(RoomPlayerState* other);

  // implements Message ----------------------------------------------

  inline RoomPlayerState* New() const PROTOBUF_FINAL { return New(NULL); }

  RoomPlayerState* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RoomPlayerState& from);
  void MergeFrom(const RoomPlayerState& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RoomPlayerState* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 hp = 1;
  bool has_hp() const;
  void clear_hp();
  static const int kHpFieldNumber = 1;
  ::google::protobuf::uint32 hp() const;
  void set_hp(::google::protobuf::uint32 value);

  // required uint32 speed = 2;
  bool has_speed() const;
  void clear_speed();
  static const int kSpeedFieldNumber = 2;
  ::google::protobuf::uint32 speed() const;
  void set_speed(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.RoomPlayerState)
 private:
  void set_has_hp();
  void clear_has_hp();
  void set_has_speed();
  void clear_has_speed();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 hp_;
  ::google::protobuf::uint32 speed_;
  friend struct  protobuf_game_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RoomPlayerSpell : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.RoomPlayerSpell) */ {
 public:
  RoomPlayerSpell();
  virtual ~RoomPlayerSpell();

  RoomPlayerSpell(const RoomPlayerSpell& from);

  inline RoomPlayerSpell& operator=(const RoomPlayerSpell& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoomPlayerSpell& default_instance();

  static inline const RoomPlayerSpell* internal_default_instance() {
    return reinterpret_cast<const RoomPlayerSpell*>(
               &_RoomPlayerSpell_default_instance_);
  }

  void Swap(RoomPlayerSpell* other);

  // implements Message ----------------------------------------------

  inline RoomPlayerSpell* New() const PROTOBUF_FINAL { return New(NULL); }

  RoomPlayerSpell* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RoomPlayerSpell& from);
  void MergeFrom(const RoomPlayerSpell& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RoomPlayerSpell* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 xml_id = 1;
  bool has_xml_id() const;
  void clear_xml_id();
  static const int kXmlIdFieldNumber = 1;
  ::google::protobuf::uint32 xml_id() const;
  void set_xml_id(::google::protobuf::uint32 value);

  // required uint32 level = 2;
  bool has_level() const;
  void clear_level();
  static const int kLevelFieldNumber = 2;
  ::google::protobuf::uint32 level() const;
  void set_level(::google::protobuf::uint32 value);

  // required uint32 cd = 3;
  bool has_cd() const;
  void clear_cd();
  static const int kCdFieldNumber = 3;
  ::google::protobuf::uint32 cd() const;
  void set_cd(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.RoomPlayerSpell)
 private:
  void set_has_xml_id();
  void clear_has_xml_id();
  void set_has_level();
  void clear_has_level();
  void set_has_cd();
  void clear_has_cd();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 xml_id_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 cd_;
  friend struct  protobuf_game_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RoomItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.RoomItem) */ {
 public:
  RoomItem();
  virtual ~RoomItem();

  RoomItem(const RoomItem& from);

  inline RoomItem& operator=(const RoomItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoomItem& default_instance();

  static inline const RoomItem* internal_default_instance() {
    return reinterpret_cast<const RoomItem*>(
               &_RoomItem_default_instance_);
  }

  void Swap(RoomItem* other);

  // implements Message ----------------------------------------------

  inline RoomItem* New() const PROTOBUF_FINAL { return New(NULL); }

  RoomItem* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RoomItem& from);
  void MergeFrom(const RoomItem& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RoomItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .pb.Vector pos = 3;
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 3;
  const ::pb::Vector& pos() const;
  ::pb::Vector* mutable_pos();
  ::pb::Vector* release_pos();
  void set_allocated_pos(::pb::Vector* pos);

  // required uint32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // required uint32 xml_id = 2;
  bool has_xml_id() const;
  void clear_xml_id();
  static const int kXmlIdFieldNumber = 2;
  ::google::protobuf::uint32 xml_id() const;
  void set_xml_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.RoomItem)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_xml_id();
  void clear_has_xml_id();
  void set_has_pos();
  void clear_has_pos();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::pb::Vector* pos_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 xml_id_;
  friend struct  protobuf_game_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RoomBuff : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.RoomBuff) */ {
 public:
  RoomBuff();
  virtual ~RoomBuff();

  RoomBuff(const RoomBuff& from);

  inline RoomBuff& operator=(const RoomBuff& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoomBuff& default_instance();

  static inline const RoomBuff* internal_default_instance() {
    return reinterpret_cast<const RoomBuff*>(
               &_RoomBuff_default_instance_);
  }

  void Swap(RoomBuff* other);

  // implements Message ----------------------------------------------

  inline RoomBuff* New() const PROTOBUF_FINAL { return New(NULL); }

  RoomBuff* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RoomBuff& from);
  void MergeFrom(const RoomBuff& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RoomBuff* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // optional .pb.Vector pos = 4;
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 4;
  const ::pb::Vector& pos() const;
  ::pb::Vector* mutable_pos();
  ::pb::Vector* release_pos();
  void set_allocated_pos(::pb::Vector* pos);

  // optional .pb.Vector dir = 5;
  bool has_dir() const;
  void clear_dir();
  static const int kDirFieldNumber = 5;
  const ::pb::Vector& dir() const;
  ::pb::Vector* mutable_dir();
  ::pb::Vector* release_dir();
  void set_allocated_dir(::pb::Vector* dir);

  // required uint32 xml_id = 2;
  bool has_xml_id() const;
  void clear_xml_id();
  static const int kXmlIdFieldNumber = 2;
  ::google::protobuf::uint32 xml_id() const;
  void set_xml_id(::google::protobuf::uint32 value);

  // optional uint32 player_id = 3;
  bool has_player_id() const;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 3;
  ::google::protobuf::uint32 player_id() const;
  void set_player_id(::google::protobuf::uint32 value);

  // required uint32 remain_time = 6;
  bool has_remain_time() const;
  void clear_remain_time();
  static const int kRemainTimeFieldNumber = 6;
  ::google::protobuf::uint32 remain_time() const;
  void set_remain_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.RoomBuff)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_xml_id();
  void clear_has_xml_id();
  void set_has_player_id();
  void clear_has_player_id();
  void set_has_pos();
  void clear_has_pos();
  void set_has_dir();
  void clear_has_dir();
  void set_has_remain_time();
  void clear_has_remain_time();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::pb::Vector* pos_;
  ::pb::Vector* dir_;
  ::google::protobuf::uint32 xml_id_;
  ::google::protobuf::uint32 player_id_;
  ::google::protobuf::uint32 remain_time_;
  friend struct  protobuf_game_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RoomSnapShot : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.RoomSnapShot) */ {
 public:
  RoomSnapShot();
  virtual ~RoomSnapShot();

  RoomSnapShot(const RoomSnapShot& from);

  inline RoomSnapShot& operator=(const RoomSnapShot& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoomSnapShot& default_instance();

  static inline const RoomSnapShot* internal_default_instance() {
    return reinterpret_cast<const RoomSnapShot*>(
               &_RoomSnapShot_default_instance_);
  }

  void Swap(RoomSnapShot* other);

  // implements Message ----------------------------------------------

  inline RoomSnapShot* New() const PROTOBUF_FINAL { return New(NULL); }

  RoomSnapShot* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RoomSnapShot& from);
  void MergeFrom(const RoomSnapShot& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RoomSnapShot* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.RoomPlayer players = 1;
  int players_size() const;
  void clear_players();
  static const int kPlayersFieldNumber = 1;
  const ::pb::RoomPlayer& players(int index) const;
  ::pb::RoomPlayer* mutable_players(int index);
  ::pb::RoomPlayer* add_players();
  ::google::protobuf::RepeatedPtrField< ::pb::RoomPlayer >*
      mutable_players();
  const ::google::protobuf::RepeatedPtrField< ::pb::RoomPlayer >&
      players() const;

  // repeated .pb.RoomItem items = 2;
  int items_size() const;
  void clear_items();
  static const int kItemsFieldNumber = 2;
  const ::pb::RoomItem& items(int index) const;
  ::pb::RoomItem* mutable_items(int index);
  ::pb::RoomItem* add_items();
  ::google::protobuf::RepeatedPtrField< ::pb::RoomItem >*
      mutable_items();
  const ::google::protobuf::RepeatedPtrField< ::pb::RoomItem >&
      items() const;

  // repeated .pb.RoomBuff buffs = 3;
  int buffs_size() const;
  void clear_buffs();
  static const int kBuffsFieldNumber = 3;
  const ::pb::RoomBuff& buffs(int index) const;
  ::pb::RoomBuff* mutable_buffs(int index);
  ::pb::RoomBuff* add_buffs();
  ::google::protobuf::RepeatedPtrField< ::pb::RoomBuff >*
      mutable_buffs();
  const ::google::protobuf::RepeatedPtrField< ::pb::RoomBuff >&
      buffs() const;

  // @@protoc_insertion_point(class_scope:pb.RoomSnapShot)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::RoomPlayer > players_;
  ::google::protobuf::RepeatedPtrField< ::pb::RoomItem > items_;
  ::google::protobuf::RepeatedPtrField< ::pb::RoomBuff > buffs_;
  friend struct  protobuf_game_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RoomLoginReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.RoomLoginReq) */ {
 public:
  RoomLoginReq();
  virtual ~RoomLoginReq();

  RoomLoginReq(const RoomLoginReq& from);

  inline RoomLoginReq& operator=(const RoomLoginReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoomLoginReq& default_instance();

  static inline const RoomLoginReq* internal_default_instance() {
    return reinterpret_cast<const RoomLoginReq*>(
               &_RoomLoginReq_default_instance_);
  }

  void Swap(RoomLoginReq* other);

  // implements Message ----------------------------------------------

  inline RoomLoginReq* New() const PROTOBUF_FINAL { return New(NULL); }

  RoomLoginReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RoomLoginReq& from);
  void MergeFrom(const RoomLoginReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RoomLoginReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string nickname = 1;
  bool has_nickname() const;
  void clear_nickname();
  static const int kNicknameFieldNumber = 1;
  const ::std::string& nickname() const;
  void set_nickname(const ::std::string& value);
  #if LANG_CXX11
  void set_nickname(::std::string&& value);
  #endif
  void set_nickname(const char* value);
  void set_nickname(const char* value, size_t size);
  ::std::string* mutable_nickname();
  ::std::string* release_nickname();
  void set_allocated_nickname(::std::string* nickname);

  // required string room_key = 3;
  bool has_room_key() const;
  void clear_room_key();
  static const int kRoomKeyFieldNumber = 3;
  const ::std::string& room_key() const;
  void set_room_key(const ::std::string& value);
  #if LANG_CXX11
  void set_room_key(::std::string&& value);
  #endif
  void set_room_key(const char* value);
  void set_room_key(const char* value, size_t size);
  ::std::string* mutable_room_key();
  ::std::string* release_room_key();
  void set_allocated_room_key(::std::string* room_key);

  // required uint32 room_id = 2;
  bool has_room_id() const;
  void clear_room_id();
  static const int kRoomIdFieldNumber = 2;
  ::google::protobuf::uint32 room_id() const;
  void set_room_id(::google::protobuf::uint32 value);

  // required uint32 job = 4;
  bool has_job() const;
  void clear_job();
  static const int kJobFieldNumber = 4;
  ::google::protobuf::uint32 job() const;
  void set_job(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.RoomLoginReq)
 private:
  void set_has_nickname();
  void clear_has_nickname();
  void set_has_room_id();
  void clear_has_room_id();
  void set_has_room_key();
  void clear_has_room_key();
  void set_has_job();
  void clear_has_job();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr nickname_;
  ::google::protobuf::internal::ArenaStringPtr room_key_;
  ::google::protobuf::uint32 room_id_;
  ::google::protobuf::uint32 job_;
  friend struct  protobuf_game_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RoomLoginRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.RoomLoginRes) */ {
 public:
  RoomLoginRes();
  virtual ~RoomLoginRes();

  RoomLoginRes(const RoomLoginRes& from);

  inline RoomLoginRes& operator=(const RoomLoginRes& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoomLoginRes& default_instance();

  static inline const RoomLoginRes* internal_default_instance() {
    return reinterpret_cast<const RoomLoginRes*>(
               &_RoomLoginRes_default_instance_);
  }

  void Swap(RoomLoginRes* other);

  // implements Message ----------------------------------------------

  inline RoomLoginRes* New() const PROTOBUF_FINAL { return New(NULL); }

  RoomLoginRes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RoomLoginRes& from);
  void MergeFrom(const RoomLoginRes& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RoomLoginRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .pb.RoomSnapShot snap_shot = 3;
  bool has_snap_shot() const;
  void clear_snap_shot();
  static const int kSnapShotFieldNumber = 3;
  const ::pb::RoomSnapShot& snap_shot() const;
  ::pb::RoomSnapShot* mutable_snap_shot();
  ::pb::RoomSnapShot* release_snap_shot();
  void set_allocated_snap_shot(::pb::RoomSnapShot* snap_shot);

  // required uint32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.RoomLoginRes)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_snap_shot();
  void clear_has_snap_shot();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::pb::RoomSnapShot* snap_shot_;
  ::google::protobuf::uint32 id_;
  friend struct  protobuf_game_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RoomPlayerAdd : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.RoomPlayerAdd) */ {
 public:
  RoomPlayerAdd();
  virtual ~RoomPlayerAdd();

  RoomPlayerAdd(const RoomPlayerAdd& from);

  inline RoomPlayerAdd& operator=(const RoomPlayerAdd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoomPlayerAdd& default_instance();

  static inline const RoomPlayerAdd* internal_default_instance() {
    return reinterpret_cast<const RoomPlayerAdd*>(
               &_RoomPlayerAdd_default_instance_);
  }

  void Swap(RoomPlayerAdd* other);

  // implements Message ----------------------------------------------

  inline RoomPlayerAdd* New() const PROTOBUF_FINAL { return New(NULL); }

  RoomPlayerAdd* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RoomPlayerAdd& from);
  void MergeFrom(const RoomPlayerAdd& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RoomPlayerAdd* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .pb.RoomPlayer player = 1;
  bool has_player() const;
  void clear_player();
  static const int kPlayerFieldNumber = 1;
  const ::pb::RoomPlayer& player() const;
  ::pb::RoomPlayer* mutable_player();
  ::pb::RoomPlayer* release_player();
  void set_allocated_player(::pb::RoomPlayer* player);

  // @@protoc_insertion_point(class_scope:pb.RoomPlayerAdd)
 private:
  void set_has_player();
  void clear_has_player();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::pb::RoomPlayer* player_;
  friend struct  protobuf_game_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RoomPlayerRemove : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.RoomPlayerRemove) */ {
 public:
  RoomPlayerRemove();
  virtual ~RoomPlayerRemove();

  RoomPlayerRemove(const RoomPlayerRemove& from);

  inline RoomPlayerRemove& operator=(const RoomPlayerRemove& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoomPlayerRemove& default_instance();

  static inline const RoomPlayerRemove* internal_default_instance() {
    return reinterpret_cast<const RoomPlayerRemove*>(
               &_RoomPlayerRemove_default_instance_);
  }

  void Swap(RoomPlayerRemove* other);

  // implements Message ----------------------------------------------

  inline RoomPlayerRemove* New() const PROTOBUF_FINAL { return New(NULL); }

  RoomPlayerRemove* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RoomPlayerRemove& from);
  void MergeFrom(const RoomPlayerRemove& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RoomPlayerRemove* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.RoomPlayerRemove)
 private:
  void set_has_id();
  void clear_has_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  friend struct  protobuf_game_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Frame : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.Frame) */ {
 public:
  Frame();
  virtual ~Frame();

  Frame(const Frame& from);

  inline Frame& operator=(const Frame& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Frame& default_instance();

  static inline const Frame* internal_default_instance() {
    return reinterpret_cast<const Frame*>(
               &_Frame_default_instance_);
  }

  void Swap(Frame* other);

  // implements Message ----------------------------------------------

  inline Frame* New() const PROTOBUF_FINAL { return New(NULL); }

  Frame* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Frame& from);
  void MergeFrom(const Frame& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Frame* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes data = 2;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 2;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // required uint32 cmd = 1;
  bool has_cmd() const;
  void clear_cmd();
  static const int kCmdFieldNumber = 1;
  ::google::protobuf::uint32 cmd() const;
  void set_cmd(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.Frame)
 private:
  void set_has_cmd();
  void clear_has_cmd();
  void set_has_data();
  void clear_has_data();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  ::google::protobuf::uint32 cmd_;
  friend struct  protobuf_game_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RoomFrameNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.RoomFrameNotify) */ {
 public:
  RoomFrameNotify();
  virtual ~RoomFrameNotify();

  RoomFrameNotify(const RoomFrameNotify& from);

  inline RoomFrameNotify& operator=(const RoomFrameNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoomFrameNotify& default_instance();

  static inline const RoomFrameNotify* internal_default_instance() {
    return reinterpret_cast<const RoomFrameNotify*>(
               &_RoomFrameNotify_default_instance_);
  }

  void Swap(RoomFrameNotify* other);

  // implements Message ----------------------------------------------

  inline RoomFrameNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  RoomFrameNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RoomFrameNotify& from);
  void MergeFrom(const RoomFrameNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RoomFrameNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.Frame list = 2;
  int list_size() const;
  void clear_list();
  static const int kListFieldNumber = 2;
  const ::pb::Frame& list(int index) const;
  ::pb::Frame* mutable_list(int index);
  ::pb::Frame* add_list();
  ::google::protobuf::RepeatedPtrField< ::pb::Frame >*
      mutable_list();
  const ::google::protobuf::RepeatedPtrField< ::pb::Frame >&
      list() const;

  // required uint32 frame = 1;
  bool has_frame() const;
  void clear_frame();
  static const int kFrameFieldNumber = 1;
  ::google::protobuf::uint32 frame() const;
  void set_frame(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.RoomFrameNotify)
 private:
  void set_has_frame();
  void clear_has_frame();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::Frame > list_;
  ::google::protobuf::uint32 frame_;
  friend struct  protobuf_game_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RoomLadderNotify_Item : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.RoomLadderNotify.Item) */ {
 public:
  RoomLadderNotify_Item();
  virtual ~RoomLadderNotify_Item();

  RoomLadderNotify_Item(const RoomLadderNotify_Item& from);

  inline RoomLadderNotify_Item& operator=(const RoomLadderNotify_Item& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoomLadderNotify_Item& default_instance();

  static inline const RoomLadderNotify_Item* internal_default_instance() {
    return reinterpret_cast<const RoomLadderNotify_Item*>(
               &_RoomLadderNotify_Item_default_instance_);
  }

  void Swap(RoomLadderNotify_Item* other);

  // implements Message ----------------------------------------------

  inline RoomLadderNotify_Item* New() const PROTOBUF_FINAL { return New(NULL); }

  RoomLadderNotify_Item* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RoomLadderNotify_Item& from);
  void MergeFrom(const RoomLadderNotify_Item& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RoomLadderNotify_Item* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // required int32 score = 2;
  bool has_score() const;
  void clear_score();
  static const int kScoreFieldNumber = 2;
  ::google::protobuf::int32 score() const;
  void set_score(::google::protobuf::int32 value);

  // required uint32 kill_times = 3;
  bool has_kill_times() const;
  void clear_kill_times();
  static const int kKillTimesFieldNumber = 3;
  ::google::protobuf::uint32 kill_times() const;
  void set_kill_times(::google::protobuf::uint32 value);

  // required uint32 dead_times = 4;
  bool has_dead_times() const;
  void clear_dead_times();
  static const int kDeadTimesFieldNumber = 4;
  ::google::protobuf::uint32 dead_times() const;
  void set_dead_times(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.RoomLadderNotify.Item)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_score();
  void clear_has_score();
  void set_has_kill_times();
  void clear_has_kill_times();
  void set_has_dead_times();
  void clear_has_dead_times();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::int32 score_;
  ::google::protobuf::uint32 kill_times_;
  ::google::protobuf::uint32 dead_times_;
  friend struct  protobuf_game_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RoomLadderNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.RoomLadderNotify) */ {
 public:
  RoomLadderNotify();
  virtual ~RoomLadderNotify();

  RoomLadderNotify(const RoomLadderNotify& from);

  inline RoomLadderNotify& operator=(const RoomLadderNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoomLadderNotify& default_instance();

  static inline const RoomLadderNotify* internal_default_instance() {
    return reinterpret_cast<const RoomLadderNotify*>(
               &_RoomLadderNotify_default_instance_);
  }

  void Swap(RoomLadderNotify* other);

  // implements Message ----------------------------------------------

  inline RoomLadderNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  RoomLadderNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RoomLadderNotify& from);
  void MergeFrom(const RoomLadderNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RoomLadderNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef RoomLadderNotify_Item Item;

  // accessors -------------------------------------------------------

  // repeated .pb.RoomLadderNotify.Item items = 1;
  int items_size() const;
  void clear_items();
  static const int kItemsFieldNumber = 1;
  const ::pb::RoomLadderNotify_Item& items(int index) const;
  ::pb::RoomLadderNotify_Item* mutable_items(int index);
  ::pb::RoomLadderNotify_Item* add_items();
  ::google::protobuf::RepeatedPtrField< ::pb::RoomLadderNotify_Item >*
      mutable_items();
  const ::google::protobuf::RepeatedPtrField< ::pb::RoomLadderNotify_Item >&
      items() const;

  // @@protoc_insertion_point(class_scope:pb.RoomLadderNotify)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::RoomLadderNotify_Item > items_;
  friend struct  protobuf_game_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RoomPlayerMoveReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.RoomPlayerMoveReq) */ {
 public:
  RoomPlayerMoveReq();
  virtual ~RoomPlayerMoveReq();

  RoomPlayerMoveReq(const RoomPlayerMoveReq& from);

  inline RoomPlayerMoveReq& operator=(const RoomPlayerMoveReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoomPlayerMoveReq& default_instance();

  static inline const RoomPlayerMoveReq* internal_default_instance() {
    return reinterpret_cast<const RoomPlayerMoveReq*>(
               &_RoomPlayerMoveReq_default_instance_);
  }

  void Swap(RoomPlayerMoveReq* other);

  // implements Message ----------------------------------------------

  inline RoomPlayerMoveReq* New() const PROTOBUF_FINAL { return New(NULL); }

  RoomPlayerMoveReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RoomPlayerMoveReq& from);
  void MergeFrom(const RoomPlayerMoveReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RoomPlayerMoveReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .pb.Vector pos = 1;
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 1;
  const ::pb::Vector& pos() const;
  ::pb::Vector* mutable_pos();
  ::pb::Vector* release_pos();
  void set_allocated_pos(::pb::Vector* pos);

  // required .pb.Vector dir = 2;
  bool has_dir() const;
  void clear_dir();
  static const int kDirFieldNumber = 2;
  const ::pb::Vector& dir() const;
  ::pb::Vector* mutable_dir();
  ::pb::Vector* release_dir();
  void set_allocated_dir(::pb::Vector* dir);

  // @@protoc_insertion_point(class_scope:pb.RoomPlayerMoveReq)
 private:
  void set_has_pos();
  void clear_has_pos();
  void set_has_dir();
  void clear_has_dir();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::pb::Vector* pos_;
  ::pb::Vector* dir_;
  friend struct  protobuf_game_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RoomPlayerDragRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.RoomPlayerDragRes) */ {
 public:
  RoomPlayerDragRes();
  virtual ~RoomPlayerDragRes();

  RoomPlayerDragRes(const RoomPlayerDragRes& from);

  inline RoomPlayerDragRes& operator=(const RoomPlayerDragRes& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoomPlayerDragRes& default_instance();

  static inline const RoomPlayerDragRes* internal_default_instance() {
    return reinterpret_cast<const RoomPlayerDragRes*>(
               &_RoomPlayerDragRes_default_instance_);
  }

  void Swap(RoomPlayerDragRes* other);

  // implements Message ----------------------------------------------

  inline RoomPlayerDragRes* New() const PROTOBUF_FINAL { return New(NULL); }

  RoomPlayerDragRes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RoomPlayerDragRes& from);
  void MergeFrom(const RoomPlayerDragRes& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RoomPlayerDragRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .pb.Vector pos = 1;
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 1;
  const ::pb::Vector& pos() const;
  ::pb::Vector* mutable_pos();
  ::pb::Vector* release_pos();
  void set_allocated_pos(::pb::Vector* pos);

  // required .pb.Vector dir = 2;
  bool has_dir() const;
  void clear_dir();
  static const int kDirFieldNumber = 2;
  const ::pb::Vector& dir() const;
  ::pb::Vector* mutable_dir();
  ::pb::Vector* release_dir();
  void set_allocated_dir(::pb::Vector* dir);

  // @@protoc_insertion_point(class_scope:pb.RoomPlayerDragRes)
 private:
  void set_has_pos();
  void clear_has_pos();
  void set_has_dir();
  void clear_has_dir();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::pb::Vector* pos_;
  ::pb::Vector* dir_;
  friend struct  protobuf_game_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RoomPlayerDragEndReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.RoomPlayerDragEndReq) */ {
 public:
  RoomPlayerDragEndReq();
  virtual ~RoomPlayerDragEndReq();

  RoomPlayerDragEndReq(const RoomPlayerDragEndReq& from);

  inline RoomPlayerDragEndReq& operator=(const RoomPlayerDragEndReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoomPlayerDragEndReq& default_instance();

  static inline const RoomPlayerDragEndReq* internal_default_instance() {
    return reinterpret_cast<const RoomPlayerDragEndReq*>(
               &_RoomPlayerDragEndReq_default_instance_);
  }

  void Swap(RoomPlayerDragEndReq* other);

  // implements Message ----------------------------------------------

  inline RoomPlayerDragEndReq* New() const PROTOBUF_FINAL { return New(NULL); }

  RoomPlayerDragEndReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RoomPlayerDragEndReq& from);
  void MergeFrom(const RoomPlayerDragEndReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RoomPlayerDragEndReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:pb.RoomPlayerDragEndReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct  protobuf_game_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RoomPlayerReliveReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.RoomPlayerReliveReq) */ {
 public:
  RoomPlayerReliveReq();
  virtual ~RoomPlayerReliveReq();

  RoomPlayerReliveReq(const RoomPlayerReliveReq& from);

  inline RoomPlayerReliveReq& operator=(const RoomPlayerReliveReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoomPlayerReliveReq& default_instance();

  static inline const RoomPlayerReliveReq* internal_default_instance() {
    return reinterpret_cast<const RoomPlayerReliveReq*>(
               &_RoomPlayerReliveReq_default_instance_);
  }

  void Swap(RoomPlayerReliveReq* other);

  // implements Message ----------------------------------------------

  inline RoomPlayerReliveReq* New() const PROTOBUF_FINAL { return New(NULL); }

  RoomPlayerReliveReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RoomPlayerReliveReq& from);
  void MergeFrom(const RoomPlayerReliveReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RoomPlayerReliveReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 job = 1;
  bool has_job() const;
  void clear_job();
  static const int kJobFieldNumber = 1;
  ::google::protobuf::uint32 job() const;
  void set_job(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.RoomPlayerReliveReq)
 private:
  void set_has_job();
  void clear_has_job();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 job_;
  friend struct  protobuf_game_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RoomPlayerStopReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.RoomPlayerStopReq) */ {
 public:
  RoomPlayerStopReq();
  virtual ~RoomPlayerStopReq();

  RoomPlayerStopReq(const RoomPlayerStopReq& from);

  inline RoomPlayerStopReq& operator=(const RoomPlayerStopReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoomPlayerStopReq& default_instance();

  static inline const RoomPlayerStopReq* internal_default_instance() {
    return reinterpret_cast<const RoomPlayerStopReq*>(
               &_RoomPlayerStopReq_default_instance_);
  }

  void Swap(RoomPlayerStopReq* other);

  // implements Message ----------------------------------------------

  inline RoomPlayerStopReq* New() const PROTOBUF_FINAL { return New(NULL); }

  RoomPlayerStopReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RoomPlayerStopReq& from);
  void MergeFrom(const RoomPlayerStopReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RoomPlayerStopReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .pb.Vector pos = 1;
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 1;
  const ::pb::Vector& pos() const;
  ::pb::Vector* mutable_pos();
  ::pb::Vector* release_pos();
  void set_allocated_pos(::pb::Vector* pos);

  // required .pb.Vector dir = 2;
  bool has_dir() const;
  void clear_dir();
  static const int kDirFieldNumber = 2;
  const ::pb::Vector& dir() const;
  ::pb::Vector* mutable_dir();
  ::pb::Vector* release_dir();
  void set_allocated_dir(::pb::Vector* dir);

  // @@protoc_insertion_point(class_scope:pb.RoomPlayerStopReq)
 private:
  void set_has_pos();
  void clear_has_pos();
  void set_has_dir();
  void clear_has_dir();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::pb::Vector* pos_;
  ::pb::Vector* dir_;
  friend struct  protobuf_game_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SpellStartReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.SpellStartReq) */ {
 public:
  SpellStartReq();
  virtual ~SpellStartReq();

  SpellStartReq(const SpellStartReq& from);

  inline SpellStartReq& operator=(const SpellStartReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SpellStartReq& default_instance();

  static inline const SpellStartReq* internal_default_instance() {
    return reinterpret_cast<const SpellStartReq*>(
               &_SpellStartReq_default_instance_);
  }

  void Swap(SpellStartReq* other);

  // implements Message ----------------------------------------------

  inline SpellStartReq* New() const PROTOBUF_FINAL { return New(NULL); }

  SpellStartReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SpellStartReq& from);
  void MergeFrom(const SpellStartReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SpellStartReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .pb.Vector pos = 2;
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 2;
  const ::pb::Vector& pos() const;
  ::pb::Vector* mutable_pos();
  ::pb::Vector* release_pos();
  void set_allocated_pos(::pb::Vector* pos);

  // required .pb.Vector dir = 3;
  bool has_dir() const;
  void clear_dir();
  static const int kDirFieldNumber = 3;
  const ::pb::Vector& dir() const;
  ::pb::Vector* mutable_dir();
  ::pb::Vector* release_dir();
  void set_allocated_dir(::pb::Vector* dir);

  // required uint32 xml_id = 1;
  bool has_xml_id() const;
  void clear_xml_id();
  static const int kXmlIdFieldNumber = 1;
  ::google::protobuf::uint32 xml_id() const;
  void set_xml_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.SpellStartReq)
 private:
  void set_has_xml_id();
  void clear_has_xml_id();
  void set_has_pos();
  void clear_has_pos();
  void set_has_dir();
  void clear_has_dir();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::pb::Vector* pos_;
  ::pb::Vector* dir_;
  ::google::protobuf::uint32 xml_id_;
  friend struct  protobuf_game_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SpellLevelUpReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.SpellLevelUpReq) */ {
 public:
  SpellLevelUpReq();
  virtual ~SpellLevelUpReq();

  SpellLevelUpReq(const SpellLevelUpReq& from);

  inline SpellLevelUpReq& operator=(const SpellLevelUpReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SpellLevelUpReq& default_instance();

  static inline const SpellLevelUpReq* internal_default_instance() {
    return reinterpret_cast<const SpellLevelUpReq*>(
               &_SpellLevelUpReq_default_instance_);
  }

  void Swap(SpellLevelUpReq* other);

  // implements Message ----------------------------------------------

  inline SpellLevelUpReq* New() const PROTOBUF_FINAL { return New(NULL); }

  SpellLevelUpReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SpellLevelUpReq& from);
  void MergeFrom(const SpellLevelUpReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SpellLevelUpReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 xml_id = 1;
  bool has_xml_id() const;
  void clear_xml_id();
  static const int kXmlIdFieldNumber = 1;
  ::google::protobuf::uint32 xml_id() const;
  void set_xml_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.SpellLevelUpReq)
 private:
  void set_has_xml_id();
  void clear_has_xml_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 xml_id_;
  friend struct  protobuf_game_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class KillNotify_KillInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.KillNotify.KillInfo) */ {
 public:
  KillNotify_KillInfo();
  virtual ~KillNotify_KillInfo();

  KillNotify_KillInfo(const KillNotify_KillInfo& from);

  inline KillNotify_KillInfo& operator=(const KillNotify_KillInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const KillNotify_KillInfo& default_instance();

  static inline const KillNotify_KillInfo* internal_default_instance() {
    return reinterpret_cast<const KillNotify_KillInfo*>(
               &_KillNotify_KillInfo_default_instance_);
  }

  void Swap(KillNotify_KillInfo* other);

  // implements Message ----------------------------------------------

  inline KillNotify_KillInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  KillNotify_KillInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const KillNotify_KillInfo& from);
  void MergeFrom(const KillNotify_KillInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(KillNotify_KillInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 catalog = 1;
  bool has_catalog() const;
  void clear_catalog();
  static const int kCatalogFieldNumber = 1;
  ::google::protobuf::uint32 catalog() const;
  void set_catalog(::google::protobuf::uint32 value);

  // required uint32 number = 2;
  bool has_number() const;
  void clear_number();
  static const int kNumberFieldNumber = 2;
  ::google::protobuf::uint32 number() const;
  void set_number(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.KillNotify.KillInfo)
 private:
  void set_has_catalog();
  void clear_has_catalog();
  void set_has_number();
  void clear_has_number();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 catalog_;
  ::google::protobuf::uint32 number_;
  friend struct  protobuf_game_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class KillNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.KillNotify) */ {
 public:
  KillNotify();
  virtual ~KillNotify();

  KillNotify(const KillNotify& from);

  inline KillNotify& operator=(const KillNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const KillNotify& default_instance();

  static inline const KillNotify* internal_default_instance() {
    return reinterpret_cast<const KillNotify*>(
               &_KillNotify_default_instance_);
  }

  void Swap(KillNotify* other);

  // implements Message ----------------------------------------------

  inline KillNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  KillNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const KillNotify& from);
  void MergeFrom(const KillNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(KillNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef KillNotify_KillInfo KillInfo;

  // accessors -------------------------------------------------------

  // repeated .pb.KillNotify.KillInfo info = 3;
  int info_size() const;
  void clear_info();
  static const int kInfoFieldNumber = 3;
  const ::pb::KillNotify_KillInfo& info(int index) const;
  ::pb::KillNotify_KillInfo* mutable_info(int index);
  ::pb::KillNotify_KillInfo* add_info();
  ::google::protobuf::RepeatedPtrField< ::pb::KillNotify_KillInfo >*
      mutable_info();
  const ::google::protobuf::RepeatedPtrField< ::pb::KillNotify_KillInfo >&
      info() const;

  // required uint32 player_id = 1;
  bool has_player_id() const;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  ::google::protobuf::uint32 player_id() const;
  void set_player_id(::google::protobuf::uint32 value);

  // required uint32 killed_id = 2;
  bool has_killed_id() const;
  void clear_killed_id();
  static const int kKilledIdFieldNumber = 2;
  ::google::protobuf::uint32 killed_id() const;
  void set_killed_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.KillNotify)
 private:
  void set_has_player_id();
  void clear_has_player_id();
  void set_has_killed_id();
  void clear_has_killed_id();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::KillNotify_KillInfo > info_;
  ::google::protobuf::uint32 player_id_;
  ::google::protobuf::uint32 killed_id_;
  friend struct  protobuf_game_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RoomPingReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.RoomPingReq) */ {
 public:
  RoomPingReq();
  virtual ~RoomPingReq();

  RoomPingReq(const RoomPingReq& from);

  inline RoomPingReq& operator=(const RoomPingReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoomPingReq& default_instance();

  static inline const RoomPingReq* internal_default_instance() {
    return reinterpret_cast<const RoomPingReq*>(
               &_RoomPingReq_default_instance_);
  }

  void Swap(RoomPingReq* other);

  // implements Message ----------------------------------------------

  inline RoomPingReq* New() const PROTOBUF_FINAL { return New(NULL); }

  RoomPingReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RoomPingReq& from);
  void MergeFrom(const RoomPingReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RoomPingReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:pb.RoomPingReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct  protobuf_game_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RoomPingRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.RoomPingRes) */ {
 public:
  RoomPingRes();
  virtual ~RoomPingRes();

  RoomPingRes(const RoomPingRes& from);

  inline RoomPingRes& operator=(const RoomPingRes& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoomPingRes& default_instance();

  static inline const RoomPingRes* internal_default_instance() {
    return reinterpret_cast<const RoomPingRes*>(
               &_RoomPingRes_default_instance_);
  }

  void Swap(RoomPingRes* other);

  // implements Message ----------------------------------------------

  inline RoomPingRes* New() const PROTOBUF_FINAL { return New(NULL); }

  RoomPingRes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RoomPingRes& from);
  void MergeFrom(const RoomPingRes& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RoomPingRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 cur_frame = 1;
  bool has_cur_frame() const;
  void clear_cur_frame();
  static const int kCurFrameFieldNumber = 1;
  ::google::protobuf::uint32 cur_frame() const;
  void set_cur_frame(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.RoomPingRes)
 private:
  void set_has_cur_frame();
  void clear_has_cur_frame();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 cur_frame_;
  friend struct  protobuf_game_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FrameMove : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.FrameMove) */ {
 public:
  FrameMove();
  virtual ~FrameMove();

  FrameMove(const FrameMove& from);

  inline FrameMove& operator=(const FrameMove& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FrameMove& default_instance();

  static inline const FrameMove* internal_default_instance() {
    return reinterpret_cast<const FrameMove*>(
               &_FrameMove_default_instance_);
  }

  void Swap(FrameMove* other);

  // implements Message ----------------------------------------------

  inline FrameMove* New() const PROTOBUF_FINAL { return New(NULL); }

  FrameMove* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FrameMove& from);
  void MergeFrom(const FrameMove& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FrameMove* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .pb.Vector pos = 2;
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 2;
  const ::pb::Vector& pos() const;
  ::pb::Vector* mutable_pos();
  ::pb::Vector* release_pos();
  void set_allocated_pos(::pb::Vector* pos);

  // required .pb.Vector dir = 3;
  bool has_dir() const;
  void clear_dir();
  static const int kDirFieldNumber = 3;
  const ::pb::Vector& dir() const;
  ::pb::Vector* mutable_dir();
  ::pb::Vector* release_dir();
  void set_allocated_dir(::pb::Vector* dir);

  // required uint32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.FrameMove)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_pos();
  void clear_has_pos();
  void set_has_dir();
  void clear_has_dir();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::pb::Vector* pos_;
  ::pb::Vector* dir_;
  ::google::protobuf::uint32 id_;
  friend struct  protobuf_game_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FrameMoveTest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.FrameMoveTest) */ {
 public:
  FrameMoveTest();
  virtual ~FrameMoveTest();

  FrameMoveTest(const FrameMoveTest& from);

  inline FrameMoveTest& operator=(const FrameMoveTest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FrameMoveTest& default_instance();

  static inline const FrameMoveTest* internal_default_instance() {
    return reinterpret_cast<const FrameMoveTest*>(
               &_FrameMoveTest_default_instance_);
  }

  void Swap(FrameMoveTest* other);

  // implements Message ----------------------------------------------

  inline FrameMoveTest* New() const PROTOBUF_FINAL { return New(NULL); }

  FrameMoveTest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FrameMoveTest& from);
  void MergeFrom(const FrameMoveTest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FrameMoveTest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .pb.Vector pos = 2;
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 2;
  const ::pb::Vector& pos() const;
  ::pb::Vector* mutable_pos();
  ::pb::Vector* release_pos();
  void set_allocated_pos(::pb::Vector* pos);

  // required .pb.Vector dir = 3;
  bool has_dir() const;
  void clear_dir();
  static const int kDirFieldNumber = 3;
  const ::pb::Vector& dir() const;
  ::pb::Vector* mutable_dir();
  ::pb::Vector* release_dir();
  void set_allocated_dir(::pb::Vector* dir);

  // required .pb.Vector pre_pos = 4;
  bool has_pre_pos() const;
  void clear_pre_pos();
  static const int kPrePosFieldNumber = 4;
  const ::pb::Vector& pre_pos() const;
  ::pb::Vector* mutable_pre_pos();
  ::pb::Vector* release_pre_pos();
  void set_allocated_pre_pos(::pb::Vector* pre_pos);

  // required uint32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.FrameMoveTest)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_pos();
  void clear_has_pos();
  void set_has_dir();
  void clear_has_dir();
  void set_has_pre_pos();
  void clear_has_pre_pos();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::pb::Vector* pos_;
  ::pb::Vector* dir_;
  ::pb::Vector* pre_pos_;
  ::google::protobuf::uint32 id_;
  friend struct  protobuf_game_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FrameStop : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.FrameStop) */ {
 public:
  FrameStop();
  virtual ~FrameStop();

  FrameStop(const FrameStop& from);

  inline FrameStop& operator=(const FrameStop& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FrameStop& default_instance();

  static inline const FrameStop* internal_default_instance() {
    return reinterpret_cast<const FrameStop*>(
               &_FrameStop_default_instance_);
  }

  void Swap(FrameStop* other);

  // implements Message ----------------------------------------------

  inline FrameStop* New() const PROTOBUF_FINAL { return New(NULL); }

  FrameStop* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FrameStop& from);
  void MergeFrom(const FrameStop& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FrameStop* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .pb.Vector pos = 2;
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 2;
  const ::pb::Vector& pos() const;
  ::pb::Vector* mutable_pos();
  ::pb::Vector* release_pos();
  void set_allocated_pos(::pb::Vector* pos);

  // required .pb.Vector dir = 3;
  bool has_dir() const;
  void clear_dir();
  static const int kDirFieldNumber = 3;
  const ::pb::Vector& dir() const;
  ::pb::Vector* mutable_dir();
  ::pb::Vector* release_dir();
  void set_allocated_dir(::pb::Vector* dir);

  // required uint32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.FrameStop)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_pos();
  void clear_has_pos();
  void set_has_dir();
  void clear_has_dir();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::pb::Vector* pos_;
  ::pb::Vector* dir_;
  ::google::protobuf::uint32 id_;
  friend struct  protobuf_game_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FrameDeath : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.FrameDeath) */ {
 public:
  FrameDeath();
  virtual ~FrameDeath();

  FrameDeath(const FrameDeath& from);

  inline FrameDeath& operator=(const FrameDeath& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FrameDeath& default_instance();

  static inline const FrameDeath* internal_default_instance() {
    return reinterpret_cast<const FrameDeath*>(
               &_FrameDeath_default_instance_);
  }

  void Swap(FrameDeath* other);

  // implements Message ----------------------------------------------

  inline FrameDeath* New() const PROTOBUF_FINAL { return New(NULL); }

  FrameDeath* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FrameDeath& from);
  void MergeFrom(const FrameDeath& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FrameDeath* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // required uint32 murderer_id = 2;
  bool has_murderer_id() const;
  void clear_murderer_id();
  static const int kMurdererIdFieldNumber = 2;
  ::google::protobuf::uint32 murderer_id() const;
  void set_murderer_id(::google::protobuf::uint32 value);

  // required uint32 murderer_cur_socre = 3;
  bool has_murderer_cur_socre() const;
  void clear_murderer_cur_socre();
  static const int kMurdererCurSocreFieldNumber = 3;
  ::google::protobuf::uint32 murderer_cur_socre() const;
  void set_murderer_cur_socre(::google::protobuf::uint32 value);

  // required uint32 owner_cur_socre = 4;
  bool has_owner_cur_socre() const;
  void clear_owner_cur_socre();
  static const int kOwnerCurSocreFieldNumber = 4;
  ::google::protobuf::uint32 owner_cur_socre() const;
  void set_owner_cur_socre(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.FrameDeath)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_murderer_id();
  void clear_has_murderer_id();
  void set_has_murderer_cur_socre();
  void clear_has_murderer_cur_socre();
  void set_has_owner_cur_socre();
  void clear_has_owner_cur_socre();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 murderer_id_;
  ::google::protobuf::uint32 murderer_cur_socre_;
  ::google::protobuf::uint32 owner_cur_socre_;
  friend struct  protobuf_game_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FrameRelive : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.FrameRelive) */ {
 public:
  FrameRelive();
  virtual ~FrameRelive();

  FrameRelive(const FrameRelive& from);

  inline FrameRelive& operator=(const FrameRelive& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FrameRelive& default_instance();

  static inline const FrameRelive* internal_default_instance() {
    return reinterpret_cast<const FrameRelive*>(
               &_FrameRelive_default_instance_);
  }

  void Swap(FrameRelive* other);

  // implements Message ----------------------------------------------

  inline FrameRelive* New() const PROTOBUF_FINAL { return New(NULL); }

  FrameRelive* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FrameRelive& from);
  void MergeFrom(const FrameRelive& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FrameRelive* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .pb.RoomPlayer player = 1;
  bool has_player() const;
  void clear_player();
  static const int kPlayerFieldNumber = 1;
  const ::pb::RoomPlayer& player() const;
  ::pb::RoomPlayer* mutable_player();
  ::pb::RoomPlayer* release_player();
  void set_allocated_player(::pb::RoomPlayer* player);

  // @@protoc_insertion_point(class_scope:pb.FrameRelive)
 private:
  void set_has_player();
  void clear_has_player();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::pb::RoomPlayer* player_;
  friend struct  protobuf_game_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FrameActionStart : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.FrameActionStart) */ {
 public:
  FrameActionStart();
  virtual ~FrameActionStart();

  FrameActionStart(const FrameActionStart& from);

  inline FrameActionStart& operator=(const FrameActionStart& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FrameActionStart& default_instance();

  static inline const FrameActionStart* internal_default_instance() {
    return reinterpret_cast<const FrameActionStart*>(
               &_FrameActionStart_default_instance_);
  }

  void Swap(FrameActionStart* other);

  // implements Message ----------------------------------------------

  inline FrameActionStart* New() const PROTOBUF_FINAL { return New(NULL); }

  FrameActionStart* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FrameActionStart& from);
  void MergeFrom(const FrameActionStart& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FrameActionStart* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 player_id = 1;
  bool has_player_id() const;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  ::google::protobuf::uint32 player_id() const;
  void set_player_id(::google::protobuf::uint32 value);

  // required uint32 spell_id = 2;
  bool has_spell_id() const;
  void clear_spell_id();
  static const int kSpellIdFieldNumber = 2;
  ::google::protobuf::uint32 spell_id() const;
  void set_spell_id(::google::protobuf::uint32 value);

  // required uint32 action_id = 3;
  bool has_action_id() const;
  void clear_action_id();
  static const int kActionIdFieldNumber = 3;
  ::google::protobuf::uint32 action_id() const;
  void set_action_id(::google::protobuf::uint32 value);

  // required uint32 left_cd = 4;
  bool has_left_cd() const;
  void clear_left_cd();
  static const int kLeftCdFieldNumber = 4;
  ::google::protobuf::uint32 left_cd() const;
  void set_left_cd(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.FrameActionStart)
 private:
  void set_has_player_id();
  void clear_has_player_id();
  void set_has_spell_id();
  void clear_has_spell_id();
  void set_has_action_id();
  void clear_has_action_id();
  void set_has_left_cd();
  void clear_has_left_cd();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 player_id_;
  ::google::protobuf::uint32 spell_id_;
  ::google::protobuf::uint32 action_id_;
  ::google::protobuf::uint32 left_cd_;
  friend struct  protobuf_game_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FrameStartBuff : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.FrameStartBuff) */ {
 public:
  FrameStartBuff();
  virtual ~FrameStartBuff();

  FrameStartBuff(const FrameStartBuff& from);

  inline FrameStartBuff& operator=(const FrameStartBuff& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FrameStartBuff& default_instance();

  static inline const FrameStartBuff* internal_default_instance() {
    return reinterpret_cast<const FrameStartBuff*>(
               &_FrameStartBuff_default_instance_);
  }

  void Swap(FrameStartBuff* other);

  // implements Message ----------------------------------------------

  inline FrameStartBuff* New() const PROTOBUF_FINAL { return New(NULL); }

  FrameStartBuff* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FrameStartBuff& from);
  void MergeFrom(const FrameStartBuff& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FrameStartBuff* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .pb.RoomBuff buff = 1;
  bool has_buff() const;
  void clear_buff();
  static const int kBuffFieldNumber = 1;
  const ::pb::RoomBuff& buff() const;
  ::pb::RoomBuff* mutable_buff();
  ::pb::RoomBuff* release_buff();
  void set_allocated_buff(::pb::RoomBuff* buff);

  // @@protoc_insertion_point(class_scope:pb.FrameStartBuff)
 private:
  void set_has_buff();
  void clear_has_buff();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::pb::RoomBuff* buff_;
  friend struct  protobuf_game_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FrameRemoveBuff : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.FrameRemoveBuff) */ {
 public:
  FrameRemoveBuff();
  virtual ~FrameRemoveBuff();

  FrameRemoveBuff(const FrameRemoveBuff& from);

  inline FrameRemoveBuff& operator=(const FrameRemoveBuff& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FrameRemoveBuff& default_instance();

  static inline const FrameRemoveBuff* internal_default_instance() {
    return reinterpret_cast<const FrameRemoveBuff*>(
               &_FrameRemoveBuff_default_instance_);
  }

  void Swap(FrameRemoveBuff* other);

  // implements Message ----------------------------------------------

  inline FrameRemoveBuff* New() const PROTOBUF_FINAL { return New(NULL); }

  FrameRemoveBuff* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FrameRemoveBuff& from);
  void MergeFrom(const FrameRemoveBuff& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FrameRemoveBuff* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string buff_id = 2;
  bool has_buff_id() const;
  void clear_buff_id();
  static const int kBuffIdFieldNumber = 2;
  const ::std::string& buff_id() const;
  void set_buff_id(const ::std::string& value);
  #if LANG_CXX11
  void set_buff_id(::std::string&& value);
  #endif
  void set_buff_id(const char* value);
  void set_buff_id(const char* value, size_t size);
  ::std::string* mutable_buff_id();
  ::std::string* release_buff_id();
  void set_allocated_buff_id(::std::string* buff_id);

  // optional uint32 player_id = 1;
  bool has_player_id() const;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  ::google::protobuf::uint32 player_id() const;
  void set_player_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.FrameRemoveBuff)
 private:
  void set_has_player_id();
  void clear_has_player_id();
  void set_has_buff_id();
  void clear_has_buff_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr buff_id_;
  ::google::protobuf::uint32 player_id_;
  friend struct  protobuf_game_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FrameSpellState : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.FrameSpellState) */ {
 public:
  FrameSpellState();
  virtual ~FrameSpellState();

  FrameSpellState(const FrameSpellState& from);

  inline FrameSpellState& operator=(const FrameSpellState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FrameSpellState& default_instance();

  static inline const FrameSpellState* internal_default_instance() {
    return reinterpret_cast<const FrameSpellState*>(
               &_FrameSpellState_default_instance_);
  }

  void Swap(FrameSpellState* other);

  // implements Message ----------------------------------------------

  inline FrameSpellState* New() const PROTOBUF_FINAL { return New(NULL); }

  FrameSpellState* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FrameSpellState& from);
  void MergeFrom(const FrameSpellState& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FrameSpellState* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string action_id = 2;
  bool has_action_id() const;
  void clear_action_id();
  static const int kActionIdFieldNumber = 2;
  const ::std::string& action_id() const;
  void set_action_id(const ::std::string& value);
  #if LANG_CXX11
  void set_action_id(::std::string&& value);
  #endif
  void set_action_id(const char* value);
  void set_action_id(const char* value, size_t size);
  ::std::string* mutable_action_id();
  ::std::string* release_action_id();
  void set_allocated_action_id(::std::string* action_id);

  // required string cur_gen_id = 4;
  bool has_cur_gen_id() const;
  void clear_cur_gen_id();
  static const int kCurGenIdFieldNumber = 4;
  const ::std::string& cur_gen_id() const;
  void set_cur_gen_id(const ::std::string& value);
  #if LANG_CXX11
  void set_cur_gen_id(::std::string&& value);
  #endif
  void set_cur_gen_id(const char* value);
  void set_cur_gen_id(const char* value, size_t size);
  ::std::string* mutable_cur_gen_id();
  ::std::string* release_cur_gen_id();
  void set_allocated_cur_gen_id(::std::string* cur_gen_id);

  // required uint32 player_id = 1;
  bool has_player_id() const;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  ::google::protobuf::uint32 player_id() const;
  void set_player_id(::google::protobuf::uint32 value);

  // required uint32 state = 3;
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 3;
  ::google::protobuf::uint32 state() const;
  void set_state(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.FrameSpellState)
 private:
  void set_has_player_id();
  void clear_has_player_id();
  void set_has_action_id();
  void clear_has_action_id();
  void set_has_state();
  void clear_has_state();
  void set_has_cur_gen_id();
  void clear_has_cur_gen_id();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr action_id_;
  ::google::protobuf::internal::ArenaStringPtr cur_gen_id_;
  ::google::protobuf::uint32 player_id_;
  ::google::protobuf::uint32 state_;
  friend struct  protobuf_game_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FrameSpellLevel : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.FrameSpellLevel) */ {
 public:
  FrameSpellLevel();
  virtual ~FrameSpellLevel();

  FrameSpellLevel(const FrameSpellLevel& from);

  inline FrameSpellLevel& operator=(const FrameSpellLevel& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FrameSpellLevel& default_instance();

  static inline const FrameSpellLevel* internal_default_instance() {
    return reinterpret_cast<const FrameSpellLevel*>(
               &_FrameSpellLevel_default_instance_);
  }

  void Swap(FrameSpellLevel* other);

  // implements Message ----------------------------------------------

  inline FrameSpellLevel* New() const PROTOBUF_FINAL { return New(NULL); }

  FrameSpellLevel* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FrameSpellLevel& from);
  void MergeFrom(const FrameSpellLevel& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FrameSpellLevel* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .pb.RoomPlayerSpell spells = 2;
  int spells_size() const;
  void clear_spells();
  static const int kSpellsFieldNumber = 2;
  const ::pb::RoomPlayerSpell& spells(int index) const;
  ::pb::RoomPlayerSpell* mutable_spells(int index);
  ::pb::RoomPlayerSpell* add_spells();
  ::google::protobuf::RepeatedPtrField< ::pb::RoomPlayerSpell >*
      mutable_spells();
  const ::google::protobuf::RepeatedPtrField< ::pb::RoomPlayerSpell >&
      spells() const;

  // required uint32 player_id = 1;
  bool has_player_id() const;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  ::google::protobuf::uint32 player_id() const;
  void set_player_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.FrameSpellLevel)
 private:
  void set_has_player_id();
  void clear_has_player_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::pb::RoomPlayerSpell > spells_;
  ::google::protobuf::uint32 player_id_;
  friend struct  protobuf_game_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FrameSceneItemCreate : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.FrameSceneItemCreate) */ {
 public:
  FrameSceneItemCreate();
  virtual ~FrameSceneItemCreate();

  FrameSceneItemCreate(const FrameSceneItemCreate& from);

  inline FrameSceneItemCreate& operator=(const FrameSceneItemCreate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FrameSceneItemCreate& default_instance();

  static inline const FrameSceneItemCreate* internal_default_instance() {
    return reinterpret_cast<const FrameSceneItemCreate*>(
               &_FrameSceneItemCreate_default_instance_);
  }

  void Swap(FrameSceneItemCreate* other);

  // implements Message ----------------------------------------------

  inline FrameSceneItemCreate* New() const PROTOBUF_FINAL { return New(NULL); }

  FrameSceneItemCreate* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FrameSceneItemCreate& from);
  void MergeFrom(const FrameSceneItemCreate& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FrameSceneItemCreate* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .pb.RoomItem item = 1;
  bool has_item() const;
  void clear_item();
  static const int kItemFieldNumber = 1;
  const ::pb::RoomItem& item() const;
  ::pb::RoomItem* mutable_item();
  ::pb::RoomItem* release_item();
  void set_allocated_item(::pb::RoomItem* item);

  // @@protoc_insertion_point(class_scope:pb.FrameSceneItemCreate)
 private:
  void set_has_item();
  void clear_has_item();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::pb::RoomItem* item_;
  friend struct  protobuf_game_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FrameSceneItemRemove : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.FrameSceneItemRemove) */ {
 public:
  FrameSceneItemRemove();
  virtual ~FrameSceneItemRemove();

  FrameSceneItemRemove(const FrameSceneItemRemove& from);

  inline FrameSceneItemRemove& operator=(const FrameSceneItemRemove& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FrameSceneItemRemove& default_instance();

  static inline const FrameSceneItemRemove* internal_default_instance() {
    return reinterpret_cast<const FrameSceneItemRemove*>(
               &_FrameSceneItemRemove_default_instance_);
  }

  void Swap(FrameSceneItemRemove* other);

  // implements Message ----------------------------------------------

  inline FrameSceneItemRemove* New() const PROTOBUF_FINAL { return New(NULL); }

  FrameSceneItemRemove* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FrameSceneItemRemove& from);
  void MergeFrom(const FrameSceneItemRemove& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FrameSceneItemRemove* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.FrameSceneItemRemove)
 private:
  void set_has_id();
  void clear_has_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  friend struct  protobuf_game_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FrameLevelUp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.FrameLevelUp) */ {
 public:
  FrameLevelUp();
  virtual ~FrameLevelUp();

  FrameLevelUp(const FrameLevelUp& from);

  inline FrameLevelUp& operator=(const FrameLevelUp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FrameLevelUp& default_instance();

  static inline const FrameLevelUp* internal_default_instance() {
    return reinterpret_cast<const FrameLevelUp*>(
               &_FrameLevelUp_default_instance_);
  }

  void Swap(FrameLevelUp* other);

  // implements Message ----------------------------------------------

  inline FrameLevelUp* New() const PROTOBUF_FINAL { return New(NULL); }

  FrameLevelUp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FrameLevelUp& from);
  void MergeFrom(const FrameLevelUp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FrameLevelUp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 player_id = 1;
  bool has_player_id() const;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  ::google::protobuf::uint32 player_id() const;
  void set_player_id(::google::protobuf::uint32 value);

  // required uint32 player_level = 2;
  bool has_player_level() const;
  void clear_player_level();
  static const int kPlayerLevelFieldNumber = 2;
  ::google::protobuf::uint32 player_level() const;
  void set_player_level(::google::protobuf::uint32 value);

  // required uint32 player_spell_point = 3;
  bool has_player_spell_point() const;
  void clear_player_spell_point();
  static const int kPlayerSpellPointFieldNumber = 3;
  ::google::protobuf::uint32 player_spell_point() const;
  void set_player_spell_point(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.FrameLevelUp)
 private:
  void set_has_player_id();
  void clear_has_player_id();
  void set_has_player_level();
  void clear_has_player_level();
  void set_has_player_spell_point();
  void clear_has_player_spell_point();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 player_id_;
  ::google::protobuf::uint32 player_level_;
  ::google::protobuf::uint32 player_spell_point_;
  friend struct  protobuf_game_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FramePlayerBaseState : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.FramePlayerBaseState) */ {
 public:
  FramePlayerBaseState();
  virtual ~FramePlayerBaseState();

  FramePlayerBaseState(const FramePlayerBaseState& from);

  inline FramePlayerBaseState& operator=(const FramePlayerBaseState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FramePlayerBaseState& default_instance();

  static inline const FramePlayerBaseState* internal_default_instance() {
    return reinterpret_cast<const FramePlayerBaseState*>(
               &_FramePlayerBaseState_default_instance_);
  }

  void Swap(FramePlayerBaseState* other);

  // implements Message ----------------------------------------------

  inline FramePlayerBaseState* New() const PROTOBUF_FINAL { return New(NULL); }

  FramePlayerBaseState* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FramePlayerBaseState& from);
  void MergeFrom(const FramePlayerBaseState& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FramePlayerBaseState* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .pb.RoomPlayerState state = 2;
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 2;
  const ::pb::RoomPlayerState& state() const;
  ::pb::RoomPlayerState* mutable_state();
  ::pb::RoomPlayerState* release_state();
  void set_allocated_state(::pb::RoomPlayerState* state);

  // required uint32 player_id = 1;
  bool has_player_id() const;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  ::google::protobuf::uint32 player_id() const;
  void set_player_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.FramePlayerBaseState)
 private:
  void set_has_player_id();
  void clear_has_player_id();
  void set_has_state();
  void clear_has_state();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::pb::RoomPlayerState* state_;
  ::google::protobuf::uint32 player_id_;
  friend struct  protobuf_game_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// ErrorMsg

// required uint32 command = 1;
inline bool ErrorMsg::has_command() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ErrorMsg::set_has_command() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ErrorMsg::clear_has_command() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ErrorMsg::clear_command() {
  command_ = 0u;
  clear_has_command();
}
inline ::google::protobuf::uint32 ErrorMsg::command() const {
  // @@protoc_insertion_point(field_get:pb.ErrorMsg.command)
  return command_;
}
inline void ErrorMsg::set_command(::google::protobuf::uint32 value) {
  set_has_command();
  command_ = value;
  // @@protoc_insertion_point(field_set:pb.ErrorMsg.command)
}

// required uint32 error_code = 2;
inline bool ErrorMsg::has_error_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ErrorMsg::set_has_error_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ErrorMsg::clear_has_error_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ErrorMsg::clear_error_code() {
  error_code_ = 0u;
  clear_has_error_code();
}
inline ::google::protobuf::uint32 ErrorMsg::error_code() const {
  // @@protoc_insertion_point(field_get:pb.ErrorMsg.error_code)
  return error_code_;
}
inline void ErrorMsg::set_error_code(::google::protobuf::uint32 value) {
  set_has_error_code();
  error_code_ = value;
  // @@protoc_insertion_point(field_set:pb.ErrorMsg.error_code)
}

// -------------------------------------------------------------------

// GameIssueReq

// -------------------------------------------------------------------

// GameIssueRes

// required string GameIssue = 1;
inline bool GameIssueRes::has_gameissue() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GameIssueRes::set_has_gameissue() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GameIssueRes::clear_has_gameissue() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GameIssueRes::clear_gameissue() {
  gameissue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_gameissue();
}
inline const ::std::string& GameIssueRes::gameissue() const {
  // @@protoc_insertion_point(field_get:pb.GameIssueRes.GameIssue)
  return gameissue_.GetNoArena();
}
inline void GameIssueRes::set_gameissue(const ::std::string& value) {
  set_has_gameissue();
  gameissue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.GameIssueRes.GameIssue)
}
#if LANG_CXX11
inline void GameIssueRes::set_gameissue(::std::string&& value) {
  set_has_gameissue();
  gameissue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.GameIssueRes.GameIssue)
}
#endif
inline void GameIssueRes::set_gameissue(const char* value) {
  set_has_gameissue();
  gameissue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.GameIssueRes.GameIssue)
}
inline void GameIssueRes::set_gameissue(const char* value, size_t size) {
  set_has_gameissue();
  gameissue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.GameIssueRes.GameIssue)
}
inline ::std::string* GameIssueRes::mutable_gameissue() {
  set_has_gameissue();
  // @@protoc_insertion_point(field_mutable:pb.GameIssueRes.GameIssue)
  return gameissue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GameIssueRes::release_gameissue() {
  // @@protoc_insertion_point(field_release:pb.GameIssueRes.GameIssue)
  clear_has_gameissue();
  return gameissue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GameIssueRes::set_allocated_gameissue(::std::string* gameissue) {
  if (gameissue != NULL) {
    set_has_gameissue();
  } else {
    clear_has_gameissue();
  }
  gameissue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gameissue);
  // @@protoc_insertion_point(field_set_allocated:pb.GameIssueRes.GameIssue)
}

// -------------------------------------------------------------------

// HallLoginReq

// required string token = 1;
inline bool HallLoginReq::has_token() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HallLoginReq::set_has_token() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HallLoginReq::clear_has_token() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HallLoginReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_token();
}
inline const ::std::string& HallLoginReq::token() const {
  // @@protoc_insertion_point(field_get:pb.HallLoginReq.token)
  return token_.GetNoArena();
}
inline void HallLoginReq::set_token(const ::std::string& value) {
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.HallLoginReq.token)
}
#if LANG_CXX11
inline void HallLoginReq::set_token(::std::string&& value) {
  set_has_token();
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.HallLoginReq.token)
}
#endif
inline void HallLoginReq::set_token(const char* value) {
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.HallLoginReq.token)
}
inline void HallLoginReq::set_token(const char* value, size_t size) {
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.HallLoginReq.token)
}
inline ::std::string* HallLoginReq::mutable_token() {
  set_has_token();
  // @@protoc_insertion_point(field_mutable:pb.HallLoginReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HallLoginReq::release_token() {
  // @@protoc_insertion_point(field_release:pb.HallLoginReq.token)
  clear_has_token();
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HallLoginReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    set_has_token();
  } else {
    clear_has_token();
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:pb.HallLoginReq.token)
}

// -------------------------------------------------------------------

// HallLoginRes

// required uint32 id = 1;
inline bool HallLoginRes::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HallLoginRes::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HallLoginRes::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HallLoginRes::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 HallLoginRes::id() const {
  // @@protoc_insertion_point(field_get:pb.HallLoginRes.id)
  return id_;
}
inline void HallLoginRes::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:pb.HallLoginRes.id)
}

// required string name = 2;
inline bool HallLoginRes::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HallLoginRes::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HallLoginRes::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HallLoginRes::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& HallLoginRes::name() const {
  // @@protoc_insertion_point(field_get:pb.HallLoginRes.name)
  return name_.GetNoArena();
}
inline void HallLoginRes::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.HallLoginRes.name)
}
#if LANG_CXX11
inline void HallLoginRes::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.HallLoginRes.name)
}
#endif
inline void HallLoginRes::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.HallLoginRes.name)
}
inline void HallLoginRes::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.HallLoginRes.name)
}
inline ::std::string* HallLoginRes::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:pb.HallLoginRes.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HallLoginRes::release_name() {
  // @@protoc_insertion_point(field_release:pb.HallLoginRes.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HallLoginRes::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:pb.HallLoginRes.name)
}

// -------------------------------------------------------------------

// HallStartGameReq

// -------------------------------------------------------------------

// HallStartGameRes

// required uint32 room_id = 1;
inline bool HallStartGameRes::has_room_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void HallStartGameRes::set_has_room_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void HallStartGameRes::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void HallStartGameRes::clear_room_id() {
  room_id_ = 0u;
  clear_has_room_id();
}
inline ::google::protobuf::uint32 HallStartGameRes::room_id() const {
  // @@protoc_insertion_point(field_get:pb.HallStartGameRes.room_id)
  return room_id_;
}
inline void HallStartGameRes::set_room_id(::google::protobuf::uint32 value) {
  set_has_room_id();
  room_id_ = value;
  // @@protoc_insertion_point(field_set:pb.HallStartGameRes.room_id)
}

// required string tcp_addr = 2;
inline bool HallStartGameRes::has_tcp_addr() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HallStartGameRes::set_has_tcp_addr() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HallStartGameRes::clear_has_tcp_addr() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HallStartGameRes::clear_tcp_addr() {
  tcp_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tcp_addr();
}
inline const ::std::string& HallStartGameRes::tcp_addr() const {
  // @@protoc_insertion_point(field_get:pb.HallStartGameRes.tcp_addr)
  return tcp_addr_.GetNoArena();
}
inline void HallStartGameRes::set_tcp_addr(const ::std::string& value) {
  set_has_tcp_addr();
  tcp_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.HallStartGameRes.tcp_addr)
}
#if LANG_CXX11
inline void HallStartGameRes::set_tcp_addr(::std::string&& value) {
  set_has_tcp_addr();
  tcp_addr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.HallStartGameRes.tcp_addr)
}
#endif
inline void HallStartGameRes::set_tcp_addr(const char* value) {
  set_has_tcp_addr();
  tcp_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.HallStartGameRes.tcp_addr)
}
inline void HallStartGameRes::set_tcp_addr(const char* value, size_t size) {
  set_has_tcp_addr();
  tcp_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.HallStartGameRes.tcp_addr)
}
inline ::std::string* HallStartGameRes::mutable_tcp_addr() {
  set_has_tcp_addr();
  // @@protoc_insertion_point(field_mutable:pb.HallStartGameRes.tcp_addr)
  return tcp_addr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HallStartGameRes::release_tcp_addr() {
  // @@protoc_insertion_point(field_release:pb.HallStartGameRes.tcp_addr)
  clear_has_tcp_addr();
  return tcp_addr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HallStartGameRes::set_allocated_tcp_addr(::std::string* tcp_addr) {
  if (tcp_addr != NULL) {
    set_has_tcp_addr();
  } else {
    clear_has_tcp_addr();
  }
  tcp_addr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tcp_addr);
  // @@protoc_insertion_point(field_set_allocated:pb.HallStartGameRes.tcp_addr)
}

// required string udp_addr = 3;
inline bool HallStartGameRes::has_udp_addr() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HallStartGameRes::set_has_udp_addr() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HallStartGameRes::clear_has_udp_addr() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HallStartGameRes::clear_udp_addr() {
  udp_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_udp_addr();
}
inline const ::std::string& HallStartGameRes::udp_addr() const {
  // @@protoc_insertion_point(field_get:pb.HallStartGameRes.udp_addr)
  return udp_addr_.GetNoArena();
}
inline void HallStartGameRes::set_udp_addr(const ::std::string& value) {
  set_has_udp_addr();
  udp_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.HallStartGameRes.udp_addr)
}
#if LANG_CXX11
inline void HallStartGameRes::set_udp_addr(::std::string&& value) {
  set_has_udp_addr();
  udp_addr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.HallStartGameRes.udp_addr)
}
#endif
inline void HallStartGameRes::set_udp_addr(const char* value) {
  set_has_udp_addr();
  udp_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.HallStartGameRes.udp_addr)
}
inline void HallStartGameRes::set_udp_addr(const char* value, size_t size) {
  set_has_udp_addr();
  udp_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.HallStartGameRes.udp_addr)
}
inline ::std::string* HallStartGameRes::mutable_udp_addr() {
  set_has_udp_addr();
  // @@protoc_insertion_point(field_mutable:pb.HallStartGameRes.udp_addr)
  return udp_addr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HallStartGameRes::release_udp_addr() {
  // @@protoc_insertion_point(field_release:pb.HallStartGameRes.udp_addr)
  clear_has_udp_addr();
  return udp_addr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HallStartGameRes::set_allocated_udp_addr(::std::string* udp_addr) {
  if (udp_addr != NULL) {
    set_has_udp_addr();
  } else {
    clear_has_udp_addr();
  }
  udp_addr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), udp_addr);
  // @@protoc_insertion_point(field_set_allocated:pb.HallStartGameRes.udp_addr)
}

// required string ws_addr = 4;
inline bool HallStartGameRes::has_ws_addr() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HallStartGameRes::set_has_ws_addr() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HallStartGameRes::clear_has_ws_addr() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HallStartGameRes::clear_ws_addr() {
  ws_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ws_addr();
}
inline const ::std::string& HallStartGameRes::ws_addr() const {
  // @@protoc_insertion_point(field_get:pb.HallStartGameRes.ws_addr)
  return ws_addr_.GetNoArena();
}
inline void HallStartGameRes::set_ws_addr(const ::std::string& value) {
  set_has_ws_addr();
  ws_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.HallStartGameRes.ws_addr)
}
#if LANG_CXX11
inline void HallStartGameRes::set_ws_addr(::std::string&& value) {
  set_has_ws_addr();
  ws_addr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.HallStartGameRes.ws_addr)
}
#endif
inline void HallStartGameRes::set_ws_addr(const char* value) {
  set_has_ws_addr();
  ws_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.HallStartGameRes.ws_addr)
}
inline void HallStartGameRes::set_ws_addr(const char* value, size_t size) {
  set_has_ws_addr();
  ws_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.HallStartGameRes.ws_addr)
}
inline ::std::string* HallStartGameRes::mutable_ws_addr() {
  set_has_ws_addr();
  // @@protoc_insertion_point(field_mutable:pb.HallStartGameRes.ws_addr)
  return ws_addr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HallStartGameRes::release_ws_addr() {
  // @@protoc_insertion_point(field_release:pb.HallStartGameRes.ws_addr)
  clear_has_ws_addr();
  return ws_addr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HallStartGameRes::set_allocated_ws_addr(::std::string* ws_addr) {
  if (ws_addr != NULL) {
    set_has_ws_addr();
  } else {
    clear_has_ws_addr();
  }
  ws_addr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ws_addr);
  // @@protoc_insertion_point(field_set_allocated:pb.HallStartGameRes.ws_addr)
}

// required string room_key = 5;
inline bool HallStartGameRes::has_room_key() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void HallStartGameRes::set_has_room_key() {
  _has_bits_[0] |= 0x00000008u;
}
inline void HallStartGameRes::clear_has_room_key() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void HallStartGameRes::clear_room_key() {
  room_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_room_key();
}
inline const ::std::string& HallStartGameRes::room_key() const {
  // @@protoc_insertion_point(field_get:pb.HallStartGameRes.room_key)
  return room_key_.GetNoArena();
}
inline void HallStartGameRes::set_room_key(const ::std::string& value) {
  set_has_room_key();
  room_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.HallStartGameRes.room_key)
}
#if LANG_CXX11
inline void HallStartGameRes::set_room_key(::std::string&& value) {
  set_has_room_key();
  room_key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.HallStartGameRes.room_key)
}
#endif
inline void HallStartGameRes::set_room_key(const char* value) {
  set_has_room_key();
  room_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.HallStartGameRes.room_key)
}
inline void HallStartGameRes::set_room_key(const char* value, size_t size) {
  set_has_room_key();
  room_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.HallStartGameRes.room_key)
}
inline ::std::string* HallStartGameRes::mutable_room_key() {
  set_has_room_key();
  // @@protoc_insertion_point(field_mutable:pb.HallStartGameRes.room_key)
  return room_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* HallStartGameRes::release_room_key() {
  // @@protoc_insertion_point(field_release:pb.HallStartGameRes.room_key)
  clear_has_room_key();
  return room_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void HallStartGameRes::set_allocated_room_key(::std::string* room_key) {
  if (room_key != NULL) {
    set_has_room_key();
  } else {
    clear_has_room_key();
  }
  room_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), room_key);
  // @@protoc_insertion_point(field_set_allocated:pb.HallStartGameRes.room_key)
}

// -------------------------------------------------------------------

// RCenterRegisterReq

// required string tcp_addr = 1;
inline bool RCenterRegisterReq::has_tcp_addr() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RCenterRegisterReq::set_has_tcp_addr() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RCenterRegisterReq::clear_has_tcp_addr() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RCenterRegisterReq::clear_tcp_addr() {
  tcp_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tcp_addr();
}
inline const ::std::string& RCenterRegisterReq::tcp_addr() const {
  // @@protoc_insertion_point(field_get:pb.RCenterRegisterReq.tcp_addr)
  return tcp_addr_.GetNoArena();
}
inline void RCenterRegisterReq::set_tcp_addr(const ::std::string& value) {
  set_has_tcp_addr();
  tcp_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.RCenterRegisterReq.tcp_addr)
}
#if LANG_CXX11
inline void RCenterRegisterReq::set_tcp_addr(::std::string&& value) {
  set_has_tcp_addr();
  tcp_addr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.RCenterRegisterReq.tcp_addr)
}
#endif
inline void RCenterRegisterReq::set_tcp_addr(const char* value) {
  set_has_tcp_addr();
  tcp_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.RCenterRegisterReq.tcp_addr)
}
inline void RCenterRegisterReq::set_tcp_addr(const char* value, size_t size) {
  set_has_tcp_addr();
  tcp_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.RCenterRegisterReq.tcp_addr)
}
inline ::std::string* RCenterRegisterReq::mutable_tcp_addr() {
  set_has_tcp_addr();
  // @@protoc_insertion_point(field_mutable:pb.RCenterRegisterReq.tcp_addr)
  return tcp_addr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RCenterRegisterReq::release_tcp_addr() {
  // @@protoc_insertion_point(field_release:pb.RCenterRegisterReq.tcp_addr)
  clear_has_tcp_addr();
  return tcp_addr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RCenterRegisterReq::set_allocated_tcp_addr(::std::string* tcp_addr) {
  if (tcp_addr != NULL) {
    set_has_tcp_addr();
  } else {
    clear_has_tcp_addr();
  }
  tcp_addr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tcp_addr);
  // @@protoc_insertion_point(field_set_allocated:pb.RCenterRegisterReq.tcp_addr)
}

// required string udp_addr = 2;
inline bool RCenterRegisterReq::has_udp_addr() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RCenterRegisterReq::set_has_udp_addr() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RCenterRegisterReq::clear_has_udp_addr() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RCenterRegisterReq::clear_udp_addr() {
  udp_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_udp_addr();
}
inline const ::std::string& RCenterRegisterReq::udp_addr() const {
  // @@protoc_insertion_point(field_get:pb.RCenterRegisterReq.udp_addr)
  return udp_addr_.GetNoArena();
}
inline void RCenterRegisterReq::set_udp_addr(const ::std::string& value) {
  set_has_udp_addr();
  udp_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.RCenterRegisterReq.udp_addr)
}
#if LANG_CXX11
inline void RCenterRegisterReq::set_udp_addr(::std::string&& value) {
  set_has_udp_addr();
  udp_addr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.RCenterRegisterReq.udp_addr)
}
#endif
inline void RCenterRegisterReq::set_udp_addr(const char* value) {
  set_has_udp_addr();
  udp_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.RCenterRegisterReq.udp_addr)
}
inline void RCenterRegisterReq::set_udp_addr(const char* value, size_t size) {
  set_has_udp_addr();
  udp_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.RCenterRegisterReq.udp_addr)
}
inline ::std::string* RCenterRegisterReq::mutable_udp_addr() {
  set_has_udp_addr();
  // @@protoc_insertion_point(field_mutable:pb.RCenterRegisterReq.udp_addr)
  return udp_addr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RCenterRegisterReq::release_udp_addr() {
  // @@protoc_insertion_point(field_release:pb.RCenterRegisterReq.udp_addr)
  clear_has_udp_addr();
  return udp_addr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RCenterRegisterReq::set_allocated_udp_addr(::std::string* udp_addr) {
  if (udp_addr != NULL) {
    set_has_udp_addr();
  } else {
    clear_has_udp_addr();
  }
  udp_addr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), udp_addr);
  // @@protoc_insertion_point(field_set_allocated:pb.RCenterRegisterReq.udp_addr)
}

// required string ws_addr = 3;
inline bool RCenterRegisterReq::has_ws_addr() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RCenterRegisterReq::set_has_ws_addr() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RCenterRegisterReq::clear_has_ws_addr() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RCenterRegisterReq::clear_ws_addr() {
  ws_addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ws_addr();
}
inline const ::std::string& RCenterRegisterReq::ws_addr() const {
  // @@protoc_insertion_point(field_get:pb.RCenterRegisterReq.ws_addr)
  return ws_addr_.GetNoArena();
}
inline void RCenterRegisterReq::set_ws_addr(const ::std::string& value) {
  set_has_ws_addr();
  ws_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.RCenterRegisterReq.ws_addr)
}
#if LANG_CXX11
inline void RCenterRegisterReq::set_ws_addr(::std::string&& value) {
  set_has_ws_addr();
  ws_addr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.RCenterRegisterReq.ws_addr)
}
#endif
inline void RCenterRegisterReq::set_ws_addr(const char* value) {
  set_has_ws_addr();
  ws_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.RCenterRegisterReq.ws_addr)
}
inline void RCenterRegisterReq::set_ws_addr(const char* value, size_t size) {
  set_has_ws_addr();
  ws_addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.RCenterRegisterReq.ws_addr)
}
inline ::std::string* RCenterRegisterReq::mutable_ws_addr() {
  set_has_ws_addr();
  // @@protoc_insertion_point(field_mutable:pb.RCenterRegisterReq.ws_addr)
  return ws_addr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RCenterRegisterReq::release_ws_addr() {
  // @@protoc_insertion_point(field_release:pb.RCenterRegisterReq.ws_addr)
  clear_has_ws_addr();
  return ws_addr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RCenterRegisterReq::set_allocated_ws_addr(::std::string* ws_addr) {
  if (ws_addr != NULL) {
    set_has_ws_addr();
  } else {
    clear_has_ws_addr();
  }
  ws_addr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ws_addr);
  // @@protoc_insertion_point(field_set_allocated:pb.RCenterRegisterReq.ws_addr)
}

// required string key = 4;
inline bool RCenterRegisterReq::has_key() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RCenterRegisterReq::set_has_key() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RCenterRegisterReq::clear_has_key() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RCenterRegisterReq::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key();
}
inline const ::std::string& RCenterRegisterReq::key() const {
  // @@protoc_insertion_point(field_get:pb.RCenterRegisterReq.key)
  return key_.GetNoArena();
}
inline void RCenterRegisterReq::set_key(const ::std::string& value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.RCenterRegisterReq.key)
}
#if LANG_CXX11
inline void RCenterRegisterReq::set_key(::std::string&& value) {
  set_has_key();
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.RCenterRegisterReq.key)
}
#endif
inline void RCenterRegisterReq::set_key(const char* value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.RCenterRegisterReq.key)
}
inline void RCenterRegisterReq::set_key(const char* value, size_t size) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.RCenterRegisterReq.key)
}
inline ::std::string* RCenterRegisterReq::mutable_key() {
  set_has_key();
  // @@protoc_insertion_point(field_mutable:pb.RCenterRegisterReq.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RCenterRegisterReq::release_key() {
  // @@protoc_insertion_point(field_release:pb.RCenterRegisterReq.key)
  clear_has_key();
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RCenterRegisterReq::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    set_has_key();
  } else {
    clear_has_key();
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:pb.RCenterRegisterReq.key)
}

// -------------------------------------------------------------------

// RCenterRegisterRes

// required uint32 id = 1;
inline bool RCenterRegisterRes::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RCenterRegisterRes::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RCenterRegisterRes::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RCenterRegisterRes::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 RCenterRegisterRes::id() const {
  // @@protoc_insertion_point(field_get:pb.RCenterRegisterRes.id)
  return id_;
}
inline void RCenterRegisterRes::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:pb.RCenterRegisterRes.id)
}

// -------------------------------------------------------------------

// Vector

// required sint32 x = 1;
inline bool Vector::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Vector::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Vector::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Vector::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline ::google::protobuf::int32 Vector::x() const {
  // @@protoc_insertion_point(field_get:pb.Vector.x)
  return x_;
}
inline void Vector::set_x(::google::protobuf::int32 value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:pb.Vector.x)
}

// required sint32 z = 2;
inline bool Vector::has_z() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Vector::set_has_z() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Vector::clear_has_z() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Vector::clear_z() {
  z_ = 0;
  clear_has_z();
}
inline ::google::protobuf::int32 Vector::z() const {
  // @@protoc_insertion_point(field_get:pb.Vector.z)
  return z_;
}
inline void Vector::set_z(::google::protobuf::int32 value) {
  set_has_z();
  z_ = value;
  // @@protoc_insertion_point(field_set:pb.Vector.z)
}

// -------------------------------------------------------------------

// RoomPlayer

// required uint32 id = 1;
inline bool RoomPlayer::has_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RoomPlayer::set_has_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RoomPlayer::clear_has_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RoomPlayer::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 RoomPlayer::id() const {
  // @@protoc_insertion_point(field_get:pb.RoomPlayer.id)
  return id_;
}
inline void RoomPlayer::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:pb.RoomPlayer.id)
}

// required string nickname = 2;
inline bool RoomPlayer::has_nickname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoomPlayer::set_has_nickname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoomPlayer::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoomPlayer::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nickname();
}
inline const ::std::string& RoomPlayer::nickname() const {
  // @@protoc_insertion_point(field_get:pb.RoomPlayer.nickname)
  return nickname_.GetNoArena();
}
inline void RoomPlayer::set_nickname(const ::std::string& value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.RoomPlayer.nickname)
}
#if LANG_CXX11
inline void RoomPlayer::set_nickname(::std::string&& value) {
  set_has_nickname();
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.RoomPlayer.nickname)
}
#endif
inline void RoomPlayer::set_nickname(const char* value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.RoomPlayer.nickname)
}
inline void RoomPlayer::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.RoomPlayer.nickname)
}
inline ::std::string* RoomPlayer::mutable_nickname() {
  set_has_nickname();
  // @@protoc_insertion_point(field_mutable:pb.RoomPlayer.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RoomPlayer::release_nickname() {
  // @@protoc_insertion_point(field_release:pb.RoomPlayer.nickname)
  clear_has_nickname();
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RoomPlayer::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    set_has_nickname();
  } else {
    clear_has_nickname();
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:pb.RoomPlayer.nickname)
}

// required .pb.RoomPlayerState state = 3;
inline bool RoomPlayer::has_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoomPlayer::set_has_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RoomPlayer::clear_has_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RoomPlayer::clear_state() {
  if (state_ != NULL) state_->::pb::RoomPlayerState::Clear();
  clear_has_state();
}
inline const ::pb::RoomPlayerState& RoomPlayer::state() const {
  // @@protoc_insertion_point(field_get:pb.RoomPlayer.state)
  return state_ != NULL ? *state_
                         : *::pb::RoomPlayerState::internal_default_instance();
}
inline ::pb::RoomPlayerState* RoomPlayer::mutable_state() {
  set_has_state();
  if (state_ == NULL) {
    state_ = new ::pb::RoomPlayerState;
  }
  // @@protoc_insertion_point(field_mutable:pb.RoomPlayer.state)
  return state_;
}
inline ::pb::RoomPlayerState* RoomPlayer::release_state() {
  // @@protoc_insertion_point(field_release:pb.RoomPlayer.state)
  clear_has_state();
  ::pb::RoomPlayerState* temp = state_;
  state_ = NULL;
  return temp;
}
inline void RoomPlayer::set_allocated_state(::pb::RoomPlayerState* state) {
  delete state_;
  state_ = state;
  if (state) {
    set_has_state();
  } else {
    clear_has_state();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.RoomPlayer.state)
}

// required uint32 job = 4;
inline bool RoomPlayer::has_job() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RoomPlayer::set_has_job() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RoomPlayer::clear_has_job() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RoomPlayer::clear_job() {
  job_ = 0u;
  clear_has_job();
}
inline ::google::protobuf::uint32 RoomPlayer::job() const {
  // @@protoc_insertion_point(field_get:pb.RoomPlayer.job)
  return job_;
}
inline void RoomPlayer::set_job(::google::protobuf::uint32 value) {
  set_has_job();
  job_ = value;
  // @@protoc_insertion_point(field_set:pb.RoomPlayer.job)
}

// required uint32 level = 5;
inline bool RoomPlayer::has_level() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void RoomPlayer::set_has_level() {
  _has_bits_[0] |= 0x00000040u;
}
inline void RoomPlayer::clear_has_level() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void RoomPlayer::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 RoomPlayer::level() const {
  // @@protoc_insertion_point(field_get:pb.RoomPlayer.level)
  return level_;
}
inline void RoomPlayer::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:pb.RoomPlayer.level)
}

// required .pb.Vector pos = 6;
inline bool RoomPlayer::has_pos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RoomPlayer::set_has_pos() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RoomPlayer::clear_has_pos() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RoomPlayer::clear_pos() {
  if (pos_ != NULL) pos_->::pb::Vector::Clear();
  clear_has_pos();
}
inline const ::pb::Vector& RoomPlayer::pos() const {
  // @@protoc_insertion_point(field_get:pb.RoomPlayer.pos)
  return pos_ != NULL ? *pos_
                         : *::pb::Vector::internal_default_instance();
}
inline ::pb::Vector* RoomPlayer::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) {
    pos_ = new ::pb::Vector;
  }
  // @@protoc_insertion_point(field_mutable:pb.RoomPlayer.pos)
  return pos_;
}
inline ::pb::Vector* RoomPlayer::release_pos() {
  // @@protoc_insertion_point(field_release:pb.RoomPlayer.pos)
  clear_has_pos();
  ::pb::Vector* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void RoomPlayer::set_allocated_pos(::pb::Vector* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.RoomPlayer.pos)
}

// required .pb.Vector dir = 7;
inline bool RoomPlayer::has_dir() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RoomPlayer::set_has_dir() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RoomPlayer::clear_has_dir() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RoomPlayer::clear_dir() {
  if (dir_ != NULL) dir_->::pb::Vector::Clear();
  clear_has_dir();
}
inline const ::pb::Vector& RoomPlayer::dir() const {
  // @@protoc_insertion_point(field_get:pb.RoomPlayer.dir)
  return dir_ != NULL ? *dir_
                         : *::pb::Vector::internal_default_instance();
}
inline ::pb::Vector* RoomPlayer::mutable_dir() {
  set_has_dir();
  if (dir_ == NULL) {
    dir_ = new ::pb::Vector;
  }
  // @@protoc_insertion_point(field_mutable:pb.RoomPlayer.dir)
  return dir_;
}
inline ::pb::Vector* RoomPlayer::release_dir() {
  // @@protoc_insertion_point(field_release:pb.RoomPlayer.dir)
  clear_has_dir();
  ::pb::Vector* temp = dir_;
  dir_ = NULL;
  return temp;
}
inline void RoomPlayer::set_allocated_dir(::pb::Vector* dir) {
  delete dir_;
  dir_ = dir;
  if (dir) {
    set_has_dir();
  } else {
    clear_has_dir();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.RoomPlayer.dir)
}

// required uint32 score = 8;
inline bool RoomPlayer::has_score() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void RoomPlayer::set_has_score() {
  _has_bits_[0] |= 0x00000080u;
}
inline void RoomPlayer::clear_has_score() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void RoomPlayer::clear_score() {
  score_ = 0u;
  clear_has_score();
}
inline ::google::protobuf::uint32 RoomPlayer::score() const {
  // @@protoc_insertion_point(field_get:pb.RoomPlayer.score)
  return score_;
}
inline void RoomPlayer::set_score(::google::protobuf::uint32 value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:pb.RoomPlayer.score)
}

// repeated .pb.RoomPlayerSpell spells = 9;
inline int RoomPlayer::spells_size() const {
  return spells_.size();
}
inline void RoomPlayer::clear_spells() {
  spells_.Clear();
}
inline const ::pb::RoomPlayerSpell& RoomPlayer::spells(int index) const {
  // @@protoc_insertion_point(field_get:pb.RoomPlayer.spells)
  return spells_.Get(index);
}
inline ::pb::RoomPlayerSpell* RoomPlayer::mutable_spells(int index) {
  // @@protoc_insertion_point(field_mutable:pb.RoomPlayer.spells)
  return spells_.Mutable(index);
}
inline ::pb::RoomPlayerSpell* RoomPlayer::add_spells() {
  // @@protoc_insertion_point(field_add:pb.RoomPlayer.spells)
  return spells_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::pb::RoomPlayerSpell >*
RoomPlayer::mutable_spells() {
  // @@protoc_insertion_point(field_mutable_list:pb.RoomPlayer.spells)
  return &spells_;
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::RoomPlayerSpell >&
RoomPlayer::spells() const {
  // @@protoc_insertion_point(field_list:pb.RoomPlayer.spells)
  return spells_;
}

// -------------------------------------------------------------------

// RoomPlayerState

// required uint32 hp = 1;
inline bool RoomPlayerState::has_hp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoomPlayerState::set_has_hp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoomPlayerState::clear_has_hp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoomPlayerState::clear_hp() {
  hp_ = 0u;
  clear_has_hp();
}
inline ::google::protobuf::uint32 RoomPlayerState::hp() const {
  // @@protoc_insertion_point(field_get:pb.RoomPlayerState.hp)
  return hp_;
}
inline void RoomPlayerState::set_hp(::google::protobuf::uint32 value) {
  set_has_hp();
  hp_ = value;
  // @@protoc_insertion_point(field_set:pb.RoomPlayerState.hp)
}

// required uint32 speed = 2;
inline bool RoomPlayerState::has_speed() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoomPlayerState::set_has_speed() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RoomPlayerState::clear_has_speed() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RoomPlayerState::clear_speed() {
  speed_ = 0u;
  clear_has_speed();
}
inline ::google::protobuf::uint32 RoomPlayerState::speed() const {
  // @@protoc_insertion_point(field_get:pb.RoomPlayerState.speed)
  return speed_;
}
inline void RoomPlayerState::set_speed(::google::protobuf::uint32 value) {
  set_has_speed();
  speed_ = value;
  // @@protoc_insertion_point(field_set:pb.RoomPlayerState.speed)
}

// -------------------------------------------------------------------

// RoomPlayerSpell

// required uint32 xml_id = 1;
inline bool RoomPlayerSpell::has_xml_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoomPlayerSpell::set_has_xml_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoomPlayerSpell::clear_has_xml_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoomPlayerSpell::clear_xml_id() {
  xml_id_ = 0u;
  clear_has_xml_id();
}
inline ::google::protobuf::uint32 RoomPlayerSpell::xml_id() const {
  // @@protoc_insertion_point(field_get:pb.RoomPlayerSpell.xml_id)
  return xml_id_;
}
inline void RoomPlayerSpell::set_xml_id(::google::protobuf::uint32 value) {
  set_has_xml_id();
  xml_id_ = value;
  // @@protoc_insertion_point(field_set:pb.RoomPlayerSpell.xml_id)
}

// required uint32 level = 2;
inline bool RoomPlayerSpell::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoomPlayerSpell::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RoomPlayerSpell::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RoomPlayerSpell::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 RoomPlayerSpell::level() const {
  // @@protoc_insertion_point(field_get:pb.RoomPlayerSpell.level)
  return level_;
}
inline void RoomPlayerSpell::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:pb.RoomPlayerSpell.level)
}

// required uint32 cd = 3;
inline bool RoomPlayerSpell::has_cd() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RoomPlayerSpell::set_has_cd() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RoomPlayerSpell::clear_has_cd() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RoomPlayerSpell::clear_cd() {
  cd_ = 0u;
  clear_has_cd();
}
inline ::google::protobuf::uint32 RoomPlayerSpell::cd() const {
  // @@protoc_insertion_point(field_get:pb.RoomPlayerSpell.cd)
  return cd_;
}
inline void RoomPlayerSpell::set_cd(::google::protobuf::uint32 value) {
  set_has_cd();
  cd_ = value;
  // @@protoc_insertion_point(field_set:pb.RoomPlayerSpell.cd)
}

// -------------------------------------------------------------------

// RoomItem

// required uint32 id = 1;
inline bool RoomItem::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoomItem::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RoomItem::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RoomItem::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 RoomItem::id() const {
  // @@protoc_insertion_point(field_get:pb.RoomItem.id)
  return id_;
}
inline void RoomItem::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:pb.RoomItem.id)
}

// required uint32 xml_id = 2;
inline bool RoomItem::has_xml_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RoomItem::set_has_xml_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RoomItem::clear_has_xml_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RoomItem::clear_xml_id() {
  xml_id_ = 0u;
  clear_has_xml_id();
}
inline ::google::protobuf::uint32 RoomItem::xml_id() const {
  // @@protoc_insertion_point(field_get:pb.RoomItem.xml_id)
  return xml_id_;
}
inline void RoomItem::set_xml_id(::google::protobuf::uint32 value) {
  set_has_xml_id();
  xml_id_ = value;
  // @@protoc_insertion_point(field_set:pb.RoomItem.xml_id)
}

// required .pb.Vector pos = 3;
inline bool RoomItem::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoomItem::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoomItem::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoomItem::clear_pos() {
  if (pos_ != NULL) pos_->::pb::Vector::Clear();
  clear_has_pos();
}
inline const ::pb::Vector& RoomItem::pos() const {
  // @@protoc_insertion_point(field_get:pb.RoomItem.pos)
  return pos_ != NULL ? *pos_
                         : *::pb::Vector::internal_default_instance();
}
inline ::pb::Vector* RoomItem::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) {
    pos_ = new ::pb::Vector;
  }
  // @@protoc_insertion_point(field_mutable:pb.RoomItem.pos)
  return pos_;
}
inline ::pb::Vector* RoomItem::release_pos() {
  // @@protoc_insertion_point(field_release:pb.RoomItem.pos)
  clear_has_pos();
  ::pb::Vector* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void RoomItem::set_allocated_pos(::pb::Vector* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.RoomItem.pos)
}

// -------------------------------------------------------------------

// RoomBuff

// required string id = 1;
inline bool RoomBuff::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoomBuff::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoomBuff::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoomBuff::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
inline const ::std::string& RoomBuff::id() const {
  // @@protoc_insertion_point(field_get:pb.RoomBuff.id)
  return id_.GetNoArena();
}
inline void RoomBuff::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.RoomBuff.id)
}
#if LANG_CXX11
inline void RoomBuff::set_id(::std::string&& value) {
  set_has_id();
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.RoomBuff.id)
}
#endif
inline void RoomBuff::set_id(const char* value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.RoomBuff.id)
}
inline void RoomBuff::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.RoomBuff.id)
}
inline ::std::string* RoomBuff::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:pb.RoomBuff.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RoomBuff::release_id() {
  // @@protoc_insertion_point(field_release:pb.RoomBuff.id)
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RoomBuff::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:pb.RoomBuff.id)
}

// required uint32 xml_id = 2;
inline bool RoomBuff::has_xml_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RoomBuff::set_has_xml_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RoomBuff::clear_has_xml_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RoomBuff::clear_xml_id() {
  xml_id_ = 0u;
  clear_has_xml_id();
}
inline ::google::protobuf::uint32 RoomBuff::xml_id() const {
  // @@protoc_insertion_point(field_get:pb.RoomBuff.xml_id)
  return xml_id_;
}
inline void RoomBuff::set_xml_id(::google::protobuf::uint32 value) {
  set_has_xml_id();
  xml_id_ = value;
  // @@protoc_insertion_point(field_set:pb.RoomBuff.xml_id)
}

// optional uint32 player_id = 3;
inline bool RoomBuff::has_player_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RoomBuff::set_has_player_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RoomBuff::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RoomBuff::clear_player_id() {
  player_id_ = 0u;
  clear_has_player_id();
}
inline ::google::protobuf::uint32 RoomBuff::player_id() const {
  // @@protoc_insertion_point(field_get:pb.RoomBuff.player_id)
  return player_id_;
}
inline void RoomBuff::set_player_id(::google::protobuf::uint32 value) {
  set_has_player_id();
  player_id_ = value;
  // @@protoc_insertion_point(field_set:pb.RoomBuff.player_id)
}

// optional .pb.Vector pos = 4;
inline bool RoomBuff::has_pos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoomBuff::set_has_pos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RoomBuff::clear_has_pos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RoomBuff::clear_pos() {
  if (pos_ != NULL) pos_->::pb::Vector::Clear();
  clear_has_pos();
}
inline const ::pb::Vector& RoomBuff::pos() const {
  // @@protoc_insertion_point(field_get:pb.RoomBuff.pos)
  return pos_ != NULL ? *pos_
                         : *::pb::Vector::internal_default_instance();
}
inline ::pb::Vector* RoomBuff::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) {
    pos_ = new ::pb::Vector;
  }
  // @@protoc_insertion_point(field_mutable:pb.RoomBuff.pos)
  return pos_;
}
inline ::pb::Vector* RoomBuff::release_pos() {
  // @@protoc_insertion_point(field_release:pb.RoomBuff.pos)
  clear_has_pos();
  ::pb::Vector* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void RoomBuff::set_allocated_pos(::pb::Vector* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.RoomBuff.pos)
}

// optional .pb.Vector dir = 5;
inline bool RoomBuff::has_dir() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RoomBuff::set_has_dir() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RoomBuff::clear_has_dir() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RoomBuff::clear_dir() {
  if (dir_ != NULL) dir_->::pb::Vector::Clear();
  clear_has_dir();
}
inline const ::pb::Vector& RoomBuff::dir() const {
  // @@protoc_insertion_point(field_get:pb.RoomBuff.dir)
  return dir_ != NULL ? *dir_
                         : *::pb::Vector::internal_default_instance();
}
inline ::pb::Vector* RoomBuff::mutable_dir() {
  set_has_dir();
  if (dir_ == NULL) {
    dir_ = new ::pb::Vector;
  }
  // @@protoc_insertion_point(field_mutable:pb.RoomBuff.dir)
  return dir_;
}
inline ::pb::Vector* RoomBuff::release_dir() {
  // @@protoc_insertion_point(field_release:pb.RoomBuff.dir)
  clear_has_dir();
  ::pb::Vector* temp = dir_;
  dir_ = NULL;
  return temp;
}
inline void RoomBuff::set_allocated_dir(::pb::Vector* dir) {
  delete dir_;
  dir_ = dir;
  if (dir) {
    set_has_dir();
  } else {
    clear_has_dir();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.RoomBuff.dir)
}

// required uint32 remain_time = 6;
inline bool RoomBuff::has_remain_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RoomBuff::set_has_remain_time() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RoomBuff::clear_has_remain_time() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RoomBuff::clear_remain_time() {
  remain_time_ = 0u;
  clear_has_remain_time();
}
inline ::google::protobuf::uint32 RoomBuff::remain_time() const {
  // @@protoc_insertion_point(field_get:pb.RoomBuff.remain_time)
  return remain_time_;
}
inline void RoomBuff::set_remain_time(::google::protobuf::uint32 value) {
  set_has_remain_time();
  remain_time_ = value;
  // @@protoc_insertion_point(field_set:pb.RoomBuff.remain_time)
}

// -------------------------------------------------------------------

// RoomSnapShot

// repeated .pb.RoomPlayer players = 1;
inline int RoomSnapShot::players_size() const {
  return players_.size();
}
inline void RoomSnapShot::clear_players() {
  players_.Clear();
}
inline const ::pb::RoomPlayer& RoomSnapShot::players(int index) const {
  // @@protoc_insertion_point(field_get:pb.RoomSnapShot.players)
  return players_.Get(index);
}
inline ::pb::RoomPlayer* RoomSnapShot::mutable_players(int index) {
  // @@protoc_insertion_point(field_mutable:pb.RoomSnapShot.players)
  return players_.Mutable(index);
}
inline ::pb::RoomPlayer* RoomSnapShot::add_players() {
  // @@protoc_insertion_point(field_add:pb.RoomSnapShot.players)
  return players_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::pb::RoomPlayer >*
RoomSnapShot::mutable_players() {
  // @@protoc_insertion_point(field_mutable_list:pb.RoomSnapShot.players)
  return &players_;
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::RoomPlayer >&
RoomSnapShot::players() const {
  // @@protoc_insertion_point(field_list:pb.RoomSnapShot.players)
  return players_;
}

// repeated .pb.RoomItem items = 2;
inline int RoomSnapShot::items_size() const {
  return items_.size();
}
inline void RoomSnapShot::clear_items() {
  items_.Clear();
}
inline const ::pb::RoomItem& RoomSnapShot::items(int index) const {
  // @@protoc_insertion_point(field_get:pb.RoomSnapShot.items)
  return items_.Get(index);
}
inline ::pb::RoomItem* RoomSnapShot::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:pb.RoomSnapShot.items)
  return items_.Mutable(index);
}
inline ::pb::RoomItem* RoomSnapShot::add_items() {
  // @@protoc_insertion_point(field_add:pb.RoomSnapShot.items)
  return items_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::pb::RoomItem >*
RoomSnapShot::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:pb.RoomSnapShot.items)
  return &items_;
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::RoomItem >&
RoomSnapShot::items() const {
  // @@protoc_insertion_point(field_list:pb.RoomSnapShot.items)
  return items_;
}

// repeated .pb.RoomBuff buffs = 3;
inline int RoomSnapShot::buffs_size() const {
  return buffs_.size();
}
inline void RoomSnapShot::clear_buffs() {
  buffs_.Clear();
}
inline const ::pb::RoomBuff& RoomSnapShot::buffs(int index) const {
  // @@protoc_insertion_point(field_get:pb.RoomSnapShot.buffs)
  return buffs_.Get(index);
}
inline ::pb::RoomBuff* RoomSnapShot::mutable_buffs(int index) {
  // @@protoc_insertion_point(field_mutable:pb.RoomSnapShot.buffs)
  return buffs_.Mutable(index);
}
inline ::pb::RoomBuff* RoomSnapShot::add_buffs() {
  // @@protoc_insertion_point(field_add:pb.RoomSnapShot.buffs)
  return buffs_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::pb::RoomBuff >*
RoomSnapShot::mutable_buffs() {
  // @@protoc_insertion_point(field_mutable_list:pb.RoomSnapShot.buffs)
  return &buffs_;
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::RoomBuff >&
RoomSnapShot::buffs() const {
  // @@protoc_insertion_point(field_list:pb.RoomSnapShot.buffs)
  return buffs_;
}

// -------------------------------------------------------------------

// RoomLoginReq

// required string nickname = 1;
inline bool RoomLoginReq::has_nickname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoomLoginReq::set_has_nickname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoomLoginReq::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoomLoginReq::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nickname();
}
inline const ::std::string& RoomLoginReq::nickname() const {
  // @@protoc_insertion_point(field_get:pb.RoomLoginReq.nickname)
  return nickname_.GetNoArena();
}
inline void RoomLoginReq::set_nickname(const ::std::string& value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.RoomLoginReq.nickname)
}
#if LANG_CXX11
inline void RoomLoginReq::set_nickname(::std::string&& value) {
  set_has_nickname();
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.RoomLoginReq.nickname)
}
#endif
inline void RoomLoginReq::set_nickname(const char* value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.RoomLoginReq.nickname)
}
inline void RoomLoginReq::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.RoomLoginReq.nickname)
}
inline ::std::string* RoomLoginReq::mutable_nickname() {
  set_has_nickname();
  // @@protoc_insertion_point(field_mutable:pb.RoomLoginReq.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RoomLoginReq::release_nickname() {
  // @@protoc_insertion_point(field_release:pb.RoomLoginReq.nickname)
  clear_has_nickname();
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RoomLoginReq::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    set_has_nickname();
  } else {
    clear_has_nickname();
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:pb.RoomLoginReq.nickname)
}

// required uint32 room_id = 2;
inline bool RoomLoginReq::has_room_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RoomLoginReq::set_has_room_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RoomLoginReq::clear_has_room_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RoomLoginReq::clear_room_id() {
  room_id_ = 0u;
  clear_has_room_id();
}
inline ::google::protobuf::uint32 RoomLoginReq::room_id() const {
  // @@protoc_insertion_point(field_get:pb.RoomLoginReq.room_id)
  return room_id_;
}
inline void RoomLoginReq::set_room_id(::google::protobuf::uint32 value) {
  set_has_room_id();
  room_id_ = value;
  // @@protoc_insertion_point(field_set:pb.RoomLoginReq.room_id)
}

// required string room_key = 3;
inline bool RoomLoginReq::has_room_key() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoomLoginReq::set_has_room_key() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RoomLoginReq::clear_has_room_key() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RoomLoginReq::clear_room_key() {
  room_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_room_key();
}
inline const ::std::string& RoomLoginReq::room_key() const {
  // @@protoc_insertion_point(field_get:pb.RoomLoginReq.room_key)
  return room_key_.GetNoArena();
}
inline void RoomLoginReq::set_room_key(const ::std::string& value) {
  set_has_room_key();
  room_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.RoomLoginReq.room_key)
}
#if LANG_CXX11
inline void RoomLoginReq::set_room_key(::std::string&& value) {
  set_has_room_key();
  room_key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.RoomLoginReq.room_key)
}
#endif
inline void RoomLoginReq::set_room_key(const char* value) {
  set_has_room_key();
  room_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.RoomLoginReq.room_key)
}
inline void RoomLoginReq::set_room_key(const char* value, size_t size) {
  set_has_room_key();
  room_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.RoomLoginReq.room_key)
}
inline ::std::string* RoomLoginReq::mutable_room_key() {
  set_has_room_key();
  // @@protoc_insertion_point(field_mutable:pb.RoomLoginReq.room_key)
  return room_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RoomLoginReq::release_room_key() {
  // @@protoc_insertion_point(field_release:pb.RoomLoginReq.room_key)
  clear_has_room_key();
  return room_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RoomLoginReq::set_allocated_room_key(::std::string* room_key) {
  if (room_key != NULL) {
    set_has_room_key();
  } else {
    clear_has_room_key();
  }
  room_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), room_key);
  // @@protoc_insertion_point(field_set_allocated:pb.RoomLoginReq.room_key)
}

// required uint32 job = 4;
inline bool RoomLoginReq::has_job() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RoomLoginReq::set_has_job() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RoomLoginReq::clear_has_job() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RoomLoginReq::clear_job() {
  job_ = 0u;
  clear_has_job();
}
inline ::google::protobuf::uint32 RoomLoginReq::job() const {
  // @@protoc_insertion_point(field_get:pb.RoomLoginReq.job)
  return job_;
}
inline void RoomLoginReq::set_job(::google::protobuf::uint32 value) {
  set_has_job();
  job_ = value;
  // @@protoc_insertion_point(field_set:pb.RoomLoginReq.job)
}

// -------------------------------------------------------------------

// RoomLoginRes

// required uint32 id = 1;
inline bool RoomLoginRes::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoomLoginRes::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RoomLoginRes::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RoomLoginRes::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 RoomLoginRes::id() const {
  // @@protoc_insertion_point(field_get:pb.RoomLoginRes.id)
  return id_;
}
inline void RoomLoginRes::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:pb.RoomLoginRes.id)
}

// required .pb.RoomSnapShot snap_shot = 3;
inline bool RoomLoginRes::has_snap_shot() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoomLoginRes::set_has_snap_shot() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoomLoginRes::clear_has_snap_shot() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoomLoginRes::clear_snap_shot() {
  if (snap_shot_ != NULL) snap_shot_->::pb::RoomSnapShot::Clear();
  clear_has_snap_shot();
}
inline const ::pb::RoomSnapShot& RoomLoginRes::snap_shot() const {
  // @@protoc_insertion_point(field_get:pb.RoomLoginRes.snap_shot)
  return snap_shot_ != NULL ? *snap_shot_
                         : *::pb::RoomSnapShot::internal_default_instance();
}
inline ::pb::RoomSnapShot* RoomLoginRes::mutable_snap_shot() {
  set_has_snap_shot();
  if (snap_shot_ == NULL) {
    snap_shot_ = new ::pb::RoomSnapShot;
  }
  // @@protoc_insertion_point(field_mutable:pb.RoomLoginRes.snap_shot)
  return snap_shot_;
}
inline ::pb::RoomSnapShot* RoomLoginRes::release_snap_shot() {
  // @@protoc_insertion_point(field_release:pb.RoomLoginRes.snap_shot)
  clear_has_snap_shot();
  ::pb::RoomSnapShot* temp = snap_shot_;
  snap_shot_ = NULL;
  return temp;
}
inline void RoomLoginRes::set_allocated_snap_shot(::pb::RoomSnapShot* snap_shot) {
  delete snap_shot_;
  snap_shot_ = snap_shot;
  if (snap_shot) {
    set_has_snap_shot();
  } else {
    clear_has_snap_shot();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.RoomLoginRes.snap_shot)
}

// -------------------------------------------------------------------

// RoomPlayerAdd

// required .pb.RoomPlayer player = 1;
inline bool RoomPlayerAdd::has_player() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoomPlayerAdd::set_has_player() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoomPlayerAdd::clear_has_player() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoomPlayerAdd::clear_player() {
  if (player_ != NULL) player_->::pb::RoomPlayer::Clear();
  clear_has_player();
}
inline const ::pb::RoomPlayer& RoomPlayerAdd::player() const {
  // @@protoc_insertion_point(field_get:pb.RoomPlayerAdd.player)
  return player_ != NULL ? *player_
                         : *::pb::RoomPlayer::internal_default_instance();
}
inline ::pb::RoomPlayer* RoomPlayerAdd::mutable_player() {
  set_has_player();
  if (player_ == NULL) {
    player_ = new ::pb::RoomPlayer;
  }
  // @@protoc_insertion_point(field_mutable:pb.RoomPlayerAdd.player)
  return player_;
}
inline ::pb::RoomPlayer* RoomPlayerAdd::release_player() {
  // @@protoc_insertion_point(field_release:pb.RoomPlayerAdd.player)
  clear_has_player();
  ::pb::RoomPlayer* temp = player_;
  player_ = NULL;
  return temp;
}
inline void RoomPlayerAdd::set_allocated_player(::pb::RoomPlayer* player) {
  delete player_;
  player_ = player;
  if (player) {
    set_has_player();
  } else {
    clear_has_player();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.RoomPlayerAdd.player)
}

// -------------------------------------------------------------------

// RoomPlayerRemove

// required uint32 id = 1;
inline bool RoomPlayerRemove::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoomPlayerRemove::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoomPlayerRemove::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoomPlayerRemove::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 RoomPlayerRemove::id() const {
  // @@protoc_insertion_point(field_get:pb.RoomPlayerRemove.id)
  return id_;
}
inline void RoomPlayerRemove::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:pb.RoomPlayerRemove.id)
}

// -------------------------------------------------------------------

// Frame

// required uint32 cmd = 1;
inline bool Frame::has_cmd() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Frame::set_has_cmd() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Frame::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Frame::clear_cmd() {
  cmd_ = 0u;
  clear_has_cmd();
}
inline ::google::protobuf::uint32 Frame::cmd() const {
  // @@protoc_insertion_point(field_get:pb.Frame.cmd)
  return cmd_;
}
inline void Frame::set_cmd(::google::protobuf::uint32 value) {
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:pb.Frame.cmd)
}

// required bytes data = 2;
inline bool Frame::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Frame::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Frame::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Frame::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
inline const ::std::string& Frame::data() const {
  // @@protoc_insertion_point(field_get:pb.Frame.data)
  return data_.GetNoArena();
}
inline void Frame::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.Frame.data)
}
#if LANG_CXX11
inline void Frame::set_data(::std::string&& value) {
  set_has_data();
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.Frame.data)
}
#endif
inline void Frame::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.Frame.data)
}
inline void Frame::set_data(const void* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.Frame.data)
}
inline ::std::string* Frame::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:pb.Frame.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Frame::release_data() {
  // @@protoc_insertion_point(field_release:pb.Frame.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Frame::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:pb.Frame.data)
}

// -------------------------------------------------------------------

// RoomFrameNotify

// required uint32 frame = 1;
inline bool RoomFrameNotify::has_frame() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoomFrameNotify::set_has_frame() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoomFrameNotify::clear_has_frame() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoomFrameNotify::clear_frame() {
  frame_ = 0u;
  clear_has_frame();
}
inline ::google::protobuf::uint32 RoomFrameNotify::frame() const {
  // @@protoc_insertion_point(field_get:pb.RoomFrameNotify.frame)
  return frame_;
}
inline void RoomFrameNotify::set_frame(::google::protobuf::uint32 value) {
  set_has_frame();
  frame_ = value;
  // @@protoc_insertion_point(field_set:pb.RoomFrameNotify.frame)
}

// repeated .pb.Frame list = 2;
inline int RoomFrameNotify::list_size() const {
  return list_.size();
}
inline void RoomFrameNotify::clear_list() {
  list_.Clear();
}
inline const ::pb::Frame& RoomFrameNotify::list(int index) const {
  // @@protoc_insertion_point(field_get:pb.RoomFrameNotify.list)
  return list_.Get(index);
}
inline ::pb::Frame* RoomFrameNotify::mutable_list(int index) {
  // @@protoc_insertion_point(field_mutable:pb.RoomFrameNotify.list)
  return list_.Mutable(index);
}
inline ::pb::Frame* RoomFrameNotify::add_list() {
  // @@protoc_insertion_point(field_add:pb.RoomFrameNotify.list)
  return list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::pb::Frame >*
RoomFrameNotify::mutable_list() {
  // @@protoc_insertion_point(field_mutable_list:pb.RoomFrameNotify.list)
  return &list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::Frame >&
RoomFrameNotify::list() const {
  // @@protoc_insertion_point(field_list:pb.RoomFrameNotify.list)
  return list_;
}

// -------------------------------------------------------------------

// RoomLadderNotify_Item

// required uint32 id = 1;
inline bool RoomLadderNotify_Item::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoomLadderNotify_Item::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoomLadderNotify_Item::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoomLadderNotify_Item::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 RoomLadderNotify_Item::id() const {
  // @@protoc_insertion_point(field_get:pb.RoomLadderNotify.Item.id)
  return id_;
}
inline void RoomLadderNotify_Item::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:pb.RoomLadderNotify.Item.id)
}

// required int32 score = 2;
inline bool RoomLadderNotify_Item::has_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoomLadderNotify_Item::set_has_score() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RoomLadderNotify_Item::clear_has_score() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RoomLadderNotify_Item::clear_score() {
  score_ = 0;
  clear_has_score();
}
inline ::google::protobuf::int32 RoomLadderNotify_Item::score() const {
  // @@protoc_insertion_point(field_get:pb.RoomLadderNotify.Item.score)
  return score_;
}
inline void RoomLadderNotify_Item::set_score(::google::protobuf::int32 value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:pb.RoomLadderNotify.Item.score)
}

// required uint32 kill_times = 3;
inline bool RoomLadderNotify_Item::has_kill_times() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RoomLadderNotify_Item::set_has_kill_times() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RoomLadderNotify_Item::clear_has_kill_times() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RoomLadderNotify_Item::clear_kill_times() {
  kill_times_ = 0u;
  clear_has_kill_times();
}
inline ::google::protobuf::uint32 RoomLadderNotify_Item::kill_times() const {
  // @@protoc_insertion_point(field_get:pb.RoomLadderNotify.Item.kill_times)
  return kill_times_;
}
inline void RoomLadderNotify_Item::set_kill_times(::google::protobuf::uint32 value) {
  set_has_kill_times();
  kill_times_ = value;
  // @@protoc_insertion_point(field_set:pb.RoomLadderNotify.Item.kill_times)
}

// required uint32 dead_times = 4;
inline bool RoomLadderNotify_Item::has_dead_times() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RoomLadderNotify_Item::set_has_dead_times() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RoomLadderNotify_Item::clear_has_dead_times() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RoomLadderNotify_Item::clear_dead_times() {
  dead_times_ = 0u;
  clear_has_dead_times();
}
inline ::google::protobuf::uint32 RoomLadderNotify_Item::dead_times() const {
  // @@protoc_insertion_point(field_get:pb.RoomLadderNotify.Item.dead_times)
  return dead_times_;
}
inline void RoomLadderNotify_Item::set_dead_times(::google::protobuf::uint32 value) {
  set_has_dead_times();
  dead_times_ = value;
  // @@protoc_insertion_point(field_set:pb.RoomLadderNotify.Item.dead_times)
}

// -------------------------------------------------------------------

// RoomLadderNotify

// repeated .pb.RoomLadderNotify.Item items = 1;
inline int RoomLadderNotify::items_size() const {
  return items_.size();
}
inline void RoomLadderNotify::clear_items() {
  items_.Clear();
}
inline const ::pb::RoomLadderNotify_Item& RoomLadderNotify::items(int index) const {
  // @@protoc_insertion_point(field_get:pb.RoomLadderNotify.items)
  return items_.Get(index);
}
inline ::pb::RoomLadderNotify_Item* RoomLadderNotify::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:pb.RoomLadderNotify.items)
  return items_.Mutable(index);
}
inline ::pb::RoomLadderNotify_Item* RoomLadderNotify::add_items() {
  // @@protoc_insertion_point(field_add:pb.RoomLadderNotify.items)
  return items_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::pb::RoomLadderNotify_Item >*
RoomLadderNotify::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:pb.RoomLadderNotify.items)
  return &items_;
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::RoomLadderNotify_Item >&
RoomLadderNotify::items() const {
  // @@protoc_insertion_point(field_list:pb.RoomLadderNotify.items)
  return items_;
}

// -------------------------------------------------------------------

// RoomPlayerMoveReq

// required .pb.Vector pos = 1;
inline bool RoomPlayerMoveReq::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoomPlayerMoveReq::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoomPlayerMoveReq::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoomPlayerMoveReq::clear_pos() {
  if (pos_ != NULL) pos_->::pb::Vector::Clear();
  clear_has_pos();
}
inline const ::pb::Vector& RoomPlayerMoveReq::pos() const {
  // @@protoc_insertion_point(field_get:pb.RoomPlayerMoveReq.pos)
  return pos_ != NULL ? *pos_
                         : *::pb::Vector::internal_default_instance();
}
inline ::pb::Vector* RoomPlayerMoveReq::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) {
    pos_ = new ::pb::Vector;
  }
  // @@protoc_insertion_point(field_mutable:pb.RoomPlayerMoveReq.pos)
  return pos_;
}
inline ::pb::Vector* RoomPlayerMoveReq::release_pos() {
  // @@protoc_insertion_point(field_release:pb.RoomPlayerMoveReq.pos)
  clear_has_pos();
  ::pb::Vector* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void RoomPlayerMoveReq::set_allocated_pos(::pb::Vector* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.RoomPlayerMoveReq.pos)
}

// required .pb.Vector dir = 2;
inline bool RoomPlayerMoveReq::has_dir() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoomPlayerMoveReq::set_has_dir() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RoomPlayerMoveReq::clear_has_dir() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RoomPlayerMoveReq::clear_dir() {
  if (dir_ != NULL) dir_->::pb::Vector::Clear();
  clear_has_dir();
}
inline const ::pb::Vector& RoomPlayerMoveReq::dir() const {
  // @@protoc_insertion_point(field_get:pb.RoomPlayerMoveReq.dir)
  return dir_ != NULL ? *dir_
                         : *::pb::Vector::internal_default_instance();
}
inline ::pb::Vector* RoomPlayerMoveReq::mutable_dir() {
  set_has_dir();
  if (dir_ == NULL) {
    dir_ = new ::pb::Vector;
  }
  // @@protoc_insertion_point(field_mutable:pb.RoomPlayerMoveReq.dir)
  return dir_;
}
inline ::pb::Vector* RoomPlayerMoveReq::release_dir() {
  // @@protoc_insertion_point(field_release:pb.RoomPlayerMoveReq.dir)
  clear_has_dir();
  ::pb::Vector* temp = dir_;
  dir_ = NULL;
  return temp;
}
inline void RoomPlayerMoveReq::set_allocated_dir(::pb::Vector* dir) {
  delete dir_;
  dir_ = dir;
  if (dir) {
    set_has_dir();
  } else {
    clear_has_dir();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.RoomPlayerMoveReq.dir)
}

// -------------------------------------------------------------------

// RoomPlayerDragRes

// required .pb.Vector pos = 1;
inline bool RoomPlayerDragRes::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoomPlayerDragRes::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoomPlayerDragRes::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoomPlayerDragRes::clear_pos() {
  if (pos_ != NULL) pos_->::pb::Vector::Clear();
  clear_has_pos();
}
inline const ::pb::Vector& RoomPlayerDragRes::pos() const {
  // @@protoc_insertion_point(field_get:pb.RoomPlayerDragRes.pos)
  return pos_ != NULL ? *pos_
                         : *::pb::Vector::internal_default_instance();
}
inline ::pb::Vector* RoomPlayerDragRes::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) {
    pos_ = new ::pb::Vector;
  }
  // @@protoc_insertion_point(field_mutable:pb.RoomPlayerDragRes.pos)
  return pos_;
}
inline ::pb::Vector* RoomPlayerDragRes::release_pos() {
  // @@protoc_insertion_point(field_release:pb.RoomPlayerDragRes.pos)
  clear_has_pos();
  ::pb::Vector* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void RoomPlayerDragRes::set_allocated_pos(::pb::Vector* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.RoomPlayerDragRes.pos)
}

// required .pb.Vector dir = 2;
inline bool RoomPlayerDragRes::has_dir() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoomPlayerDragRes::set_has_dir() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RoomPlayerDragRes::clear_has_dir() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RoomPlayerDragRes::clear_dir() {
  if (dir_ != NULL) dir_->::pb::Vector::Clear();
  clear_has_dir();
}
inline const ::pb::Vector& RoomPlayerDragRes::dir() const {
  // @@protoc_insertion_point(field_get:pb.RoomPlayerDragRes.dir)
  return dir_ != NULL ? *dir_
                         : *::pb::Vector::internal_default_instance();
}
inline ::pb::Vector* RoomPlayerDragRes::mutable_dir() {
  set_has_dir();
  if (dir_ == NULL) {
    dir_ = new ::pb::Vector;
  }
  // @@protoc_insertion_point(field_mutable:pb.RoomPlayerDragRes.dir)
  return dir_;
}
inline ::pb::Vector* RoomPlayerDragRes::release_dir() {
  // @@protoc_insertion_point(field_release:pb.RoomPlayerDragRes.dir)
  clear_has_dir();
  ::pb::Vector* temp = dir_;
  dir_ = NULL;
  return temp;
}
inline void RoomPlayerDragRes::set_allocated_dir(::pb::Vector* dir) {
  delete dir_;
  dir_ = dir;
  if (dir) {
    set_has_dir();
  } else {
    clear_has_dir();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.RoomPlayerDragRes.dir)
}

// -------------------------------------------------------------------

// RoomPlayerDragEndReq

// -------------------------------------------------------------------

// RoomPlayerReliveReq

// required uint32 job = 1;
inline bool RoomPlayerReliveReq::has_job() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoomPlayerReliveReq::set_has_job() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoomPlayerReliveReq::clear_has_job() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoomPlayerReliveReq::clear_job() {
  job_ = 0u;
  clear_has_job();
}
inline ::google::protobuf::uint32 RoomPlayerReliveReq::job() const {
  // @@protoc_insertion_point(field_get:pb.RoomPlayerReliveReq.job)
  return job_;
}
inline void RoomPlayerReliveReq::set_job(::google::protobuf::uint32 value) {
  set_has_job();
  job_ = value;
  // @@protoc_insertion_point(field_set:pb.RoomPlayerReliveReq.job)
}

// -------------------------------------------------------------------

// RoomPlayerStopReq

// required .pb.Vector pos = 1;
inline bool RoomPlayerStopReq::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoomPlayerStopReq::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoomPlayerStopReq::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoomPlayerStopReq::clear_pos() {
  if (pos_ != NULL) pos_->::pb::Vector::Clear();
  clear_has_pos();
}
inline const ::pb::Vector& RoomPlayerStopReq::pos() const {
  // @@protoc_insertion_point(field_get:pb.RoomPlayerStopReq.pos)
  return pos_ != NULL ? *pos_
                         : *::pb::Vector::internal_default_instance();
}
inline ::pb::Vector* RoomPlayerStopReq::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) {
    pos_ = new ::pb::Vector;
  }
  // @@protoc_insertion_point(field_mutable:pb.RoomPlayerStopReq.pos)
  return pos_;
}
inline ::pb::Vector* RoomPlayerStopReq::release_pos() {
  // @@protoc_insertion_point(field_release:pb.RoomPlayerStopReq.pos)
  clear_has_pos();
  ::pb::Vector* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void RoomPlayerStopReq::set_allocated_pos(::pb::Vector* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.RoomPlayerStopReq.pos)
}

// required .pb.Vector dir = 2;
inline bool RoomPlayerStopReq::has_dir() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoomPlayerStopReq::set_has_dir() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RoomPlayerStopReq::clear_has_dir() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RoomPlayerStopReq::clear_dir() {
  if (dir_ != NULL) dir_->::pb::Vector::Clear();
  clear_has_dir();
}
inline const ::pb::Vector& RoomPlayerStopReq::dir() const {
  // @@protoc_insertion_point(field_get:pb.RoomPlayerStopReq.dir)
  return dir_ != NULL ? *dir_
                         : *::pb::Vector::internal_default_instance();
}
inline ::pb::Vector* RoomPlayerStopReq::mutable_dir() {
  set_has_dir();
  if (dir_ == NULL) {
    dir_ = new ::pb::Vector;
  }
  // @@protoc_insertion_point(field_mutable:pb.RoomPlayerStopReq.dir)
  return dir_;
}
inline ::pb::Vector* RoomPlayerStopReq::release_dir() {
  // @@protoc_insertion_point(field_release:pb.RoomPlayerStopReq.dir)
  clear_has_dir();
  ::pb::Vector* temp = dir_;
  dir_ = NULL;
  return temp;
}
inline void RoomPlayerStopReq::set_allocated_dir(::pb::Vector* dir) {
  delete dir_;
  dir_ = dir;
  if (dir) {
    set_has_dir();
  } else {
    clear_has_dir();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.RoomPlayerStopReq.dir)
}

// -------------------------------------------------------------------

// SpellStartReq

// required uint32 xml_id = 1;
inline bool SpellStartReq::has_xml_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SpellStartReq::set_has_xml_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SpellStartReq::clear_has_xml_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SpellStartReq::clear_xml_id() {
  xml_id_ = 0u;
  clear_has_xml_id();
}
inline ::google::protobuf::uint32 SpellStartReq::xml_id() const {
  // @@protoc_insertion_point(field_get:pb.SpellStartReq.xml_id)
  return xml_id_;
}
inline void SpellStartReq::set_xml_id(::google::protobuf::uint32 value) {
  set_has_xml_id();
  xml_id_ = value;
  // @@protoc_insertion_point(field_set:pb.SpellStartReq.xml_id)
}

// required .pb.Vector pos = 2;
inline bool SpellStartReq::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SpellStartReq::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SpellStartReq::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SpellStartReq::clear_pos() {
  if (pos_ != NULL) pos_->::pb::Vector::Clear();
  clear_has_pos();
}
inline const ::pb::Vector& SpellStartReq::pos() const {
  // @@protoc_insertion_point(field_get:pb.SpellStartReq.pos)
  return pos_ != NULL ? *pos_
                         : *::pb::Vector::internal_default_instance();
}
inline ::pb::Vector* SpellStartReq::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) {
    pos_ = new ::pb::Vector;
  }
  // @@protoc_insertion_point(field_mutable:pb.SpellStartReq.pos)
  return pos_;
}
inline ::pb::Vector* SpellStartReq::release_pos() {
  // @@protoc_insertion_point(field_release:pb.SpellStartReq.pos)
  clear_has_pos();
  ::pb::Vector* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void SpellStartReq::set_allocated_pos(::pb::Vector* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.SpellStartReq.pos)
}

// required .pb.Vector dir = 3;
inline bool SpellStartReq::has_dir() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SpellStartReq::set_has_dir() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SpellStartReq::clear_has_dir() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SpellStartReq::clear_dir() {
  if (dir_ != NULL) dir_->::pb::Vector::Clear();
  clear_has_dir();
}
inline const ::pb::Vector& SpellStartReq::dir() const {
  // @@protoc_insertion_point(field_get:pb.SpellStartReq.dir)
  return dir_ != NULL ? *dir_
                         : *::pb::Vector::internal_default_instance();
}
inline ::pb::Vector* SpellStartReq::mutable_dir() {
  set_has_dir();
  if (dir_ == NULL) {
    dir_ = new ::pb::Vector;
  }
  // @@protoc_insertion_point(field_mutable:pb.SpellStartReq.dir)
  return dir_;
}
inline ::pb::Vector* SpellStartReq::release_dir() {
  // @@protoc_insertion_point(field_release:pb.SpellStartReq.dir)
  clear_has_dir();
  ::pb::Vector* temp = dir_;
  dir_ = NULL;
  return temp;
}
inline void SpellStartReq::set_allocated_dir(::pb::Vector* dir) {
  delete dir_;
  dir_ = dir;
  if (dir) {
    set_has_dir();
  } else {
    clear_has_dir();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.SpellStartReq.dir)
}

// -------------------------------------------------------------------

// SpellLevelUpReq

// required uint32 xml_id = 1;
inline bool SpellLevelUpReq::has_xml_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SpellLevelUpReq::set_has_xml_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SpellLevelUpReq::clear_has_xml_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SpellLevelUpReq::clear_xml_id() {
  xml_id_ = 0u;
  clear_has_xml_id();
}
inline ::google::protobuf::uint32 SpellLevelUpReq::xml_id() const {
  // @@protoc_insertion_point(field_get:pb.SpellLevelUpReq.xml_id)
  return xml_id_;
}
inline void SpellLevelUpReq::set_xml_id(::google::protobuf::uint32 value) {
  set_has_xml_id();
  xml_id_ = value;
  // @@protoc_insertion_point(field_set:pb.SpellLevelUpReq.xml_id)
}

// -------------------------------------------------------------------

// KillNotify_KillInfo

// required uint32 catalog = 1;
inline bool KillNotify_KillInfo::has_catalog() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void KillNotify_KillInfo::set_has_catalog() {
  _has_bits_[0] |= 0x00000001u;
}
inline void KillNotify_KillInfo::clear_has_catalog() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void KillNotify_KillInfo::clear_catalog() {
  catalog_ = 0u;
  clear_has_catalog();
}
inline ::google::protobuf::uint32 KillNotify_KillInfo::catalog() const {
  // @@protoc_insertion_point(field_get:pb.KillNotify.KillInfo.catalog)
  return catalog_;
}
inline void KillNotify_KillInfo::set_catalog(::google::protobuf::uint32 value) {
  set_has_catalog();
  catalog_ = value;
  // @@protoc_insertion_point(field_set:pb.KillNotify.KillInfo.catalog)
}

// required uint32 number = 2;
inline bool KillNotify_KillInfo::has_number() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void KillNotify_KillInfo::set_has_number() {
  _has_bits_[0] |= 0x00000002u;
}
inline void KillNotify_KillInfo::clear_has_number() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void KillNotify_KillInfo::clear_number() {
  number_ = 0u;
  clear_has_number();
}
inline ::google::protobuf::uint32 KillNotify_KillInfo::number() const {
  // @@protoc_insertion_point(field_get:pb.KillNotify.KillInfo.number)
  return number_;
}
inline void KillNotify_KillInfo::set_number(::google::protobuf::uint32 value) {
  set_has_number();
  number_ = value;
  // @@protoc_insertion_point(field_set:pb.KillNotify.KillInfo.number)
}

// -------------------------------------------------------------------

// KillNotify

// required uint32 player_id = 1;
inline bool KillNotify::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void KillNotify::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void KillNotify::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void KillNotify::clear_player_id() {
  player_id_ = 0u;
  clear_has_player_id();
}
inline ::google::protobuf::uint32 KillNotify::player_id() const {
  // @@protoc_insertion_point(field_get:pb.KillNotify.player_id)
  return player_id_;
}
inline void KillNotify::set_player_id(::google::protobuf::uint32 value) {
  set_has_player_id();
  player_id_ = value;
  // @@protoc_insertion_point(field_set:pb.KillNotify.player_id)
}

// required uint32 killed_id = 2;
inline bool KillNotify::has_killed_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void KillNotify::set_has_killed_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void KillNotify::clear_has_killed_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void KillNotify::clear_killed_id() {
  killed_id_ = 0u;
  clear_has_killed_id();
}
inline ::google::protobuf::uint32 KillNotify::killed_id() const {
  // @@protoc_insertion_point(field_get:pb.KillNotify.killed_id)
  return killed_id_;
}
inline void KillNotify::set_killed_id(::google::protobuf::uint32 value) {
  set_has_killed_id();
  killed_id_ = value;
  // @@protoc_insertion_point(field_set:pb.KillNotify.killed_id)
}

// repeated .pb.KillNotify.KillInfo info = 3;
inline int KillNotify::info_size() const {
  return info_.size();
}
inline void KillNotify::clear_info() {
  info_.Clear();
}
inline const ::pb::KillNotify_KillInfo& KillNotify::info(int index) const {
  // @@protoc_insertion_point(field_get:pb.KillNotify.info)
  return info_.Get(index);
}
inline ::pb::KillNotify_KillInfo* KillNotify::mutable_info(int index) {
  // @@protoc_insertion_point(field_mutable:pb.KillNotify.info)
  return info_.Mutable(index);
}
inline ::pb::KillNotify_KillInfo* KillNotify::add_info() {
  // @@protoc_insertion_point(field_add:pb.KillNotify.info)
  return info_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::pb::KillNotify_KillInfo >*
KillNotify::mutable_info() {
  // @@protoc_insertion_point(field_mutable_list:pb.KillNotify.info)
  return &info_;
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::KillNotify_KillInfo >&
KillNotify::info() const {
  // @@protoc_insertion_point(field_list:pb.KillNotify.info)
  return info_;
}

// -------------------------------------------------------------------

// RoomPingReq

// -------------------------------------------------------------------

// RoomPingRes

// required uint32 cur_frame = 1;
inline bool RoomPingRes::has_cur_frame() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoomPingRes::set_has_cur_frame() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoomPingRes::clear_has_cur_frame() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoomPingRes::clear_cur_frame() {
  cur_frame_ = 0u;
  clear_has_cur_frame();
}
inline ::google::protobuf::uint32 RoomPingRes::cur_frame() const {
  // @@protoc_insertion_point(field_get:pb.RoomPingRes.cur_frame)
  return cur_frame_;
}
inline void RoomPingRes::set_cur_frame(::google::protobuf::uint32 value) {
  set_has_cur_frame();
  cur_frame_ = value;
  // @@protoc_insertion_point(field_set:pb.RoomPingRes.cur_frame)
}

// -------------------------------------------------------------------

// FrameMove

// required uint32 id = 1;
inline bool FrameMove::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FrameMove::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FrameMove::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FrameMove::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 FrameMove::id() const {
  // @@protoc_insertion_point(field_get:pb.FrameMove.id)
  return id_;
}
inline void FrameMove::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:pb.FrameMove.id)
}

// required .pb.Vector pos = 2;
inline bool FrameMove::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FrameMove::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FrameMove::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FrameMove::clear_pos() {
  if (pos_ != NULL) pos_->::pb::Vector::Clear();
  clear_has_pos();
}
inline const ::pb::Vector& FrameMove::pos() const {
  // @@protoc_insertion_point(field_get:pb.FrameMove.pos)
  return pos_ != NULL ? *pos_
                         : *::pb::Vector::internal_default_instance();
}
inline ::pb::Vector* FrameMove::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) {
    pos_ = new ::pb::Vector;
  }
  // @@protoc_insertion_point(field_mutable:pb.FrameMove.pos)
  return pos_;
}
inline ::pb::Vector* FrameMove::release_pos() {
  // @@protoc_insertion_point(field_release:pb.FrameMove.pos)
  clear_has_pos();
  ::pb::Vector* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void FrameMove::set_allocated_pos(::pb::Vector* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.FrameMove.pos)
}

// required .pb.Vector dir = 3;
inline bool FrameMove::has_dir() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FrameMove::set_has_dir() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FrameMove::clear_has_dir() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FrameMove::clear_dir() {
  if (dir_ != NULL) dir_->::pb::Vector::Clear();
  clear_has_dir();
}
inline const ::pb::Vector& FrameMove::dir() const {
  // @@protoc_insertion_point(field_get:pb.FrameMove.dir)
  return dir_ != NULL ? *dir_
                         : *::pb::Vector::internal_default_instance();
}
inline ::pb::Vector* FrameMove::mutable_dir() {
  set_has_dir();
  if (dir_ == NULL) {
    dir_ = new ::pb::Vector;
  }
  // @@protoc_insertion_point(field_mutable:pb.FrameMove.dir)
  return dir_;
}
inline ::pb::Vector* FrameMove::release_dir() {
  // @@protoc_insertion_point(field_release:pb.FrameMove.dir)
  clear_has_dir();
  ::pb::Vector* temp = dir_;
  dir_ = NULL;
  return temp;
}
inline void FrameMove::set_allocated_dir(::pb::Vector* dir) {
  delete dir_;
  dir_ = dir;
  if (dir) {
    set_has_dir();
  } else {
    clear_has_dir();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.FrameMove.dir)
}

// -------------------------------------------------------------------

// FrameMoveTest

// required uint32 id = 1;
inline bool FrameMoveTest::has_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FrameMoveTest::set_has_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FrameMoveTest::clear_has_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FrameMoveTest::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 FrameMoveTest::id() const {
  // @@protoc_insertion_point(field_get:pb.FrameMoveTest.id)
  return id_;
}
inline void FrameMoveTest::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:pb.FrameMoveTest.id)
}

// required .pb.Vector pos = 2;
inline bool FrameMoveTest::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FrameMoveTest::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FrameMoveTest::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FrameMoveTest::clear_pos() {
  if (pos_ != NULL) pos_->::pb::Vector::Clear();
  clear_has_pos();
}
inline const ::pb::Vector& FrameMoveTest::pos() const {
  // @@protoc_insertion_point(field_get:pb.FrameMoveTest.pos)
  return pos_ != NULL ? *pos_
                         : *::pb::Vector::internal_default_instance();
}
inline ::pb::Vector* FrameMoveTest::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) {
    pos_ = new ::pb::Vector;
  }
  // @@protoc_insertion_point(field_mutable:pb.FrameMoveTest.pos)
  return pos_;
}
inline ::pb::Vector* FrameMoveTest::release_pos() {
  // @@protoc_insertion_point(field_release:pb.FrameMoveTest.pos)
  clear_has_pos();
  ::pb::Vector* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void FrameMoveTest::set_allocated_pos(::pb::Vector* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.FrameMoveTest.pos)
}

// required .pb.Vector dir = 3;
inline bool FrameMoveTest::has_dir() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FrameMoveTest::set_has_dir() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FrameMoveTest::clear_has_dir() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FrameMoveTest::clear_dir() {
  if (dir_ != NULL) dir_->::pb::Vector::Clear();
  clear_has_dir();
}
inline const ::pb::Vector& FrameMoveTest::dir() const {
  // @@protoc_insertion_point(field_get:pb.FrameMoveTest.dir)
  return dir_ != NULL ? *dir_
                         : *::pb::Vector::internal_default_instance();
}
inline ::pb::Vector* FrameMoveTest::mutable_dir() {
  set_has_dir();
  if (dir_ == NULL) {
    dir_ = new ::pb::Vector;
  }
  // @@protoc_insertion_point(field_mutable:pb.FrameMoveTest.dir)
  return dir_;
}
inline ::pb::Vector* FrameMoveTest::release_dir() {
  // @@protoc_insertion_point(field_release:pb.FrameMoveTest.dir)
  clear_has_dir();
  ::pb::Vector* temp = dir_;
  dir_ = NULL;
  return temp;
}
inline void FrameMoveTest::set_allocated_dir(::pb::Vector* dir) {
  delete dir_;
  dir_ = dir;
  if (dir) {
    set_has_dir();
  } else {
    clear_has_dir();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.FrameMoveTest.dir)
}

// required .pb.Vector pre_pos = 4;
inline bool FrameMoveTest::has_pre_pos() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FrameMoveTest::set_has_pre_pos() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FrameMoveTest::clear_has_pre_pos() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FrameMoveTest::clear_pre_pos() {
  if (pre_pos_ != NULL) pre_pos_->::pb::Vector::Clear();
  clear_has_pre_pos();
}
inline const ::pb::Vector& FrameMoveTest::pre_pos() const {
  // @@protoc_insertion_point(field_get:pb.FrameMoveTest.pre_pos)
  return pre_pos_ != NULL ? *pre_pos_
                         : *::pb::Vector::internal_default_instance();
}
inline ::pb::Vector* FrameMoveTest::mutable_pre_pos() {
  set_has_pre_pos();
  if (pre_pos_ == NULL) {
    pre_pos_ = new ::pb::Vector;
  }
  // @@protoc_insertion_point(field_mutable:pb.FrameMoveTest.pre_pos)
  return pre_pos_;
}
inline ::pb::Vector* FrameMoveTest::release_pre_pos() {
  // @@protoc_insertion_point(field_release:pb.FrameMoveTest.pre_pos)
  clear_has_pre_pos();
  ::pb::Vector* temp = pre_pos_;
  pre_pos_ = NULL;
  return temp;
}
inline void FrameMoveTest::set_allocated_pre_pos(::pb::Vector* pre_pos) {
  delete pre_pos_;
  pre_pos_ = pre_pos;
  if (pre_pos) {
    set_has_pre_pos();
  } else {
    clear_has_pre_pos();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.FrameMoveTest.pre_pos)
}

// -------------------------------------------------------------------

// FrameStop

// required uint32 id = 1;
inline bool FrameStop::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FrameStop::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FrameStop::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FrameStop::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 FrameStop::id() const {
  // @@protoc_insertion_point(field_get:pb.FrameStop.id)
  return id_;
}
inline void FrameStop::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:pb.FrameStop.id)
}

// required .pb.Vector pos = 2;
inline bool FrameStop::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FrameStop::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FrameStop::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FrameStop::clear_pos() {
  if (pos_ != NULL) pos_->::pb::Vector::Clear();
  clear_has_pos();
}
inline const ::pb::Vector& FrameStop::pos() const {
  // @@protoc_insertion_point(field_get:pb.FrameStop.pos)
  return pos_ != NULL ? *pos_
                         : *::pb::Vector::internal_default_instance();
}
inline ::pb::Vector* FrameStop::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) {
    pos_ = new ::pb::Vector;
  }
  // @@protoc_insertion_point(field_mutable:pb.FrameStop.pos)
  return pos_;
}
inline ::pb::Vector* FrameStop::release_pos() {
  // @@protoc_insertion_point(field_release:pb.FrameStop.pos)
  clear_has_pos();
  ::pb::Vector* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void FrameStop::set_allocated_pos(::pb::Vector* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.FrameStop.pos)
}

// required .pb.Vector dir = 3;
inline bool FrameStop::has_dir() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FrameStop::set_has_dir() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FrameStop::clear_has_dir() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FrameStop::clear_dir() {
  if (dir_ != NULL) dir_->::pb::Vector::Clear();
  clear_has_dir();
}
inline const ::pb::Vector& FrameStop::dir() const {
  // @@protoc_insertion_point(field_get:pb.FrameStop.dir)
  return dir_ != NULL ? *dir_
                         : *::pb::Vector::internal_default_instance();
}
inline ::pb::Vector* FrameStop::mutable_dir() {
  set_has_dir();
  if (dir_ == NULL) {
    dir_ = new ::pb::Vector;
  }
  // @@protoc_insertion_point(field_mutable:pb.FrameStop.dir)
  return dir_;
}
inline ::pb::Vector* FrameStop::release_dir() {
  // @@protoc_insertion_point(field_release:pb.FrameStop.dir)
  clear_has_dir();
  ::pb::Vector* temp = dir_;
  dir_ = NULL;
  return temp;
}
inline void FrameStop::set_allocated_dir(::pb::Vector* dir) {
  delete dir_;
  dir_ = dir;
  if (dir) {
    set_has_dir();
  } else {
    clear_has_dir();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.FrameStop.dir)
}

// -------------------------------------------------------------------

// FrameDeath

// required uint32 id = 1;
inline bool FrameDeath::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FrameDeath::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FrameDeath::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FrameDeath::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 FrameDeath::id() const {
  // @@protoc_insertion_point(field_get:pb.FrameDeath.id)
  return id_;
}
inline void FrameDeath::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:pb.FrameDeath.id)
}

// required uint32 murderer_id = 2;
inline bool FrameDeath::has_murderer_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FrameDeath::set_has_murderer_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FrameDeath::clear_has_murderer_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FrameDeath::clear_murderer_id() {
  murderer_id_ = 0u;
  clear_has_murderer_id();
}
inline ::google::protobuf::uint32 FrameDeath::murderer_id() const {
  // @@protoc_insertion_point(field_get:pb.FrameDeath.murderer_id)
  return murderer_id_;
}
inline void FrameDeath::set_murderer_id(::google::protobuf::uint32 value) {
  set_has_murderer_id();
  murderer_id_ = value;
  // @@protoc_insertion_point(field_set:pb.FrameDeath.murderer_id)
}

// required uint32 murderer_cur_socre = 3;
inline bool FrameDeath::has_murderer_cur_socre() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FrameDeath::set_has_murderer_cur_socre() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FrameDeath::clear_has_murderer_cur_socre() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FrameDeath::clear_murderer_cur_socre() {
  murderer_cur_socre_ = 0u;
  clear_has_murderer_cur_socre();
}
inline ::google::protobuf::uint32 FrameDeath::murderer_cur_socre() const {
  // @@protoc_insertion_point(field_get:pb.FrameDeath.murderer_cur_socre)
  return murderer_cur_socre_;
}
inline void FrameDeath::set_murderer_cur_socre(::google::protobuf::uint32 value) {
  set_has_murderer_cur_socre();
  murderer_cur_socre_ = value;
  // @@protoc_insertion_point(field_set:pb.FrameDeath.murderer_cur_socre)
}

// required uint32 owner_cur_socre = 4;
inline bool FrameDeath::has_owner_cur_socre() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FrameDeath::set_has_owner_cur_socre() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FrameDeath::clear_has_owner_cur_socre() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FrameDeath::clear_owner_cur_socre() {
  owner_cur_socre_ = 0u;
  clear_has_owner_cur_socre();
}
inline ::google::protobuf::uint32 FrameDeath::owner_cur_socre() const {
  // @@protoc_insertion_point(field_get:pb.FrameDeath.owner_cur_socre)
  return owner_cur_socre_;
}
inline void FrameDeath::set_owner_cur_socre(::google::protobuf::uint32 value) {
  set_has_owner_cur_socre();
  owner_cur_socre_ = value;
  // @@protoc_insertion_point(field_set:pb.FrameDeath.owner_cur_socre)
}

// -------------------------------------------------------------------

// FrameRelive

// required .pb.RoomPlayer player = 1;
inline bool FrameRelive::has_player() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FrameRelive::set_has_player() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FrameRelive::clear_has_player() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FrameRelive::clear_player() {
  if (player_ != NULL) player_->::pb::RoomPlayer::Clear();
  clear_has_player();
}
inline const ::pb::RoomPlayer& FrameRelive::player() const {
  // @@protoc_insertion_point(field_get:pb.FrameRelive.player)
  return player_ != NULL ? *player_
                         : *::pb::RoomPlayer::internal_default_instance();
}
inline ::pb::RoomPlayer* FrameRelive::mutable_player() {
  set_has_player();
  if (player_ == NULL) {
    player_ = new ::pb::RoomPlayer;
  }
  // @@protoc_insertion_point(field_mutable:pb.FrameRelive.player)
  return player_;
}
inline ::pb::RoomPlayer* FrameRelive::release_player() {
  // @@protoc_insertion_point(field_release:pb.FrameRelive.player)
  clear_has_player();
  ::pb::RoomPlayer* temp = player_;
  player_ = NULL;
  return temp;
}
inline void FrameRelive::set_allocated_player(::pb::RoomPlayer* player) {
  delete player_;
  player_ = player;
  if (player) {
    set_has_player();
  } else {
    clear_has_player();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.FrameRelive.player)
}

// -------------------------------------------------------------------

// FrameActionStart

// required uint32 player_id = 1;
inline bool FrameActionStart::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FrameActionStart::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FrameActionStart::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FrameActionStart::clear_player_id() {
  player_id_ = 0u;
  clear_has_player_id();
}
inline ::google::protobuf::uint32 FrameActionStart::player_id() const {
  // @@protoc_insertion_point(field_get:pb.FrameActionStart.player_id)
  return player_id_;
}
inline void FrameActionStart::set_player_id(::google::protobuf::uint32 value) {
  set_has_player_id();
  player_id_ = value;
  // @@protoc_insertion_point(field_set:pb.FrameActionStart.player_id)
}

// required uint32 spell_id = 2;
inline bool FrameActionStart::has_spell_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FrameActionStart::set_has_spell_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FrameActionStart::clear_has_spell_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FrameActionStart::clear_spell_id() {
  spell_id_ = 0u;
  clear_has_spell_id();
}
inline ::google::protobuf::uint32 FrameActionStart::spell_id() const {
  // @@protoc_insertion_point(field_get:pb.FrameActionStart.spell_id)
  return spell_id_;
}
inline void FrameActionStart::set_spell_id(::google::protobuf::uint32 value) {
  set_has_spell_id();
  spell_id_ = value;
  // @@protoc_insertion_point(field_set:pb.FrameActionStart.spell_id)
}

// required uint32 action_id = 3;
inline bool FrameActionStart::has_action_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FrameActionStart::set_has_action_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FrameActionStart::clear_has_action_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FrameActionStart::clear_action_id() {
  action_id_ = 0u;
  clear_has_action_id();
}
inline ::google::protobuf::uint32 FrameActionStart::action_id() const {
  // @@protoc_insertion_point(field_get:pb.FrameActionStart.action_id)
  return action_id_;
}
inline void FrameActionStart::set_action_id(::google::protobuf::uint32 value) {
  set_has_action_id();
  action_id_ = value;
  // @@protoc_insertion_point(field_set:pb.FrameActionStart.action_id)
}

// required uint32 left_cd = 4;
inline bool FrameActionStart::has_left_cd() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FrameActionStart::set_has_left_cd() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FrameActionStart::clear_has_left_cd() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FrameActionStart::clear_left_cd() {
  left_cd_ = 0u;
  clear_has_left_cd();
}
inline ::google::protobuf::uint32 FrameActionStart::left_cd() const {
  // @@protoc_insertion_point(field_get:pb.FrameActionStart.left_cd)
  return left_cd_;
}
inline void FrameActionStart::set_left_cd(::google::protobuf::uint32 value) {
  set_has_left_cd();
  left_cd_ = value;
  // @@protoc_insertion_point(field_set:pb.FrameActionStart.left_cd)
}

// -------------------------------------------------------------------

// FrameStartBuff

// required .pb.RoomBuff buff = 1;
inline bool FrameStartBuff::has_buff() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FrameStartBuff::set_has_buff() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FrameStartBuff::clear_has_buff() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FrameStartBuff::clear_buff() {
  if (buff_ != NULL) buff_->::pb::RoomBuff::Clear();
  clear_has_buff();
}
inline const ::pb::RoomBuff& FrameStartBuff::buff() const {
  // @@protoc_insertion_point(field_get:pb.FrameStartBuff.buff)
  return buff_ != NULL ? *buff_
                         : *::pb::RoomBuff::internal_default_instance();
}
inline ::pb::RoomBuff* FrameStartBuff::mutable_buff() {
  set_has_buff();
  if (buff_ == NULL) {
    buff_ = new ::pb::RoomBuff;
  }
  // @@protoc_insertion_point(field_mutable:pb.FrameStartBuff.buff)
  return buff_;
}
inline ::pb::RoomBuff* FrameStartBuff::release_buff() {
  // @@protoc_insertion_point(field_release:pb.FrameStartBuff.buff)
  clear_has_buff();
  ::pb::RoomBuff* temp = buff_;
  buff_ = NULL;
  return temp;
}
inline void FrameStartBuff::set_allocated_buff(::pb::RoomBuff* buff) {
  delete buff_;
  buff_ = buff;
  if (buff) {
    set_has_buff();
  } else {
    clear_has_buff();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.FrameStartBuff.buff)
}

// -------------------------------------------------------------------

// FrameRemoveBuff

// optional uint32 player_id = 1;
inline bool FrameRemoveBuff::has_player_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FrameRemoveBuff::set_has_player_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FrameRemoveBuff::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FrameRemoveBuff::clear_player_id() {
  player_id_ = 0u;
  clear_has_player_id();
}
inline ::google::protobuf::uint32 FrameRemoveBuff::player_id() const {
  // @@protoc_insertion_point(field_get:pb.FrameRemoveBuff.player_id)
  return player_id_;
}
inline void FrameRemoveBuff::set_player_id(::google::protobuf::uint32 value) {
  set_has_player_id();
  player_id_ = value;
  // @@protoc_insertion_point(field_set:pb.FrameRemoveBuff.player_id)
}

// required string buff_id = 2;
inline bool FrameRemoveBuff::has_buff_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FrameRemoveBuff::set_has_buff_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FrameRemoveBuff::clear_has_buff_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FrameRemoveBuff::clear_buff_id() {
  buff_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_buff_id();
}
inline const ::std::string& FrameRemoveBuff::buff_id() const {
  // @@protoc_insertion_point(field_get:pb.FrameRemoveBuff.buff_id)
  return buff_id_.GetNoArena();
}
inline void FrameRemoveBuff::set_buff_id(const ::std::string& value) {
  set_has_buff_id();
  buff_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.FrameRemoveBuff.buff_id)
}
#if LANG_CXX11
inline void FrameRemoveBuff::set_buff_id(::std::string&& value) {
  set_has_buff_id();
  buff_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.FrameRemoveBuff.buff_id)
}
#endif
inline void FrameRemoveBuff::set_buff_id(const char* value) {
  set_has_buff_id();
  buff_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.FrameRemoveBuff.buff_id)
}
inline void FrameRemoveBuff::set_buff_id(const char* value, size_t size) {
  set_has_buff_id();
  buff_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.FrameRemoveBuff.buff_id)
}
inline ::std::string* FrameRemoveBuff::mutable_buff_id() {
  set_has_buff_id();
  // @@protoc_insertion_point(field_mutable:pb.FrameRemoveBuff.buff_id)
  return buff_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FrameRemoveBuff::release_buff_id() {
  // @@protoc_insertion_point(field_release:pb.FrameRemoveBuff.buff_id)
  clear_has_buff_id();
  return buff_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FrameRemoveBuff::set_allocated_buff_id(::std::string* buff_id) {
  if (buff_id != NULL) {
    set_has_buff_id();
  } else {
    clear_has_buff_id();
  }
  buff_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), buff_id);
  // @@protoc_insertion_point(field_set_allocated:pb.FrameRemoveBuff.buff_id)
}

// -------------------------------------------------------------------

// FrameSpellState

// required uint32 player_id = 1;
inline bool FrameSpellState::has_player_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FrameSpellState::set_has_player_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FrameSpellState::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FrameSpellState::clear_player_id() {
  player_id_ = 0u;
  clear_has_player_id();
}
inline ::google::protobuf::uint32 FrameSpellState::player_id() const {
  // @@protoc_insertion_point(field_get:pb.FrameSpellState.player_id)
  return player_id_;
}
inline void FrameSpellState::set_player_id(::google::protobuf::uint32 value) {
  set_has_player_id();
  player_id_ = value;
  // @@protoc_insertion_point(field_set:pb.FrameSpellState.player_id)
}

// required string action_id = 2;
inline bool FrameSpellState::has_action_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FrameSpellState::set_has_action_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FrameSpellState::clear_has_action_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FrameSpellState::clear_action_id() {
  action_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_action_id();
}
inline const ::std::string& FrameSpellState::action_id() const {
  // @@protoc_insertion_point(field_get:pb.FrameSpellState.action_id)
  return action_id_.GetNoArena();
}
inline void FrameSpellState::set_action_id(const ::std::string& value) {
  set_has_action_id();
  action_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.FrameSpellState.action_id)
}
#if LANG_CXX11
inline void FrameSpellState::set_action_id(::std::string&& value) {
  set_has_action_id();
  action_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.FrameSpellState.action_id)
}
#endif
inline void FrameSpellState::set_action_id(const char* value) {
  set_has_action_id();
  action_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.FrameSpellState.action_id)
}
inline void FrameSpellState::set_action_id(const char* value, size_t size) {
  set_has_action_id();
  action_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.FrameSpellState.action_id)
}
inline ::std::string* FrameSpellState::mutable_action_id() {
  set_has_action_id();
  // @@protoc_insertion_point(field_mutable:pb.FrameSpellState.action_id)
  return action_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FrameSpellState::release_action_id() {
  // @@protoc_insertion_point(field_release:pb.FrameSpellState.action_id)
  clear_has_action_id();
  return action_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FrameSpellState::set_allocated_action_id(::std::string* action_id) {
  if (action_id != NULL) {
    set_has_action_id();
  } else {
    clear_has_action_id();
  }
  action_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), action_id);
  // @@protoc_insertion_point(field_set_allocated:pb.FrameSpellState.action_id)
}

// required uint32 state = 3;
inline bool FrameSpellState::has_state() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FrameSpellState::set_has_state() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FrameSpellState::clear_has_state() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FrameSpellState::clear_state() {
  state_ = 0u;
  clear_has_state();
}
inline ::google::protobuf::uint32 FrameSpellState::state() const {
  // @@protoc_insertion_point(field_get:pb.FrameSpellState.state)
  return state_;
}
inline void FrameSpellState::set_state(::google::protobuf::uint32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:pb.FrameSpellState.state)
}

// required string cur_gen_id = 4;
inline bool FrameSpellState::has_cur_gen_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FrameSpellState::set_has_cur_gen_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FrameSpellState::clear_has_cur_gen_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FrameSpellState::clear_cur_gen_id() {
  cur_gen_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_cur_gen_id();
}
inline const ::std::string& FrameSpellState::cur_gen_id() const {
  // @@protoc_insertion_point(field_get:pb.FrameSpellState.cur_gen_id)
  return cur_gen_id_.GetNoArena();
}
inline void FrameSpellState::set_cur_gen_id(const ::std::string& value) {
  set_has_cur_gen_id();
  cur_gen_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.FrameSpellState.cur_gen_id)
}
#if LANG_CXX11
inline void FrameSpellState::set_cur_gen_id(::std::string&& value) {
  set_has_cur_gen_id();
  cur_gen_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.FrameSpellState.cur_gen_id)
}
#endif
inline void FrameSpellState::set_cur_gen_id(const char* value) {
  set_has_cur_gen_id();
  cur_gen_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.FrameSpellState.cur_gen_id)
}
inline void FrameSpellState::set_cur_gen_id(const char* value, size_t size) {
  set_has_cur_gen_id();
  cur_gen_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.FrameSpellState.cur_gen_id)
}
inline ::std::string* FrameSpellState::mutable_cur_gen_id() {
  set_has_cur_gen_id();
  // @@protoc_insertion_point(field_mutable:pb.FrameSpellState.cur_gen_id)
  return cur_gen_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FrameSpellState::release_cur_gen_id() {
  // @@protoc_insertion_point(field_release:pb.FrameSpellState.cur_gen_id)
  clear_has_cur_gen_id();
  return cur_gen_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FrameSpellState::set_allocated_cur_gen_id(::std::string* cur_gen_id) {
  if (cur_gen_id != NULL) {
    set_has_cur_gen_id();
  } else {
    clear_has_cur_gen_id();
  }
  cur_gen_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cur_gen_id);
  // @@protoc_insertion_point(field_set_allocated:pb.FrameSpellState.cur_gen_id)
}

// -------------------------------------------------------------------

// FrameSpellLevel

// required uint32 player_id = 1;
inline bool FrameSpellLevel::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FrameSpellLevel::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FrameSpellLevel::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FrameSpellLevel::clear_player_id() {
  player_id_ = 0u;
  clear_has_player_id();
}
inline ::google::protobuf::uint32 FrameSpellLevel::player_id() const {
  // @@protoc_insertion_point(field_get:pb.FrameSpellLevel.player_id)
  return player_id_;
}
inline void FrameSpellLevel::set_player_id(::google::protobuf::uint32 value) {
  set_has_player_id();
  player_id_ = value;
  // @@protoc_insertion_point(field_set:pb.FrameSpellLevel.player_id)
}

// repeated .pb.RoomPlayerSpell spells = 2;
inline int FrameSpellLevel::spells_size() const {
  return spells_.size();
}
inline void FrameSpellLevel::clear_spells() {
  spells_.Clear();
}
inline const ::pb::RoomPlayerSpell& FrameSpellLevel::spells(int index) const {
  // @@protoc_insertion_point(field_get:pb.FrameSpellLevel.spells)
  return spells_.Get(index);
}
inline ::pb::RoomPlayerSpell* FrameSpellLevel::mutable_spells(int index) {
  // @@protoc_insertion_point(field_mutable:pb.FrameSpellLevel.spells)
  return spells_.Mutable(index);
}
inline ::pb::RoomPlayerSpell* FrameSpellLevel::add_spells() {
  // @@protoc_insertion_point(field_add:pb.FrameSpellLevel.spells)
  return spells_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::pb::RoomPlayerSpell >*
FrameSpellLevel::mutable_spells() {
  // @@protoc_insertion_point(field_mutable_list:pb.FrameSpellLevel.spells)
  return &spells_;
}
inline const ::google::protobuf::RepeatedPtrField< ::pb::RoomPlayerSpell >&
FrameSpellLevel::spells() const {
  // @@protoc_insertion_point(field_list:pb.FrameSpellLevel.spells)
  return spells_;
}

// -------------------------------------------------------------------

// FrameSceneItemCreate

// required .pb.RoomItem item = 1;
inline bool FrameSceneItemCreate::has_item() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FrameSceneItemCreate::set_has_item() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FrameSceneItemCreate::clear_has_item() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FrameSceneItemCreate::clear_item() {
  if (item_ != NULL) item_->::pb::RoomItem::Clear();
  clear_has_item();
}
inline const ::pb::RoomItem& FrameSceneItemCreate::item() const {
  // @@protoc_insertion_point(field_get:pb.FrameSceneItemCreate.item)
  return item_ != NULL ? *item_
                         : *::pb::RoomItem::internal_default_instance();
}
inline ::pb::RoomItem* FrameSceneItemCreate::mutable_item() {
  set_has_item();
  if (item_ == NULL) {
    item_ = new ::pb::RoomItem;
  }
  // @@protoc_insertion_point(field_mutable:pb.FrameSceneItemCreate.item)
  return item_;
}
inline ::pb::RoomItem* FrameSceneItemCreate::release_item() {
  // @@protoc_insertion_point(field_release:pb.FrameSceneItemCreate.item)
  clear_has_item();
  ::pb::RoomItem* temp = item_;
  item_ = NULL;
  return temp;
}
inline void FrameSceneItemCreate::set_allocated_item(::pb::RoomItem* item) {
  delete item_;
  item_ = item;
  if (item) {
    set_has_item();
  } else {
    clear_has_item();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.FrameSceneItemCreate.item)
}

// -------------------------------------------------------------------

// FrameSceneItemRemove

// required uint32 id = 1;
inline bool FrameSceneItemRemove::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FrameSceneItemRemove::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FrameSceneItemRemove::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FrameSceneItemRemove::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 FrameSceneItemRemove::id() const {
  // @@protoc_insertion_point(field_get:pb.FrameSceneItemRemove.id)
  return id_;
}
inline void FrameSceneItemRemove::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:pb.FrameSceneItemRemove.id)
}

// -------------------------------------------------------------------

// FrameLevelUp

// required uint32 player_id = 1;
inline bool FrameLevelUp::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FrameLevelUp::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FrameLevelUp::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FrameLevelUp::clear_player_id() {
  player_id_ = 0u;
  clear_has_player_id();
}
inline ::google::protobuf::uint32 FrameLevelUp::player_id() const {
  // @@protoc_insertion_point(field_get:pb.FrameLevelUp.player_id)
  return player_id_;
}
inline void FrameLevelUp::set_player_id(::google::protobuf::uint32 value) {
  set_has_player_id();
  player_id_ = value;
  // @@protoc_insertion_point(field_set:pb.FrameLevelUp.player_id)
}

// required uint32 player_level = 2;
inline bool FrameLevelUp::has_player_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FrameLevelUp::set_has_player_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FrameLevelUp::clear_has_player_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FrameLevelUp::clear_player_level() {
  player_level_ = 0u;
  clear_has_player_level();
}
inline ::google::protobuf::uint32 FrameLevelUp::player_level() const {
  // @@protoc_insertion_point(field_get:pb.FrameLevelUp.player_level)
  return player_level_;
}
inline void FrameLevelUp::set_player_level(::google::protobuf::uint32 value) {
  set_has_player_level();
  player_level_ = value;
  // @@protoc_insertion_point(field_set:pb.FrameLevelUp.player_level)
}

// required uint32 player_spell_point = 3;
inline bool FrameLevelUp::has_player_spell_point() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FrameLevelUp::set_has_player_spell_point() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FrameLevelUp::clear_has_player_spell_point() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FrameLevelUp::clear_player_spell_point() {
  player_spell_point_ = 0u;
  clear_has_player_spell_point();
}
inline ::google::protobuf::uint32 FrameLevelUp::player_spell_point() const {
  // @@protoc_insertion_point(field_get:pb.FrameLevelUp.player_spell_point)
  return player_spell_point_;
}
inline void FrameLevelUp::set_player_spell_point(::google::protobuf::uint32 value) {
  set_has_player_spell_point();
  player_spell_point_ = value;
  // @@protoc_insertion_point(field_set:pb.FrameLevelUp.player_spell_point)
}

// -------------------------------------------------------------------

// FramePlayerBaseState

// required uint32 player_id = 1;
inline bool FramePlayerBaseState::has_player_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FramePlayerBaseState::set_has_player_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FramePlayerBaseState::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FramePlayerBaseState::clear_player_id() {
  player_id_ = 0u;
  clear_has_player_id();
}
inline ::google::protobuf::uint32 FramePlayerBaseState::player_id() const {
  // @@protoc_insertion_point(field_get:pb.FramePlayerBaseState.player_id)
  return player_id_;
}
inline void FramePlayerBaseState::set_player_id(::google::protobuf::uint32 value) {
  set_has_player_id();
  player_id_ = value;
  // @@protoc_insertion_point(field_set:pb.FramePlayerBaseState.player_id)
}

// required .pb.RoomPlayerState state = 2;
inline bool FramePlayerBaseState::has_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FramePlayerBaseState::set_has_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FramePlayerBaseState::clear_has_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FramePlayerBaseState::clear_state() {
  if (state_ != NULL) state_->::pb::RoomPlayerState::Clear();
  clear_has_state();
}
inline const ::pb::RoomPlayerState& FramePlayerBaseState::state() const {
  // @@protoc_insertion_point(field_get:pb.FramePlayerBaseState.state)
  return state_ != NULL ? *state_
                         : *::pb::RoomPlayerState::internal_default_instance();
}
inline ::pb::RoomPlayerState* FramePlayerBaseState::mutable_state() {
  set_has_state();
  if (state_ == NULL) {
    state_ = new ::pb::RoomPlayerState;
  }
  // @@protoc_insertion_point(field_mutable:pb.FramePlayerBaseState.state)
  return state_;
}
inline ::pb::RoomPlayerState* FramePlayerBaseState::release_state() {
  // @@protoc_insertion_point(field_release:pb.FramePlayerBaseState.state)
  clear_has_state();
  ::pb::RoomPlayerState* temp = state_;
  state_ = NULL;
  return temp;
}
inline void FramePlayerBaseState::set_allocated_state(::pb::RoomPlayerState* state) {
  delete state_;
  state_ = state;
  if (state) {
    set_has_state();
  } else {
    clear_has_state();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.FramePlayerBaseState.state)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace pb

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::pb::CMD> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pb::CMD>() {
  return ::pb::CMD_descriptor();
}
template <> struct is_proto_enum< ::pb::E> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pb::E>() {
  return ::pb::E_descriptor();
}
template <> struct is_proto_enum< ::pb::FRAME> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pb::FRAME>() {
  return ::pb::FRAME_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_game_2eproto__INCLUDED
