// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ns/room_scene.proto

#ifndef PROTOBUF_ns_2froom_5fscene_2eproto__INCLUDED
#define PROTOBUF_ns_2froom_5fscene_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "room.pb.h"
// @@protoc_insertion_point(includes)
namespace pb {
class Frame;
class FrameDefaultTypeInternal;
extern FrameDefaultTypeInternal _Frame_default_instance_;
class FrameActionStart;
class FrameActionStartDefaultTypeInternal;
extern FrameActionStartDefaultTypeInternal _FrameActionStart_default_instance_;
class FrameDeath;
class FrameDeathDefaultTypeInternal;
extern FrameDeathDefaultTypeInternal _FrameDeath_default_instance_;
class FrameLevelUp;
class FrameLevelUpDefaultTypeInternal;
extern FrameLevelUpDefaultTypeInternal _FrameLevelUp_default_instance_;
class FrameMove;
class FrameMoveDefaultTypeInternal;
extern FrameMoveDefaultTypeInternal _FrameMove_default_instance_;
class FramePlayerState;
class FramePlayerStateDefaultTypeInternal;
extern FramePlayerStateDefaultTypeInternal _FramePlayerState_default_instance_;
class FrameRelive;
class FrameReliveDefaultTypeInternal;
extern FrameReliveDefaultTypeInternal _FrameRelive_default_instance_;
class FrameRemoveBuff;
class FrameRemoveBuffDefaultTypeInternal;
extern FrameRemoveBuffDefaultTypeInternal _FrameRemoveBuff_default_instance_;
class FrameSceneItemCreate;
class FrameSceneItemCreateDefaultTypeInternal;
extern FrameSceneItemCreateDefaultTypeInternal _FrameSceneItemCreate_default_instance_;
class FrameSceneItemRemove;
class FrameSceneItemRemoveDefaultTypeInternal;
extern FrameSceneItemRemoveDefaultTypeInternal _FrameSceneItemRemove_default_instance_;
class FrameSpellState;
class FrameSpellStateDefaultTypeInternal;
extern FrameSpellStateDefaultTypeInternal _FrameSpellState_default_instance_;
class FrameStartBuff;
class FrameStartBuffDefaultTypeInternal;
extern FrameStartBuffDefaultTypeInternal _FrameStartBuff_default_instance_;
class FrameStop;
class FrameStopDefaultTypeInternal;
extern FrameStopDefaultTypeInternal _FrameStop_default_instance_;
class KillNotify;
class KillNotifyDefaultTypeInternal;
extern KillNotifyDefaultTypeInternal _KillNotify_default_instance_;
class KillNotify_KillInfo;
class KillNotify_KillInfoDefaultTypeInternal;
extern KillNotify_KillInfoDefaultTypeInternal _KillNotify_KillInfo_default_instance_;
class RoomBuff;
class RoomBuffDefaultTypeInternal;
extern RoomBuffDefaultTypeInternal _RoomBuff_default_instance_;
class RoomFrameNotify;
class RoomFrameNotifyDefaultTypeInternal;
extern RoomFrameNotifyDefaultTypeInternal _RoomFrameNotify_default_instance_;
class RoomItem;
class RoomItemDefaultTypeInternal;
extern RoomItemDefaultTypeInternal _RoomItem_default_instance_;
class RoomLadderNotify;
class RoomLadderNotifyDefaultTypeInternal;
extern RoomLadderNotifyDefaultTypeInternal _RoomLadderNotify_default_instance_;
class RoomLadderNotify_Item;
class RoomLadderNotify_ItemDefaultTypeInternal;
extern RoomLadderNotify_ItemDefaultTypeInternal _RoomLadderNotify_Item_default_instance_;
class RoomLoginReq;
class RoomLoginReqDefaultTypeInternal;
extern RoomLoginReqDefaultTypeInternal _RoomLoginReq_default_instance_;
class RoomLoginRes;
class RoomLoginResDefaultTypeInternal;
extern RoomLoginResDefaultTypeInternal _RoomLoginRes_default_instance_;
class RoomPingReq;
class RoomPingReqDefaultTypeInternal;
extern RoomPingReqDefaultTypeInternal _RoomPingReq_default_instance_;
class RoomPingRes;
class RoomPingResDefaultTypeInternal;
extern RoomPingResDefaultTypeInternal _RoomPingRes_default_instance_;
class RoomPlayer;
class RoomPlayerDefaultTypeInternal;
extern RoomPlayerDefaultTypeInternal _RoomPlayer_default_instance_;
class RoomPlayerAdd;
class RoomPlayerAddDefaultTypeInternal;
extern RoomPlayerAddDefaultTypeInternal _RoomPlayerAdd_default_instance_;
class RoomPlayerDragEndReq;
class RoomPlayerDragEndReqDefaultTypeInternal;
extern RoomPlayerDragEndReqDefaultTypeInternal _RoomPlayerDragEndReq_default_instance_;
class RoomPlayerDragRes;
class RoomPlayerDragResDefaultTypeInternal;
extern RoomPlayerDragResDefaultTypeInternal _RoomPlayerDragRes_default_instance_;
class RoomPlayerMoveReq;
class RoomPlayerMoveReqDefaultTypeInternal;
extern RoomPlayerMoveReqDefaultTypeInternal _RoomPlayerMoveReq_default_instance_;
class RoomPlayerReliveReq;
class RoomPlayerReliveReqDefaultTypeInternal;
extern RoomPlayerReliveReqDefaultTypeInternal _RoomPlayerReliveReq_default_instance_;
class RoomPlayerReliveRes;
class RoomPlayerReliveResDefaultTypeInternal;
extern RoomPlayerReliveResDefaultTypeInternal _RoomPlayerReliveRes_default_instance_;
class RoomPlayerRemove;
class RoomPlayerRemoveDefaultTypeInternal;
extern RoomPlayerRemoveDefaultTypeInternal _RoomPlayerRemove_default_instance_;
class RoomPlayerSpell;
class RoomPlayerSpellDefaultTypeInternal;
extern RoomPlayerSpellDefaultTypeInternal _RoomPlayerSpell_default_instance_;
class RoomPlayerState;
class RoomPlayerStateDefaultTypeInternal;
extern RoomPlayerStateDefaultTypeInternal _RoomPlayerState_default_instance_;
class RoomPlayerStopReq;
class RoomPlayerStopReqDefaultTypeInternal;
extern RoomPlayerStopReqDefaultTypeInternal _RoomPlayerStopReq_default_instance_;
class RoomSnapShot;
class RoomSnapShotDefaultTypeInternal;
extern RoomSnapShotDefaultTypeInternal _RoomSnapShot_default_instance_;
class SpellLevelUpReq;
class SpellLevelUpReqDefaultTypeInternal;
extern SpellLevelUpReqDefaultTypeInternal _SpellLevelUpReq_default_instance_;
class SpellLevelUpRes;
class SpellLevelUpResDefaultTypeInternal;
extern SpellLevelUpResDefaultTypeInternal _SpellLevelUpRes_default_instance_;
class SpellStartReq;
class SpellStartReqDefaultTypeInternal;
extern SpellStartReqDefaultTypeInternal _SpellStartReq_default_instance_;
class Vector;
class VectorDefaultTypeInternal;
extern VectorDefaultTypeInternal _Vector_default_instance_;
}  // namespace pb

namespace pb {

namespace protobuf_ns_2froom_5fscene_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_ns_2froom_5fscene_2eproto

enum FRAME {
  CMD_NONE = 0,
  CMD_MOVE = 1,
  CMD_STOP = 2,
  CMD_DEATH = 3,
  CMD_RELIVE = 4,
  CMD_ACTION_START = 5,
  CMD_BUFF_START = 6,
  CMD_BUFF_REMOVE = 7,
  CMD_SPELL_SATE = 8,
  CMD_SCENE_ITEM_CREATE = 9,
  CMD_SCENE_TIEM_REMOVE = 10,
  CMD_PLAYER_LEVEL_UP = 11,
  CMD_BUFF_STATE = 12
};
bool FRAME_IsValid(int value);
const FRAME FRAME_MIN = CMD_NONE;
const FRAME FRAME_MAX = CMD_BUFF_STATE;
const int FRAME_ARRAYSIZE = FRAME_MAX + 1;

const ::google::protobuf::EnumDescriptor* FRAME_descriptor();
inline const ::std::string& FRAME_Name(FRAME value) {
  return ::google::protobuf::internal::NameOfEnum(
    FRAME_descriptor(), value);
}
inline bool FRAME_Parse(
    const ::std::string& name, FRAME* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FRAME>(
    FRAME_descriptor(), name, value);
}
// ===================================================================

class FrameMove : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.FrameMove) */ {
 public:
  FrameMove();
  virtual ~FrameMove();

  FrameMove(const FrameMove& from);

  inline FrameMove& operator=(const FrameMove& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FrameMove& default_instance();

  static inline const FrameMove* internal_default_instance() {
    return reinterpret_cast<const FrameMove*>(
               &_FrameMove_default_instance_);
  }

  void Swap(FrameMove* other);

  // implements Message ----------------------------------------------

  inline FrameMove* New() const PROTOBUF_FINAL { return New(NULL); }

  FrameMove* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FrameMove& from);
  void MergeFrom(const FrameMove& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FrameMove* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .pb.Vector pos = 2;
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 2;
  const ::pb::Vector& pos() const;
  ::pb::Vector* mutable_pos();
  ::pb::Vector* release_pos();
  void set_allocated_pos(::pb::Vector* pos);

  // required .pb.Vector dir = 3;
  bool has_dir() const;
  void clear_dir();
  static const int kDirFieldNumber = 3;
  const ::pb::Vector& dir() const;
  ::pb::Vector* mutable_dir();
  ::pb::Vector* release_dir();
  void set_allocated_dir(::pb::Vector* dir);

  // required uint32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.FrameMove)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_pos();
  void clear_has_pos();
  void set_has_dir();
  void clear_has_dir();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::pb::Vector* pos_;
  ::pb::Vector* dir_;
  ::google::protobuf::uint32 id_;
  friend struct  protobuf_ns_2froom_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FrameStop : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.FrameStop) */ {
 public:
  FrameStop();
  virtual ~FrameStop();

  FrameStop(const FrameStop& from);

  inline FrameStop& operator=(const FrameStop& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FrameStop& default_instance();

  static inline const FrameStop* internal_default_instance() {
    return reinterpret_cast<const FrameStop*>(
               &_FrameStop_default_instance_);
  }

  void Swap(FrameStop* other);

  // implements Message ----------------------------------------------

  inline FrameStop* New() const PROTOBUF_FINAL { return New(NULL); }

  FrameStop* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FrameStop& from);
  void MergeFrom(const FrameStop& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FrameStop* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .pb.Vector pos = 2;
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 2;
  const ::pb::Vector& pos() const;
  ::pb::Vector* mutable_pos();
  ::pb::Vector* release_pos();
  void set_allocated_pos(::pb::Vector* pos);

  // required .pb.Vector dir = 3;
  bool has_dir() const;
  void clear_dir();
  static const int kDirFieldNumber = 3;
  const ::pb::Vector& dir() const;
  ::pb::Vector* mutable_dir();
  ::pb::Vector* release_dir();
  void set_allocated_dir(::pb::Vector* dir);

  // required uint32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.FrameStop)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_pos();
  void clear_has_pos();
  void set_has_dir();
  void clear_has_dir();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::pb::Vector* pos_;
  ::pb::Vector* dir_;
  ::google::protobuf::uint32 id_;
  friend struct  protobuf_ns_2froom_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FrameDeath : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.FrameDeath) */ {
 public:
  FrameDeath();
  virtual ~FrameDeath();

  FrameDeath(const FrameDeath& from);

  inline FrameDeath& operator=(const FrameDeath& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FrameDeath& default_instance();

  static inline const FrameDeath* internal_default_instance() {
    return reinterpret_cast<const FrameDeath*>(
               &_FrameDeath_default_instance_);
  }

  void Swap(FrameDeath* other);

  // implements Message ----------------------------------------------

  inline FrameDeath* New() const PROTOBUF_FINAL { return New(NULL); }

  FrameDeath* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FrameDeath& from);
  void MergeFrom(const FrameDeath& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FrameDeath* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // required uint32 murderer_id = 2;
  bool has_murderer_id() const;
  void clear_murderer_id();
  static const int kMurdererIdFieldNumber = 2;
  ::google::protobuf::uint32 murderer_id() const;
  void set_murderer_id(::google::protobuf::uint32 value);

  // required uint32 murderer_cur_socre = 3;
  bool has_murderer_cur_socre() const;
  void clear_murderer_cur_socre();
  static const int kMurdererCurSocreFieldNumber = 3;
  ::google::protobuf::uint32 murderer_cur_socre() const;
  void set_murderer_cur_socre(::google::protobuf::uint32 value);

  // required uint32 owner_cur_socre = 4;
  bool has_owner_cur_socre() const;
  void clear_owner_cur_socre();
  static const int kOwnerCurSocreFieldNumber = 4;
  ::google::protobuf::uint32 owner_cur_socre() const;
  void set_owner_cur_socre(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.FrameDeath)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_murderer_id();
  void clear_has_murderer_id();
  void set_has_murderer_cur_socre();
  void clear_has_murderer_cur_socre();
  void set_has_owner_cur_socre();
  void clear_has_owner_cur_socre();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 murderer_id_;
  ::google::protobuf::uint32 murderer_cur_socre_;
  ::google::protobuf::uint32 owner_cur_socre_;
  friend struct  protobuf_ns_2froom_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FrameRelive : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.FrameRelive) */ {
 public:
  FrameRelive();
  virtual ~FrameRelive();

  FrameRelive(const FrameRelive& from);

  inline FrameRelive& operator=(const FrameRelive& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FrameRelive& default_instance();

  static inline const FrameRelive* internal_default_instance() {
    return reinterpret_cast<const FrameRelive*>(
               &_FrameRelive_default_instance_);
  }

  void Swap(FrameRelive* other);

  // implements Message ----------------------------------------------

  inline FrameRelive* New() const PROTOBUF_FINAL { return New(NULL); }

  FrameRelive* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FrameRelive& from);
  void MergeFrom(const FrameRelive& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FrameRelive* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .pb.RoomPlayer player = 1;
  bool has_player() const;
  void clear_player();
  static const int kPlayerFieldNumber = 1;
  const ::pb::RoomPlayer& player() const;
  ::pb::RoomPlayer* mutable_player();
  ::pb::RoomPlayer* release_player();
  void set_allocated_player(::pb::RoomPlayer* player);

  // @@protoc_insertion_point(class_scope:pb.FrameRelive)
 private:
  void set_has_player();
  void clear_has_player();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::pb::RoomPlayer* player_;
  friend struct  protobuf_ns_2froom_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FrameActionStart : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.FrameActionStart) */ {
 public:
  FrameActionStart();
  virtual ~FrameActionStart();

  FrameActionStart(const FrameActionStart& from);

  inline FrameActionStart& operator=(const FrameActionStart& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FrameActionStart& default_instance();

  static inline const FrameActionStart* internal_default_instance() {
    return reinterpret_cast<const FrameActionStart*>(
               &_FrameActionStart_default_instance_);
  }

  void Swap(FrameActionStart* other);

  // implements Message ----------------------------------------------

  inline FrameActionStart* New() const PROTOBUF_FINAL { return New(NULL); }

  FrameActionStart* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FrameActionStart& from);
  void MergeFrom(const FrameActionStart& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FrameActionStart* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 player_id = 1;
  bool has_player_id() const;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  ::google::protobuf::uint32 player_id() const;
  void set_player_id(::google::protobuf::uint32 value);

  // required uint32 spell_id = 2;
  bool has_spell_id() const;
  void clear_spell_id();
  static const int kSpellIdFieldNumber = 2;
  ::google::protobuf::uint32 spell_id() const;
  void set_spell_id(::google::protobuf::uint32 value);

  // required uint32 action_id = 3;
  bool has_action_id() const;
  void clear_action_id();
  static const int kActionIdFieldNumber = 3;
  ::google::protobuf::uint32 action_id() const;
  void set_action_id(::google::protobuf::uint32 value);

  // required uint32 left_cd = 4;
  bool has_left_cd() const;
  void clear_left_cd();
  static const int kLeftCdFieldNumber = 4;
  ::google::protobuf::uint32 left_cd() const;
  void set_left_cd(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.FrameActionStart)
 private:
  void set_has_player_id();
  void clear_has_player_id();
  void set_has_spell_id();
  void clear_has_spell_id();
  void set_has_action_id();
  void clear_has_action_id();
  void set_has_left_cd();
  void clear_has_left_cd();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 player_id_;
  ::google::protobuf::uint32 spell_id_;
  ::google::protobuf::uint32 action_id_;
  ::google::protobuf::uint32 left_cd_;
  friend struct  protobuf_ns_2froom_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FrameStartBuff : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.FrameStartBuff) */ {
 public:
  FrameStartBuff();
  virtual ~FrameStartBuff();

  FrameStartBuff(const FrameStartBuff& from);

  inline FrameStartBuff& operator=(const FrameStartBuff& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FrameStartBuff& default_instance();

  static inline const FrameStartBuff* internal_default_instance() {
    return reinterpret_cast<const FrameStartBuff*>(
               &_FrameStartBuff_default_instance_);
  }

  void Swap(FrameStartBuff* other);

  // implements Message ----------------------------------------------

  inline FrameStartBuff* New() const PROTOBUF_FINAL { return New(NULL); }

  FrameStartBuff* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FrameStartBuff& from);
  void MergeFrom(const FrameStartBuff& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FrameStartBuff* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .pb.RoomBuff buff = 1;
  bool has_buff() const;
  void clear_buff();
  static const int kBuffFieldNumber = 1;
  const ::pb::RoomBuff& buff() const;
  ::pb::RoomBuff* mutable_buff();
  ::pb::RoomBuff* release_buff();
  void set_allocated_buff(::pb::RoomBuff* buff);

  // @@protoc_insertion_point(class_scope:pb.FrameStartBuff)
 private:
  void set_has_buff();
  void clear_has_buff();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::pb::RoomBuff* buff_;
  friend struct  protobuf_ns_2froom_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FrameRemoveBuff : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.FrameRemoveBuff) */ {
 public:
  FrameRemoveBuff();
  virtual ~FrameRemoveBuff();

  FrameRemoveBuff(const FrameRemoveBuff& from);

  inline FrameRemoveBuff& operator=(const FrameRemoveBuff& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FrameRemoveBuff& default_instance();

  static inline const FrameRemoveBuff* internal_default_instance() {
    return reinterpret_cast<const FrameRemoveBuff*>(
               &_FrameRemoveBuff_default_instance_);
  }

  void Swap(FrameRemoveBuff* other);

  // implements Message ----------------------------------------------

  inline FrameRemoveBuff* New() const PROTOBUF_FINAL { return New(NULL); }

  FrameRemoveBuff* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FrameRemoveBuff& from);
  void MergeFrom(const FrameRemoveBuff& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FrameRemoveBuff* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string buff_id = 2;
  bool has_buff_id() const;
  void clear_buff_id();
  static const int kBuffIdFieldNumber = 2;
  const ::std::string& buff_id() const;
  void set_buff_id(const ::std::string& value);
  #if LANG_CXX11
  void set_buff_id(::std::string&& value);
  #endif
  void set_buff_id(const char* value);
  void set_buff_id(const char* value, size_t size);
  ::std::string* mutable_buff_id();
  ::std::string* release_buff_id();
  void set_allocated_buff_id(::std::string* buff_id);

  // optional uint32 player_id = 1;
  bool has_player_id() const;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  ::google::protobuf::uint32 player_id() const;
  void set_player_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.FrameRemoveBuff)
 private:
  void set_has_player_id();
  void clear_has_player_id();
  void set_has_buff_id();
  void clear_has_buff_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr buff_id_;
  ::google::protobuf::uint32 player_id_;
  friend struct  protobuf_ns_2froom_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FrameSpellState : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.FrameSpellState) */ {
 public:
  FrameSpellState();
  virtual ~FrameSpellState();

  FrameSpellState(const FrameSpellState& from);

  inline FrameSpellState& operator=(const FrameSpellState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FrameSpellState& default_instance();

  static inline const FrameSpellState* internal_default_instance() {
    return reinterpret_cast<const FrameSpellState*>(
               &_FrameSpellState_default_instance_);
  }

  void Swap(FrameSpellState* other);

  // implements Message ----------------------------------------------

  inline FrameSpellState* New() const PROTOBUF_FINAL { return New(NULL); }

  FrameSpellState* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FrameSpellState& from);
  void MergeFrom(const FrameSpellState& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FrameSpellState* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string action_id = 2;
  bool has_action_id() const;
  void clear_action_id();
  static const int kActionIdFieldNumber = 2;
  const ::std::string& action_id() const;
  void set_action_id(const ::std::string& value);
  #if LANG_CXX11
  void set_action_id(::std::string&& value);
  #endif
  void set_action_id(const char* value);
  void set_action_id(const char* value, size_t size);
  ::std::string* mutable_action_id();
  ::std::string* release_action_id();
  void set_allocated_action_id(::std::string* action_id);

  // required string cur_gen_id = 4;
  bool has_cur_gen_id() const;
  void clear_cur_gen_id();
  static const int kCurGenIdFieldNumber = 4;
  const ::std::string& cur_gen_id() const;
  void set_cur_gen_id(const ::std::string& value);
  #if LANG_CXX11
  void set_cur_gen_id(::std::string&& value);
  #endif
  void set_cur_gen_id(const char* value);
  void set_cur_gen_id(const char* value, size_t size);
  ::std::string* mutable_cur_gen_id();
  ::std::string* release_cur_gen_id();
  void set_allocated_cur_gen_id(::std::string* cur_gen_id);

  // required uint32 player_id = 1;
  bool has_player_id() const;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  ::google::protobuf::uint32 player_id() const;
  void set_player_id(::google::protobuf::uint32 value);

  // required uint32 state = 3;
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 3;
  ::google::protobuf::uint32 state() const;
  void set_state(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.FrameSpellState)
 private:
  void set_has_player_id();
  void clear_has_player_id();
  void set_has_action_id();
  void clear_has_action_id();
  void set_has_state();
  void clear_has_state();
  void set_has_cur_gen_id();
  void clear_has_cur_gen_id();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr action_id_;
  ::google::protobuf::internal::ArenaStringPtr cur_gen_id_;
  ::google::protobuf::uint32 player_id_;
  ::google::protobuf::uint32 state_;
  friend struct  protobuf_ns_2froom_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FrameSceneItemCreate : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.FrameSceneItemCreate) */ {
 public:
  FrameSceneItemCreate();
  virtual ~FrameSceneItemCreate();

  FrameSceneItemCreate(const FrameSceneItemCreate& from);

  inline FrameSceneItemCreate& operator=(const FrameSceneItemCreate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FrameSceneItemCreate& default_instance();

  static inline const FrameSceneItemCreate* internal_default_instance() {
    return reinterpret_cast<const FrameSceneItemCreate*>(
               &_FrameSceneItemCreate_default_instance_);
  }

  void Swap(FrameSceneItemCreate* other);

  // implements Message ----------------------------------------------

  inline FrameSceneItemCreate* New() const PROTOBUF_FINAL { return New(NULL); }

  FrameSceneItemCreate* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FrameSceneItemCreate& from);
  void MergeFrom(const FrameSceneItemCreate& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FrameSceneItemCreate* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .pb.RoomItem item = 1;
  bool has_item() const;
  void clear_item();
  static const int kItemFieldNumber = 1;
  const ::pb::RoomItem& item() const;
  ::pb::RoomItem* mutable_item();
  ::pb::RoomItem* release_item();
  void set_allocated_item(::pb::RoomItem* item);

  // @@protoc_insertion_point(class_scope:pb.FrameSceneItemCreate)
 private:
  void set_has_item();
  void clear_has_item();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::pb::RoomItem* item_;
  friend struct  protobuf_ns_2froom_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FrameSceneItemRemove : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.FrameSceneItemRemove) */ {
 public:
  FrameSceneItemRemove();
  virtual ~FrameSceneItemRemove();

  FrameSceneItemRemove(const FrameSceneItemRemove& from);

  inline FrameSceneItemRemove& operator=(const FrameSceneItemRemove& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FrameSceneItemRemove& default_instance();

  static inline const FrameSceneItemRemove* internal_default_instance() {
    return reinterpret_cast<const FrameSceneItemRemove*>(
               &_FrameSceneItemRemove_default_instance_);
  }

  void Swap(FrameSceneItemRemove* other);

  // implements Message ----------------------------------------------

  inline FrameSceneItemRemove* New() const PROTOBUF_FINAL { return New(NULL); }

  FrameSceneItemRemove* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FrameSceneItemRemove& from);
  void MergeFrom(const FrameSceneItemRemove& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FrameSceneItemRemove* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.FrameSceneItemRemove)
 private:
  void set_has_id();
  void clear_has_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  friend struct  protobuf_ns_2froom_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FrameLevelUp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.FrameLevelUp) */ {
 public:
  FrameLevelUp();
  virtual ~FrameLevelUp();

  FrameLevelUp(const FrameLevelUp& from);

  inline FrameLevelUp& operator=(const FrameLevelUp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FrameLevelUp& default_instance();

  static inline const FrameLevelUp* internal_default_instance() {
    return reinterpret_cast<const FrameLevelUp*>(
               &_FrameLevelUp_default_instance_);
  }

  void Swap(FrameLevelUp* other);

  // implements Message ----------------------------------------------

  inline FrameLevelUp* New() const PROTOBUF_FINAL { return New(NULL); }

  FrameLevelUp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FrameLevelUp& from);
  void MergeFrom(const FrameLevelUp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FrameLevelUp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 player_id = 1;
  bool has_player_id() const;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  ::google::protobuf::uint32 player_id() const;
  void set_player_id(::google::protobuf::uint32 value);

  // required uint32 player_level = 2;
  bool has_player_level() const;
  void clear_player_level();
  static const int kPlayerLevelFieldNumber = 2;
  ::google::protobuf::uint32 player_level() const;
  void set_player_level(::google::protobuf::uint32 value);

  // required uint32 player_spell_point = 3;
  bool has_player_spell_point() const;
  void clear_player_spell_point();
  static const int kPlayerSpellPointFieldNumber = 3;
  ::google::protobuf::uint32 player_spell_point() const;
  void set_player_spell_point(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.FrameLevelUp)
 private:
  void set_has_player_id();
  void clear_has_player_id();
  void set_has_player_level();
  void clear_has_player_level();
  void set_has_player_spell_point();
  void clear_has_player_spell_point();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 player_id_;
  ::google::protobuf::uint32 player_level_;
  ::google::protobuf::uint32 player_spell_point_;
  friend struct  protobuf_ns_2froom_5fscene_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FramePlayerState : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb.FramePlayerState) */ {
 public:
  FramePlayerState();
  virtual ~FramePlayerState();

  FramePlayerState(const FramePlayerState& from);

  inline FramePlayerState& operator=(const FramePlayerState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FramePlayerState& default_instance();

  static inline const FramePlayerState* internal_default_instance() {
    return reinterpret_cast<const FramePlayerState*>(
               &_FramePlayerState_default_instance_);
  }

  void Swap(FramePlayerState* other);

  // implements Message ----------------------------------------------

  inline FramePlayerState* New() const PROTOBUF_FINAL { return New(NULL); }

  FramePlayerState* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FramePlayerState& from);
  void MergeFrom(const FramePlayerState& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FramePlayerState* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .pb.RoomPlayerState state = 2;
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 2;
  const ::pb::RoomPlayerState& state() const;
  ::pb::RoomPlayerState* mutable_state();
  ::pb::RoomPlayerState* release_state();
  void set_allocated_state(::pb::RoomPlayerState* state);

  // required uint32 player_id = 1;
  bool has_player_id() const;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  ::google::protobuf::uint32 player_id() const;
  void set_player_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pb.FramePlayerState)
 private:
  void set_has_player_id();
  void clear_has_player_id();
  void set_has_state();
  void clear_has_state();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::pb::RoomPlayerState* state_;
  ::google::protobuf::uint32 player_id_;
  friend struct  protobuf_ns_2froom_5fscene_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// FrameMove

// required uint32 id = 1;
inline bool FrameMove::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FrameMove::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FrameMove::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FrameMove::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 FrameMove::id() const {
  // @@protoc_insertion_point(field_get:pb.FrameMove.id)
  return id_;
}
inline void FrameMove::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:pb.FrameMove.id)
}

// required .pb.Vector pos = 2;
inline bool FrameMove::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FrameMove::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FrameMove::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FrameMove::clear_pos() {
  if (pos_ != NULL) pos_->::pb::Vector::Clear();
  clear_has_pos();
}
inline const ::pb::Vector& FrameMove::pos() const {
  // @@protoc_insertion_point(field_get:pb.FrameMove.pos)
  return pos_ != NULL ? *pos_
                         : *::pb::Vector::internal_default_instance();
}
inline ::pb::Vector* FrameMove::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) {
    pos_ = new ::pb::Vector;
  }
  // @@protoc_insertion_point(field_mutable:pb.FrameMove.pos)
  return pos_;
}
inline ::pb::Vector* FrameMove::release_pos() {
  // @@protoc_insertion_point(field_release:pb.FrameMove.pos)
  clear_has_pos();
  ::pb::Vector* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void FrameMove::set_allocated_pos(::pb::Vector* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.FrameMove.pos)
}

// required .pb.Vector dir = 3;
inline bool FrameMove::has_dir() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FrameMove::set_has_dir() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FrameMove::clear_has_dir() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FrameMove::clear_dir() {
  if (dir_ != NULL) dir_->::pb::Vector::Clear();
  clear_has_dir();
}
inline const ::pb::Vector& FrameMove::dir() const {
  // @@protoc_insertion_point(field_get:pb.FrameMove.dir)
  return dir_ != NULL ? *dir_
                         : *::pb::Vector::internal_default_instance();
}
inline ::pb::Vector* FrameMove::mutable_dir() {
  set_has_dir();
  if (dir_ == NULL) {
    dir_ = new ::pb::Vector;
  }
  // @@protoc_insertion_point(field_mutable:pb.FrameMove.dir)
  return dir_;
}
inline ::pb::Vector* FrameMove::release_dir() {
  // @@protoc_insertion_point(field_release:pb.FrameMove.dir)
  clear_has_dir();
  ::pb::Vector* temp = dir_;
  dir_ = NULL;
  return temp;
}
inline void FrameMove::set_allocated_dir(::pb::Vector* dir) {
  delete dir_;
  dir_ = dir;
  if (dir) {
    set_has_dir();
  } else {
    clear_has_dir();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.FrameMove.dir)
}

// -------------------------------------------------------------------

// FrameStop

// required uint32 id = 1;
inline bool FrameStop::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FrameStop::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FrameStop::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FrameStop::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 FrameStop::id() const {
  // @@protoc_insertion_point(field_get:pb.FrameStop.id)
  return id_;
}
inline void FrameStop::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:pb.FrameStop.id)
}

// required .pb.Vector pos = 2;
inline bool FrameStop::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FrameStop::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FrameStop::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FrameStop::clear_pos() {
  if (pos_ != NULL) pos_->::pb::Vector::Clear();
  clear_has_pos();
}
inline const ::pb::Vector& FrameStop::pos() const {
  // @@protoc_insertion_point(field_get:pb.FrameStop.pos)
  return pos_ != NULL ? *pos_
                         : *::pb::Vector::internal_default_instance();
}
inline ::pb::Vector* FrameStop::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) {
    pos_ = new ::pb::Vector;
  }
  // @@protoc_insertion_point(field_mutable:pb.FrameStop.pos)
  return pos_;
}
inline ::pb::Vector* FrameStop::release_pos() {
  // @@protoc_insertion_point(field_release:pb.FrameStop.pos)
  clear_has_pos();
  ::pb::Vector* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void FrameStop::set_allocated_pos(::pb::Vector* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.FrameStop.pos)
}

// required .pb.Vector dir = 3;
inline bool FrameStop::has_dir() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FrameStop::set_has_dir() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FrameStop::clear_has_dir() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FrameStop::clear_dir() {
  if (dir_ != NULL) dir_->::pb::Vector::Clear();
  clear_has_dir();
}
inline const ::pb::Vector& FrameStop::dir() const {
  // @@protoc_insertion_point(field_get:pb.FrameStop.dir)
  return dir_ != NULL ? *dir_
                         : *::pb::Vector::internal_default_instance();
}
inline ::pb::Vector* FrameStop::mutable_dir() {
  set_has_dir();
  if (dir_ == NULL) {
    dir_ = new ::pb::Vector;
  }
  // @@protoc_insertion_point(field_mutable:pb.FrameStop.dir)
  return dir_;
}
inline ::pb::Vector* FrameStop::release_dir() {
  // @@protoc_insertion_point(field_release:pb.FrameStop.dir)
  clear_has_dir();
  ::pb::Vector* temp = dir_;
  dir_ = NULL;
  return temp;
}
inline void FrameStop::set_allocated_dir(::pb::Vector* dir) {
  delete dir_;
  dir_ = dir;
  if (dir) {
    set_has_dir();
  } else {
    clear_has_dir();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.FrameStop.dir)
}

// -------------------------------------------------------------------

// FrameDeath

// required uint32 id = 1;
inline bool FrameDeath::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FrameDeath::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FrameDeath::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FrameDeath::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 FrameDeath::id() const {
  // @@protoc_insertion_point(field_get:pb.FrameDeath.id)
  return id_;
}
inline void FrameDeath::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:pb.FrameDeath.id)
}

// required uint32 murderer_id = 2;
inline bool FrameDeath::has_murderer_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FrameDeath::set_has_murderer_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FrameDeath::clear_has_murderer_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FrameDeath::clear_murderer_id() {
  murderer_id_ = 0u;
  clear_has_murderer_id();
}
inline ::google::protobuf::uint32 FrameDeath::murderer_id() const {
  // @@protoc_insertion_point(field_get:pb.FrameDeath.murderer_id)
  return murderer_id_;
}
inline void FrameDeath::set_murderer_id(::google::protobuf::uint32 value) {
  set_has_murderer_id();
  murderer_id_ = value;
  // @@protoc_insertion_point(field_set:pb.FrameDeath.murderer_id)
}

// required uint32 murderer_cur_socre = 3;
inline bool FrameDeath::has_murderer_cur_socre() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FrameDeath::set_has_murderer_cur_socre() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FrameDeath::clear_has_murderer_cur_socre() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FrameDeath::clear_murderer_cur_socre() {
  murderer_cur_socre_ = 0u;
  clear_has_murderer_cur_socre();
}
inline ::google::protobuf::uint32 FrameDeath::murderer_cur_socre() const {
  // @@protoc_insertion_point(field_get:pb.FrameDeath.murderer_cur_socre)
  return murderer_cur_socre_;
}
inline void FrameDeath::set_murderer_cur_socre(::google::protobuf::uint32 value) {
  set_has_murderer_cur_socre();
  murderer_cur_socre_ = value;
  // @@protoc_insertion_point(field_set:pb.FrameDeath.murderer_cur_socre)
}

// required uint32 owner_cur_socre = 4;
inline bool FrameDeath::has_owner_cur_socre() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FrameDeath::set_has_owner_cur_socre() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FrameDeath::clear_has_owner_cur_socre() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FrameDeath::clear_owner_cur_socre() {
  owner_cur_socre_ = 0u;
  clear_has_owner_cur_socre();
}
inline ::google::protobuf::uint32 FrameDeath::owner_cur_socre() const {
  // @@protoc_insertion_point(field_get:pb.FrameDeath.owner_cur_socre)
  return owner_cur_socre_;
}
inline void FrameDeath::set_owner_cur_socre(::google::protobuf::uint32 value) {
  set_has_owner_cur_socre();
  owner_cur_socre_ = value;
  // @@protoc_insertion_point(field_set:pb.FrameDeath.owner_cur_socre)
}

// -------------------------------------------------------------------

// FrameRelive

// required .pb.RoomPlayer player = 1;
inline bool FrameRelive::has_player() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FrameRelive::set_has_player() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FrameRelive::clear_has_player() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FrameRelive::clear_player() {
  if (player_ != NULL) player_->::pb::RoomPlayer::Clear();
  clear_has_player();
}
inline const ::pb::RoomPlayer& FrameRelive::player() const {
  // @@protoc_insertion_point(field_get:pb.FrameRelive.player)
  return player_ != NULL ? *player_
                         : *::pb::RoomPlayer::internal_default_instance();
}
inline ::pb::RoomPlayer* FrameRelive::mutable_player() {
  set_has_player();
  if (player_ == NULL) {
    player_ = new ::pb::RoomPlayer;
  }
  // @@protoc_insertion_point(field_mutable:pb.FrameRelive.player)
  return player_;
}
inline ::pb::RoomPlayer* FrameRelive::release_player() {
  // @@protoc_insertion_point(field_release:pb.FrameRelive.player)
  clear_has_player();
  ::pb::RoomPlayer* temp = player_;
  player_ = NULL;
  return temp;
}
inline void FrameRelive::set_allocated_player(::pb::RoomPlayer* player) {
  delete player_;
  player_ = player;
  if (player) {
    set_has_player();
  } else {
    clear_has_player();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.FrameRelive.player)
}

// -------------------------------------------------------------------

// FrameActionStart

// required uint32 player_id = 1;
inline bool FrameActionStart::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FrameActionStart::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FrameActionStart::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FrameActionStart::clear_player_id() {
  player_id_ = 0u;
  clear_has_player_id();
}
inline ::google::protobuf::uint32 FrameActionStart::player_id() const {
  // @@protoc_insertion_point(field_get:pb.FrameActionStart.player_id)
  return player_id_;
}
inline void FrameActionStart::set_player_id(::google::protobuf::uint32 value) {
  set_has_player_id();
  player_id_ = value;
  // @@protoc_insertion_point(field_set:pb.FrameActionStart.player_id)
}

// required uint32 spell_id = 2;
inline bool FrameActionStart::has_spell_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FrameActionStart::set_has_spell_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FrameActionStart::clear_has_spell_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FrameActionStart::clear_spell_id() {
  spell_id_ = 0u;
  clear_has_spell_id();
}
inline ::google::protobuf::uint32 FrameActionStart::spell_id() const {
  // @@protoc_insertion_point(field_get:pb.FrameActionStart.spell_id)
  return spell_id_;
}
inline void FrameActionStart::set_spell_id(::google::protobuf::uint32 value) {
  set_has_spell_id();
  spell_id_ = value;
  // @@protoc_insertion_point(field_set:pb.FrameActionStart.spell_id)
}

// required uint32 action_id = 3;
inline bool FrameActionStart::has_action_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FrameActionStart::set_has_action_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FrameActionStart::clear_has_action_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FrameActionStart::clear_action_id() {
  action_id_ = 0u;
  clear_has_action_id();
}
inline ::google::protobuf::uint32 FrameActionStart::action_id() const {
  // @@protoc_insertion_point(field_get:pb.FrameActionStart.action_id)
  return action_id_;
}
inline void FrameActionStart::set_action_id(::google::protobuf::uint32 value) {
  set_has_action_id();
  action_id_ = value;
  // @@protoc_insertion_point(field_set:pb.FrameActionStart.action_id)
}

// required uint32 left_cd = 4;
inline bool FrameActionStart::has_left_cd() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FrameActionStart::set_has_left_cd() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FrameActionStart::clear_has_left_cd() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FrameActionStart::clear_left_cd() {
  left_cd_ = 0u;
  clear_has_left_cd();
}
inline ::google::protobuf::uint32 FrameActionStart::left_cd() const {
  // @@protoc_insertion_point(field_get:pb.FrameActionStart.left_cd)
  return left_cd_;
}
inline void FrameActionStart::set_left_cd(::google::protobuf::uint32 value) {
  set_has_left_cd();
  left_cd_ = value;
  // @@protoc_insertion_point(field_set:pb.FrameActionStart.left_cd)
}

// -------------------------------------------------------------------

// FrameStartBuff

// required .pb.RoomBuff buff = 1;
inline bool FrameStartBuff::has_buff() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FrameStartBuff::set_has_buff() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FrameStartBuff::clear_has_buff() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FrameStartBuff::clear_buff() {
  if (buff_ != NULL) buff_->::pb::RoomBuff::Clear();
  clear_has_buff();
}
inline const ::pb::RoomBuff& FrameStartBuff::buff() const {
  // @@protoc_insertion_point(field_get:pb.FrameStartBuff.buff)
  return buff_ != NULL ? *buff_
                         : *::pb::RoomBuff::internal_default_instance();
}
inline ::pb::RoomBuff* FrameStartBuff::mutable_buff() {
  set_has_buff();
  if (buff_ == NULL) {
    buff_ = new ::pb::RoomBuff;
  }
  // @@protoc_insertion_point(field_mutable:pb.FrameStartBuff.buff)
  return buff_;
}
inline ::pb::RoomBuff* FrameStartBuff::release_buff() {
  // @@protoc_insertion_point(field_release:pb.FrameStartBuff.buff)
  clear_has_buff();
  ::pb::RoomBuff* temp = buff_;
  buff_ = NULL;
  return temp;
}
inline void FrameStartBuff::set_allocated_buff(::pb::RoomBuff* buff) {
  delete buff_;
  buff_ = buff;
  if (buff) {
    set_has_buff();
  } else {
    clear_has_buff();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.FrameStartBuff.buff)
}

// -------------------------------------------------------------------

// FrameRemoveBuff

// optional uint32 player_id = 1;
inline bool FrameRemoveBuff::has_player_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FrameRemoveBuff::set_has_player_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FrameRemoveBuff::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FrameRemoveBuff::clear_player_id() {
  player_id_ = 0u;
  clear_has_player_id();
}
inline ::google::protobuf::uint32 FrameRemoveBuff::player_id() const {
  // @@protoc_insertion_point(field_get:pb.FrameRemoveBuff.player_id)
  return player_id_;
}
inline void FrameRemoveBuff::set_player_id(::google::protobuf::uint32 value) {
  set_has_player_id();
  player_id_ = value;
  // @@protoc_insertion_point(field_set:pb.FrameRemoveBuff.player_id)
}

// required string buff_id = 2;
inline bool FrameRemoveBuff::has_buff_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FrameRemoveBuff::set_has_buff_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FrameRemoveBuff::clear_has_buff_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FrameRemoveBuff::clear_buff_id() {
  buff_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_buff_id();
}
inline const ::std::string& FrameRemoveBuff::buff_id() const {
  // @@protoc_insertion_point(field_get:pb.FrameRemoveBuff.buff_id)
  return buff_id_.GetNoArena();
}
inline void FrameRemoveBuff::set_buff_id(const ::std::string& value) {
  set_has_buff_id();
  buff_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.FrameRemoveBuff.buff_id)
}
#if LANG_CXX11
inline void FrameRemoveBuff::set_buff_id(::std::string&& value) {
  set_has_buff_id();
  buff_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.FrameRemoveBuff.buff_id)
}
#endif
inline void FrameRemoveBuff::set_buff_id(const char* value) {
  set_has_buff_id();
  buff_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.FrameRemoveBuff.buff_id)
}
inline void FrameRemoveBuff::set_buff_id(const char* value, size_t size) {
  set_has_buff_id();
  buff_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.FrameRemoveBuff.buff_id)
}
inline ::std::string* FrameRemoveBuff::mutable_buff_id() {
  set_has_buff_id();
  // @@protoc_insertion_point(field_mutable:pb.FrameRemoveBuff.buff_id)
  return buff_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FrameRemoveBuff::release_buff_id() {
  // @@protoc_insertion_point(field_release:pb.FrameRemoveBuff.buff_id)
  clear_has_buff_id();
  return buff_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FrameRemoveBuff::set_allocated_buff_id(::std::string* buff_id) {
  if (buff_id != NULL) {
    set_has_buff_id();
  } else {
    clear_has_buff_id();
  }
  buff_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), buff_id);
  // @@protoc_insertion_point(field_set_allocated:pb.FrameRemoveBuff.buff_id)
}

// -------------------------------------------------------------------

// FrameSpellState

// required uint32 player_id = 1;
inline bool FrameSpellState::has_player_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FrameSpellState::set_has_player_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FrameSpellState::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FrameSpellState::clear_player_id() {
  player_id_ = 0u;
  clear_has_player_id();
}
inline ::google::protobuf::uint32 FrameSpellState::player_id() const {
  // @@protoc_insertion_point(field_get:pb.FrameSpellState.player_id)
  return player_id_;
}
inline void FrameSpellState::set_player_id(::google::protobuf::uint32 value) {
  set_has_player_id();
  player_id_ = value;
  // @@protoc_insertion_point(field_set:pb.FrameSpellState.player_id)
}

// required string action_id = 2;
inline bool FrameSpellState::has_action_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FrameSpellState::set_has_action_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FrameSpellState::clear_has_action_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FrameSpellState::clear_action_id() {
  action_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_action_id();
}
inline const ::std::string& FrameSpellState::action_id() const {
  // @@protoc_insertion_point(field_get:pb.FrameSpellState.action_id)
  return action_id_.GetNoArena();
}
inline void FrameSpellState::set_action_id(const ::std::string& value) {
  set_has_action_id();
  action_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.FrameSpellState.action_id)
}
#if LANG_CXX11
inline void FrameSpellState::set_action_id(::std::string&& value) {
  set_has_action_id();
  action_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.FrameSpellState.action_id)
}
#endif
inline void FrameSpellState::set_action_id(const char* value) {
  set_has_action_id();
  action_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.FrameSpellState.action_id)
}
inline void FrameSpellState::set_action_id(const char* value, size_t size) {
  set_has_action_id();
  action_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.FrameSpellState.action_id)
}
inline ::std::string* FrameSpellState::mutable_action_id() {
  set_has_action_id();
  // @@protoc_insertion_point(field_mutable:pb.FrameSpellState.action_id)
  return action_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FrameSpellState::release_action_id() {
  // @@protoc_insertion_point(field_release:pb.FrameSpellState.action_id)
  clear_has_action_id();
  return action_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FrameSpellState::set_allocated_action_id(::std::string* action_id) {
  if (action_id != NULL) {
    set_has_action_id();
  } else {
    clear_has_action_id();
  }
  action_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), action_id);
  // @@protoc_insertion_point(field_set_allocated:pb.FrameSpellState.action_id)
}

// required uint32 state = 3;
inline bool FrameSpellState::has_state() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FrameSpellState::set_has_state() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FrameSpellState::clear_has_state() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FrameSpellState::clear_state() {
  state_ = 0u;
  clear_has_state();
}
inline ::google::protobuf::uint32 FrameSpellState::state() const {
  // @@protoc_insertion_point(field_get:pb.FrameSpellState.state)
  return state_;
}
inline void FrameSpellState::set_state(::google::protobuf::uint32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:pb.FrameSpellState.state)
}

// required string cur_gen_id = 4;
inline bool FrameSpellState::has_cur_gen_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FrameSpellState::set_has_cur_gen_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FrameSpellState::clear_has_cur_gen_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FrameSpellState::clear_cur_gen_id() {
  cur_gen_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_cur_gen_id();
}
inline const ::std::string& FrameSpellState::cur_gen_id() const {
  // @@protoc_insertion_point(field_get:pb.FrameSpellState.cur_gen_id)
  return cur_gen_id_.GetNoArena();
}
inline void FrameSpellState::set_cur_gen_id(const ::std::string& value) {
  set_has_cur_gen_id();
  cur_gen_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pb.FrameSpellState.cur_gen_id)
}
#if LANG_CXX11
inline void FrameSpellState::set_cur_gen_id(::std::string&& value) {
  set_has_cur_gen_id();
  cur_gen_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pb.FrameSpellState.cur_gen_id)
}
#endif
inline void FrameSpellState::set_cur_gen_id(const char* value) {
  set_has_cur_gen_id();
  cur_gen_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pb.FrameSpellState.cur_gen_id)
}
inline void FrameSpellState::set_cur_gen_id(const char* value, size_t size) {
  set_has_cur_gen_id();
  cur_gen_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pb.FrameSpellState.cur_gen_id)
}
inline ::std::string* FrameSpellState::mutable_cur_gen_id() {
  set_has_cur_gen_id();
  // @@protoc_insertion_point(field_mutable:pb.FrameSpellState.cur_gen_id)
  return cur_gen_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FrameSpellState::release_cur_gen_id() {
  // @@protoc_insertion_point(field_release:pb.FrameSpellState.cur_gen_id)
  clear_has_cur_gen_id();
  return cur_gen_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FrameSpellState::set_allocated_cur_gen_id(::std::string* cur_gen_id) {
  if (cur_gen_id != NULL) {
    set_has_cur_gen_id();
  } else {
    clear_has_cur_gen_id();
  }
  cur_gen_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cur_gen_id);
  // @@protoc_insertion_point(field_set_allocated:pb.FrameSpellState.cur_gen_id)
}

// -------------------------------------------------------------------

// FrameSceneItemCreate

// required .pb.RoomItem item = 1;
inline bool FrameSceneItemCreate::has_item() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FrameSceneItemCreate::set_has_item() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FrameSceneItemCreate::clear_has_item() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FrameSceneItemCreate::clear_item() {
  if (item_ != NULL) item_->::pb::RoomItem::Clear();
  clear_has_item();
}
inline const ::pb::RoomItem& FrameSceneItemCreate::item() const {
  // @@protoc_insertion_point(field_get:pb.FrameSceneItemCreate.item)
  return item_ != NULL ? *item_
                         : *::pb::RoomItem::internal_default_instance();
}
inline ::pb::RoomItem* FrameSceneItemCreate::mutable_item() {
  set_has_item();
  if (item_ == NULL) {
    item_ = new ::pb::RoomItem;
  }
  // @@protoc_insertion_point(field_mutable:pb.FrameSceneItemCreate.item)
  return item_;
}
inline ::pb::RoomItem* FrameSceneItemCreate::release_item() {
  // @@protoc_insertion_point(field_release:pb.FrameSceneItemCreate.item)
  clear_has_item();
  ::pb::RoomItem* temp = item_;
  item_ = NULL;
  return temp;
}
inline void FrameSceneItemCreate::set_allocated_item(::pb::RoomItem* item) {
  delete item_;
  item_ = item;
  if (item) {
    set_has_item();
  } else {
    clear_has_item();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.FrameSceneItemCreate.item)
}

// -------------------------------------------------------------------

// FrameSceneItemRemove

// required uint32 id = 1;
inline bool FrameSceneItemRemove::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FrameSceneItemRemove::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FrameSceneItemRemove::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FrameSceneItemRemove::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 FrameSceneItemRemove::id() const {
  // @@protoc_insertion_point(field_get:pb.FrameSceneItemRemove.id)
  return id_;
}
inline void FrameSceneItemRemove::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:pb.FrameSceneItemRemove.id)
}

// -------------------------------------------------------------------

// FrameLevelUp

// required uint32 player_id = 1;
inline bool FrameLevelUp::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FrameLevelUp::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FrameLevelUp::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FrameLevelUp::clear_player_id() {
  player_id_ = 0u;
  clear_has_player_id();
}
inline ::google::protobuf::uint32 FrameLevelUp::player_id() const {
  // @@protoc_insertion_point(field_get:pb.FrameLevelUp.player_id)
  return player_id_;
}
inline void FrameLevelUp::set_player_id(::google::protobuf::uint32 value) {
  set_has_player_id();
  player_id_ = value;
  // @@protoc_insertion_point(field_set:pb.FrameLevelUp.player_id)
}

// required uint32 player_level = 2;
inline bool FrameLevelUp::has_player_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FrameLevelUp::set_has_player_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FrameLevelUp::clear_has_player_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FrameLevelUp::clear_player_level() {
  player_level_ = 0u;
  clear_has_player_level();
}
inline ::google::protobuf::uint32 FrameLevelUp::player_level() const {
  // @@protoc_insertion_point(field_get:pb.FrameLevelUp.player_level)
  return player_level_;
}
inline void FrameLevelUp::set_player_level(::google::protobuf::uint32 value) {
  set_has_player_level();
  player_level_ = value;
  // @@protoc_insertion_point(field_set:pb.FrameLevelUp.player_level)
}

// required uint32 player_spell_point = 3;
inline bool FrameLevelUp::has_player_spell_point() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FrameLevelUp::set_has_player_spell_point() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FrameLevelUp::clear_has_player_spell_point() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FrameLevelUp::clear_player_spell_point() {
  player_spell_point_ = 0u;
  clear_has_player_spell_point();
}
inline ::google::protobuf::uint32 FrameLevelUp::player_spell_point() const {
  // @@protoc_insertion_point(field_get:pb.FrameLevelUp.player_spell_point)
  return player_spell_point_;
}
inline void FrameLevelUp::set_player_spell_point(::google::protobuf::uint32 value) {
  set_has_player_spell_point();
  player_spell_point_ = value;
  // @@protoc_insertion_point(field_set:pb.FrameLevelUp.player_spell_point)
}

// -------------------------------------------------------------------

// FramePlayerState

// required uint32 player_id = 1;
inline bool FramePlayerState::has_player_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FramePlayerState::set_has_player_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FramePlayerState::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FramePlayerState::clear_player_id() {
  player_id_ = 0u;
  clear_has_player_id();
}
inline ::google::protobuf::uint32 FramePlayerState::player_id() const {
  // @@protoc_insertion_point(field_get:pb.FramePlayerState.player_id)
  return player_id_;
}
inline void FramePlayerState::set_player_id(::google::protobuf::uint32 value) {
  set_has_player_id();
  player_id_ = value;
  // @@protoc_insertion_point(field_set:pb.FramePlayerState.player_id)
}

// required .pb.RoomPlayerState state = 2;
inline bool FramePlayerState::has_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FramePlayerState::set_has_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FramePlayerState::clear_has_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FramePlayerState::clear_state() {
  if (state_ != NULL) state_->::pb::RoomPlayerState::Clear();
  clear_has_state();
}
inline const ::pb::RoomPlayerState& FramePlayerState::state() const {
  // @@protoc_insertion_point(field_get:pb.FramePlayerState.state)
  return state_ != NULL ? *state_
                         : *::pb::RoomPlayerState::internal_default_instance();
}
inline ::pb::RoomPlayerState* FramePlayerState::mutable_state() {
  set_has_state();
  if (state_ == NULL) {
    state_ = new ::pb::RoomPlayerState;
  }
  // @@protoc_insertion_point(field_mutable:pb.FramePlayerState.state)
  return state_;
}
inline ::pb::RoomPlayerState* FramePlayerState::release_state() {
  // @@protoc_insertion_point(field_release:pb.FramePlayerState.state)
  clear_has_state();
  ::pb::RoomPlayerState* temp = state_;
  state_ = NULL;
  return temp;
}
inline void FramePlayerState::set_allocated_state(::pb::RoomPlayerState* state) {
  delete state_;
  state_ = state;
  if (state) {
    set_has_state();
  } else {
    clear_has_state();
  }
  // @@protoc_insertion_point(field_set_allocated:pb.FramePlayerState.state)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace pb

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::pb::FRAME> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::pb::FRAME>() {
  return ::pb::FRAME_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ns_2froom_5fscene_2eproto__INCLUDED
