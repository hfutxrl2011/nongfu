// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ns/command.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ns/command.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pb {

namespace protobuf_ns_2fcommand_2eproto {


namespace {

const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = { ~0u };
static const ::google::protobuf::internal::MigrationSchema* schemas = NULL;
static const ::google::protobuf::Message* const* file_default_instances = NULL;
namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "ns/command.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      NULL, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
}

}  // namespace

void TableStruct::Shutdown() {
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\020ns/command.proto\022\002pb*\212\003\n\003CMD\022\010\n\004NONE\020\000"
      "\022\016\n\tERROR_MSG\020\350\007\022\017\n\nHALL_LOGIN\020\321\017\022\024\n\017HAL"
      "L_START_GAME\020\322\017\022\017\n\nROOM_LOGIN\020\271\027\022\016\n\tROOM"
      "_PING\020\272\027\022\024\n\017ROOM_ADD_PLAYER\020\274\027\022\027\n\022ROOM_R"
      "EMOVE_PLAYER\020\275\027\022\026\n\021ROOM_FRAME_NOTIFY\020\276\027\022"
      "\027\n\022ROOM_LADDER_NOTIFY\020\277\027\022\026\n\021ROOM_KILLS_N"
      "OTIFY\020\300\027\022\027\n\022ROOM_RELIVE_PLAYER\020\301\027\022\016\n\tROO"
      "M_MOVE\020\235\030\022\024\n\017ROOM_MOVE_FORCE\020\236\030\022\030\n\023ROOM_"
      "MOVE_FORCE_RES\020\237\030\022\016\n\tROOM_STOP\020\241\030\022\017\n\nROO"
      "M_SPELL\020\242\030\022\030\n\023ROOM_SPELL_LEVEL_UP\020\244\030\022\025\n\020"
      "RCENTER_REGISTER\020\241\037"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 419);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ns/command.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_ns_2fcommand_2eproto

const ::google::protobuf::EnumDescriptor* CMD_descriptor() {
  protobuf_ns_2fcommand_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ns_2fcommand_2eproto::file_level_enum_descriptors[0];
}
bool CMD_IsValid(int value) {
  switch (value) {
    case 0:
    case 1000:
    case 2001:
    case 2002:
    case 3001:
    case 3002:
    case 3004:
    case 3005:
    case 3006:
    case 3007:
    case 3008:
    case 3009:
    case 3101:
    case 3102:
    case 3103:
    case 3105:
    case 3106:
    case 3108:
    case 4001:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace pb

// @@protoc_insertion_point(global_scope)
