// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: game.proto

#ifndef PROTOBUF_game_2eproto__INCLUDED
#define PROTOBUF_game_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace proto {
class CombatData;
class CombatDataDefaultTypeInternal;
extern CombatDataDefaultTypeInternal _CombatData_default_instance_;
class CombatDataSync;
class CombatDataSyncDefaultTypeInternal;
extern CombatDataSyncDefaultTypeInternal _CombatDataSync_default_instance_;
class CombatFinishNotify;
class CombatFinishNotifyDefaultTypeInternal;
extern CombatFinishNotifyDefaultTypeInternal _CombatFinishNotify_default_instance_;
class CombatMatchNotify;
class CombatMatchNotifyDefaultTypeInternal;
extern CombatMatchNotifyDefaultTypeInternal _CombatMatchNotify_default_instance_;
class CombatMatchReq;
class CombatMatchReqDefaultTypeInternal;
extern CombatMatchReqDefaultTypeInternal _CombatMatchReq_default_instance_;
class CombatMember;
class CombatMemberDefaultTypeInternal;
extern CombatMemberDefaultTypeInternal _CombatMember_default_instance_;
class CombatMemberDeadNotify;
class CombatMemberDeadNotifyDefaultTypeInternal;
extern CombatMemberDeadNotifyDefaultTypeInternal _CombatMemberDeadNotify_default_instance_;
class CombatMemberDeadReq;
class CombatMemberDeadReqDefaultTypeInternal;
extern CombatMemberDeadReqDefaultTypeInternal _CombatMemberDeadReq_default_instance_;
class CombatMemberLeave;
class CombatMemberLeaveDefaultTypeInternal;
extern CombatMemberLeaveDefaultTypeInternal _CombatMemberLeave_default_instance_;
class CombatMemberOfflineNotify;
class CombatMemberOfflineNotifyDefaultTypeInternal;
extern CombatMemberOfflineNotifyDefaultTypeInternal _CombatMemberOfflineNotify_default_instance_;
class CombatMembersSync;
class CombatMembersSyncDefaultTypeInternal;
extern CombatMembersSyncDefaultTypeInternal _CombatMembersSync_default_instance_;
class CombatPickUpItemReq;
class CombatPickUpItemReqDefaultTypeInternal;
extern CombatPickUpItemReqDefaultTypeInternal _CombatPickUpItemReq_default_instance_;
class CombatPickUpItemRes;
class CombatPickUpItemResDefaultTypeInternal;
extern CombatPickUpItemResDefaultTypeInternal _CombatPickUpItemRes_default_instance_;
class CombatPullSync;
class CombatPullSyncDefaultTypeInternal;
extern CombatPullSyncDefaultTypeInternal _CombatPullSync_default_instance_;
class CombatReadyReq;
class CombatReadyReqDefaultTypeInternal;
extern CombatReadyReqDefaultTypeInternal _CombatReadyReq_default_instance_;
class CombatSetPositionRes;
class CombatSetPositionResDefaultTypeInternal;
extern CombatSetPositionResDefaultTypeInternal _CombatSetPositionRes_default_instance_;
class CombatStartNotify;
class CombatStartNotifyDefaultTypeInternal;
extern CombatStartNotifyDefaultTypeInternal _CombatStartNotify_default_instance_;
class HeartBeat;
class HeartBeatDefaultTypeInternal;
extern HeartBeatDefaultTypeInternal _HeartBeat_default_instance_;
class LoginReq;
class LoginReqDefaultTypeInternal;
extern LoginReqDefaultTypeInternal _LoginReq_default_instance_;
class LoginRes;
class LoginResDefaultTypeInternal;
extern LoginResDefaultTypeInternal _LoginRes_default_instance_;
class MapItem;
class MapItemDefaultTypeInternal;
extern MapItemDefaultTypeInternal _MapItem_default_instance_;
class Position;
class PositionDefaultTypeInternal;
extern PositionDefaultTypeInternal _Position_default_instance_;
class PositionPair;
class PositionPairDefaultTypeInternal;
extern PositionPairDefaultTypeInternal _PositionPair_default_instance_;
class ProtocolStatusRes;
class ProtocolStatusResDefaultTypeInternal;
extern ProtocolStatusResDefaultTypeInternal _ProtocolStatusRes_default_instance_;
class ResStatus;
class ResStatusDefaultTypeInternal;
extern ResStatusDefaultTypeInternal _ResStatus_default_instance_;
}  // namespace proto

namespace proto {

namespace protobuf_game_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_game_2eproto

enum CMD {
  NONE = 0,
  HEART_BEAT = 1,
  PROTOCOL_STATUS = 2,
  TEST = 3,
  LOGIN = 2001,
  CREATE_PLAYER = 2002,
  COMBAT_MATCH = 3001,
  COMBAT_MATCH_NOTIFY = 3002,
  COMBAT_READY = 3003,
  COMBAT_START_NOTIFY = 3004,
  COMBAT_MEMBER_DEAD = 3005,
  COMBAT_MEMBER_OFFLINE_NOTIFY = 3006,
  COMBAT_FINISH_NOTIFY = 3007,
  COMBAT_DATA_SYNC = 3008,
  COMBAT_MEMBERS_SYNC = 3009,
  COMBAT_PULL_SYNC = 3010,
  COMBAT_MEMBER_LEAVE = 3011,
  COMBAT_PICK_UP_ITEM = 3012,
  COMBAT_SET_POSITION = 3013
};
bool CMD_IsValid(int value);
const CMD CMD_MIN = NONE;
const CMD CMD_MAX = COMBAT_SET_POSITION;
const int CMD_ARRAYSIZE = CMD_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMD_descriptor();
inline const ::std::string& CMD_Name(CMD value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMD_descriptor(), value);
}
inline bool CMD_Parse(
    const ::std::string& name, CMD* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMD>(
    CMD_descriptor(), name, value);
}
enum EC {
  OK = 0,
  ERROR = 1,
  VERSION_UNMATCH = 2
};
bool EC_IsValid(int value);
const EC EC_MIN = OK;
const EC EC_MAX = VERSION_UNMATCH;
const int EC_ARRAYSIZE = EC_MAX + 1;

const ::google::protobuf::EnumDescriptor* EC_descriptor();
inline const ::std::string& EC_Name(EC value) {
  return ::google::protobuf::internal::NameOfEnum(
    EC_descriptor(), value);
}
inline bool EC_Parse(
    const ::std::string& name, EC* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EC>(
    EC_descriptor(), name, value);
}
enum VERSION {
  PROTO = 1
};
bool VERSION_IsValid(int value);
const VERSION VERSION_MIN = PROTO;
const VERSION VERSION_MAX = PROTO;
const int VERSION_ARRAYSIZE = VERSION_MAX + 1;

const ::google::protobuf::EnumDescriptor* VERSION_descriptor();
inline const ::std::string& VERSION_Name(VERSION value) {
  return ::google::protobuf::internal::NameOfEnum(
    VERSION_descriptor(), value);
}
inline bool VERSION_Parse(
    const ::std::string& name, VERSION* value) {
  return ::google::protobuf::internal::ParseNamedEnum<VERSION>(
    VERSION_descriptor(), name, value);
}
// ===================================================================

class HeartBeat : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.HeartBeat) */ {
 public:
  HeartBeat();
  virtual ~HeartBeat();

  HeartBeat(const HeartBeat& from);

  inline HeartBeat& operator=(const HeartBeat& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HeartBeat& default_instance();

  static inline const HeartBeat* internal_default_instance() {
    return reinterpret_cast<const HeartBeat*>(
               &_HeartBeat_default_instance_);
  }

  void Swap(HeartBeat* other);

  // implements Message ----------------------------------------------

  inline HeartBeat* New() const PROTOBUF_FINAL { return New(NULL); }

  HeartBeat* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HeartBeat& from);
  void MergeFrom(const HeartBeat& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HeartBeat* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.HeartBeat)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct  protobuf_game_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ResStatus : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ResStatus) */ {
 public:
  ResStatus();
  virtual ~ResStatus();

  ResStatus(const ResStatus& from);

  inline ResStatus& operator=(const ResStatus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResStatus& default_instance();

  static inline const ResStatus* internal_default_instance() {
    return reinterpret_cast<const ResStatus*>(
               &_ResStatus_default_instance_);
  }

  void Swap(ResStatus* other);

  // implements Message ----------------------------------------------

  inline ResStatus* New() const PROTOBUF_FINAL { return New(NULL); }

  ResStatus* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ResStatus& from);
  void MergeFrom(const ResStatus& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ResStatus* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 kind = 1;
  bool has_kind() const;
  void clear_kind();
  static const int kKindFieldNumber = 1;
  ::google::protobuf::uint32 kind() const;
  void set_kind(::google::protobuf::uint32 value);

  // optional uint32 modelId = 2;
  bool has_modelid() const;
  void clear_modelid();
  static const int kModelIdFieldNumber = 2;
  ::google::protobuf::uint32 modelid() const;
  void set_modelid(::google::protobuf::uint32 value);

  // optional uint32 count = 3;
  bool has_count() const;
  void clear_count();
  static const int kCountFieldNumber = 3;
  ::google::protobuf::uint32 count() const;
  void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ResStatus)
 private:
  void set_has_kind();
  void clear_has_kind();
  void set_has_modelid();
  void clear_has_modelid();
  void set_has_count();
  void clear_has_count();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 kind_;
  ::google::protobuf::uint32 modelid_;
  ::google::protobuf::uint32 count_;
  friend struct  protobuf_game_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ProtocolStatusRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.ProtocolStatusRes) */ {
 public:
  ProtocolStatusRes();
  virtual ~ProtocolStatusRes();

  ProtocolStatusRes(const ProtocolStatusRes& from);

  inline ProtocolStatusRes& operator=(const ProtocolStatusRes& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtocolStatusRes& default_instance();

  static inline const ProtocolStatusRes* internal_default_instance() {
    return reinterpret_cast<const ProtocolStatusRes*>(
               &_ProtocolStatusRes_default_instance_);
  }

  void Swap(ProtocolStatusRes* other);

  // implements Message ----------------------------------------------

  inline ProtocolStatusRes* New() const PROTOBUF_FINAL { return New(NULL); }

  ProtocolStatusRes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ProtocolStatusRes& from);
  void MergeFrom(const ProtocolStatusRes& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ProtocolStatusRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.ResStatus res = 3;
  bool has_res() const;
  void clear_res();
  static const int kResFieldNumber = 3;
  const ::proto::ResStatus& res() const;
  ::proto::ResStatus* mutable_res();
  ::proto::ResStatus* release_res();
  void set_allocated_res(::proto::ResStatus* res);

  // optional uint32 cmd = 1;
  bool has_cmd() const;
  void clear_cmd();
  static const int kCmdFieldNumber = 1;
  ::google::protobuf::uint32 cmd() const;
  void set_cmd(::google::protobuf::uint32 value);

  // optional uint32 errCode = 2;
  bool has_errcode() const;
  void clear_errcode();
  static const int kErrCodeFieldNumber = 2;
  ::google::protobuf::uint32 errcode() const;
  void set_errcode(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.ProtocolStatusRes)
 private:
  void set_has_cmd();
  void clear_has_cmd();
  void set_has_errcode();
  void clear_has_errcode();
  void set_has_res();
  void clear_has_res();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::proto::ResStatus* res_;
  ::google::protobuf::uint32 cmd_;
  ::google::protobuf::uint32 errcode_;
  friend struct  protobuf_game_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LoginReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.LoginReq) */ {
 public:
  LoginReq();
  virtual ~LoginReq();

  LoginReq(const LoginReq& from);

  inline LoginReq& operator=(const LoginReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginReq& default_instance();

  static inline const LoginReq* internal_default_instance() {
    return reinterpret_cast<const LoginReq*>(
               &_LoginReq_default_instance_);
  }

  void Swap(LoginReq* other);

  // implements Message ----------------------------------------------

  inline LoginReq* New() const PROTOBUF_FINAL { return New(NULL); }

  LoginReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LoginReq& from);
  void MergeFrom(const LoginReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LoginReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string token = 1;
  bool has_token() const;
  void clear_token();
  static const int kTokenFieldNumber = 1;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // required string account = 2;
  bool has_account() const;
  void clear_account();
  static const int kAccountFieldNumber = 2;
  const ::std::string& account() const;
  void set_account(const ::std::string& value);
  #if LANG_CXX11
  void set_account(::std::string&& value);
  #endif
  void set_account(const char* value);
  void set_account(const char* value, size_t size);
  ::std::string* mutable_account();
  ::std::string* release_account();
  void set_allocated_account(::std::string* account);

  // optional string ip = 10;
  bool has_ip() const;
  void clear_ip();
  static const int kIpFieldNumber = 10;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_ip(::std::string&& value);
  #endif
  void set_ip(const char* value);
  void set_ip(const char* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // optional bytes extra = 21;
  bool has_extra() const;
  void clear_extra();
  static const int kExtraFieldNumber = 21;
  const ::std::string& extra() const;
  void set_extra(const ::std::string& value);
  #if LANG_CXX11
  void set_extra(::std::string&& value);
  #endif
  void set_extra(const char* value);
  void set_extra(const void* value, size_t size);
  ::std::string* mutable_extra();
  ::std::string* release_extra();
  void set_allocated_extra(::std::string* extra);

  // required uint32 district = 3;
  bool has_district() const;
  void clear_district();
  static const int kDistrictFieldNumber = 3;
  ::google::protobuf::uint32 district() const;
  void set_district(::google::protobuf::uint32 value);

  // required uint32 version = 4;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 4;
  ::google::protobuf::uint32 version() const;
  void set_version(::google::protobuf::uint32 value);

  // optional uint32 time = 6;
  bool has_time() const;
  void clear_time();
  static const int kTimeFieldNumber = 6;
  ::google::protobuf::uint32 time() const;
  void set_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.LoginReq)
 private:
  void set_has_token();
  void clear_has_token();
  void set_has_account();
  void clear_has_account();
  void set_has_district();
  void clear_has_district();
  void set_has_version();
  void clear_has_version();
  void set_has_time();
  void clear_has_time();
  void set_has_ip();
  void clear_has_ip();
  void set_has_extra();
  void clear_has_extra();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::internal::ArenaStringPtr account_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::google::protobuf::internal::ArenaStringPtr extra_;
  ::google::protobuf::uint32 district_;
  ::google::protobuf::uint32 version_;
  ::google::protobuf::uint32 time_;
  friend struct  protobuf_game_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LoginRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.LoginRes) */ {
 public:
  LoginRes();
  virtual ~LoginRes();

  LoginRes(const LoginRes& from);

  inline LoginRes& operator=(const LoginRes& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginRes& default_instance();

  static inline const LoginRes* internal_default_instance() {
    return reinterpret_cast<const LoginRes*>(
               &_LoginRes_default_instance_);
  }

  void Swap(LoginRes* other);

  // implements Message ----------------------------------------------

  inline LoginRes* New() const PROTOBUF_FINAL { return New(NULL); }

  LoginRes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LoginRes& from);
  void MergeFrom(const LoginRes& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LoginRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // required uint64 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // required uint64 score = 3;
  bool has_score() const;
  void clear_score();
  static const int kScoreFieldNumber = 3;
  ::google::protobuf::uint64 score() const;
  void set_score(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.LoginRes)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_name();
  void clear_has_name();
  void set_has_score();
  void clear_has_score();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint64 score_;
  friend struct  protobuf_game_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CombatMatchReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CombatMatchReq) */ {
 public:
  CombatMatchReq();
  virtual ~CombatMatchReq();

  CombatMatchReq(const CombatMatchReq& from);

  inline CombatMatchReq& operator=(const CombatMatchReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CombatMatchReq& default_instance();

  static inline const CombatMatchReq* internal_default_instance() {
    return reinterpret_cast<const CombatMatchReq*>(
               &_CombatMatchReq_default_instance_);
  }

  void Swap(CombatMatchReq* other);

  // implements Message ----------------------------------------------

  inline CombatMatchReq* New() const PROTOBUF_FINAL { return New(NULL); }

  CombatMatchReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CombatMatchReq& from);
  void MergeFrom(const CombatMatchReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CombatMatchReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // required uint32 roleId = 1;
  bool has_roleid() const;
  void clear_roleid();
  static const int kRoleIdFieldNumber = 1;
  ::google::protobuf::uint32 roleid() const;
  void set_roleid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.CombatMatchReq)
 private:
  void set_has_roleid();
  void clear_has_roleid();
  void set_has_name();
  void clear_has_name();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint32 roleid_;
  friend struct  protobuf_game_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CombatMember : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CombatMember) */ {
 public:
  CombatMember();
  virtual ~CombatMember();

  CombatMember(const CombatMember& from);

  inline CombatMember& operator=(const CombatMember& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CombatMember& default_instance();

  static inline const CombatMember* internal_default_instance() {
    return reinterpret_cast<const CombatMember*>(
               &_CombatMember_default_instance_);
  }

  void Swap(CombatMember* other);

  // implements Message ----------------------------------------------

  inline CombatMember* New() const PROTOBUF_FINAL { return New(NULL); }

  CombatMember* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CombatMember& from);
  void MergeFrom(const CombatMember& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CombatMember* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // required string grade = 8;
  bool has_grade() const;
  void clear_grade();
  static const int kGradeFieldNumber = 8;
  const ::std::string& grade() const;
  void set_grade(const ::std::string& value);
  #if LANG_CXX11
  void set_grade(::std::string&& value);
  #endif
  void set_grade(const char* value);
  void set_grade(const char* value, size_t size);
  ::std::string* mutable_grade();
  ::std::string* release_grade();
  void set_allocated_grade(::std::string* grade);

  // required uint64 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // required bool ready = 3;
  bool has_ready() const;
  void clear_ready();
  static const int kReadyFieldNumber = 3;
  bool ready() const;
  void set_ready(bool value);

  // required bool dead = 4;
  bool has_dead() const;
  void clear_dead();
  static const int kDeadFieldNumber = 4;
  bool dead() const;
  void set_dead(bool value);

  // required bool robot = 7;
  bool has_robot() const;
  void clear_robot();
  static const int kRobotFieldNumber = 7;
  bool robot() const;
  void set_robot(bool value);

  // required uint32 roleId = 5;
  bool has_roleid() const;
  void clear_roleid();
  static const int kRoleIdFieldNumber = 5;
  ::google::protobuf::uint32 roleid() const;
  void set_roleid(::google::protobuf::uint32 value);

  // required int32 position = 6;
  bool has_position() const;
  void clear_position();
  static const int kPositionFieldNumber = 6;
  ::google::protobuf::int32 position() const;
  void set_position(::google::protobuf::int32 value);

  // required uint32 scoreGain = 9;
  bool has_scoregain() const;
  void clear_scoregain();
  static const int kScoreGainFieldNumber = 9;
  ::google::protobuf::uint32 scoregain() const;
  void set_scoregain(::google::protobuf::uint32 value);

  // required uint64 score = 10;
  bool has_score() const;
  void clear_score();
  static const int kScoreFieldNumber = 10;
  ::google::protobuf::uint64 score() const;
  void set_score(::google::protobuf::uint64 value);

  // required int32 z = 11;
  bool has_z() const;
  void clear_z();
  static const int kZFieldNumber = 11;
  ::google::protobuf::int32 z() const;
  void set_z(::google::protobuf::int32 value);

  // required int32 points = 12;
  bool has_points() const;
  void clear_points();
  static const int kPointsFieldNumber = 12;
  ::google::protobuf::int32 points() const;
  void set_points(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.CombatMember)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_name();
  void clear_has_name();
  void set_has_ready();
  void clear_has_ready();
  void set_has_dead();
  void clear_has_dead();
  void set_has_roleid();
  void clear_has_roleid();
  void set_has_position();
  void clear_has_position();
  void set_has_robot();
  void clear_has_robot();
  void set_has_grade();
  void clear_has_grade();
  void set_has_scoregain();
  void clear_has_scoregain();
  void set_has_score();
  void clear_has_score();
  void set_has_z();
  void clear_has_z();
  void set_has_points();
  void clear_has_points();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr grade_;
  ::google::protobuf::uint64 id_;
  bool ready_;
  bool dead_;
  bool robot_;
  ::google::protobuf::uint32 roleid_;
  ::google::protobuf::int32 position_;
  ::google::protobuf::uint32 scoregain_;
  ::google::protobuf::uint64 score_;
  ::google::protobuf::int32 z_;
  ::google::protobuf::int32 points_;
  friend struct  protobuf_game_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MapItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.MapItem) */ {
 public:
  MapItem();
  virtual ~MapItem();

  MapItem(const MapItem& from);

  inline MapItem& operator=(const MapItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MapItem& default_instance();

  static inline const MapItem* internal_default_instance() {
    return reinterpret_cast<const MapItem*>(
               &_MapItem_default_instance_);
  }

  void Swap(MapItem* other);

  // implements Message ----------------------------------------------

  inline MapItem* New() const PROTOBUF_FINAL { return New(NULL); }

  MapItem* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MapItem& from);
  void MergeFrom(const MapItem& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MapItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 z = 1;
  bool has_z() const;
  void clear_z();
  static const int kZFieldNumber = 1;
  ::google::protobuf::int32 z() const;
  void set_z(::google::protobuf::int32 value);

  // required int32 x = 2;
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 2;
  ::google::protobuf::int32 x() const;
  void set_x(::google::protobuf::int32 value);

  // required int32 itemId = 3;
  bool has_itemid() const;
  void clear_itemid();
  static const int kItemIdFieldNumber = 3;
  ::google::protobuf::int32 itemid() const;
  void set_itemid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.MapItem)
 private:
  void set_has_z();
  void clear_has_z();
  void set_has_x();
  void clear_has_x();
  void set_has_itemid();
  void clear_has_itemid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 z_;
  ::google::protobuf::int32 x_;
  ::google::protobuf::int32 itemid_;
  friend struct  protobuf_game_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CombatMatchNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CombatMatchNotify) */ {
 public:
  CombatMatchNotify();
  virtual ~CombatMatchNotify();

  CombatMatchNotify(const CombatMatchNotify& from);

  inline CombatMatchNotify& operator=(const CombatMatchNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CombatMatchNotify& default_instance();

  static inline const CombatMatchNotify* internal_default_instance() {
    return reinterpret_cast<const CombatMatchNotify*>(
               &_CombatMatchNotify_default_instance_);
  }

  void Swap(CombatMatchNotify* other);

  // implements Message ----------------------------------------------

  inline CombatMatchNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  CombatMatchNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CombatMatchNotify& from);
  void MergeFrom(const CombatMatchNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CombatMatchNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.CombatMember members = 2;
  int members_size() const;
  void clear_members();
  static const int kMembersFieldNumber = 2;
  const ::proto::CombatMember& members(int index) const;
  ::proto::CombatMember* mutable_members(int index);
  ::proto::CombatMember* add_members();
  ::google::protobuf::RepeatedPtrField< ::proto::CombatMember >*
      mutable_members();
  const ::google::protobuf::RepeatedPtrField< ::proto::CombatMember >&
      members() const;

  // repeated uint32 maps = 3;
  int maps_size() const;
  void clear_maps();
  static const int kMapsFieldNumber = 3;
  ::google::protobuf::uint32 maps(int index) const;
  void set_maps(int index, ::google::protobuf::uint32 value);
  void add_maps(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      maps() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_maps();

  // repeated .proto.MapItem items = 4;
  int items_size() const;
  void clear_items();
  static const int kItemsFieldNumber = 4;
  const ::proto::MapItem& items(int index) const;
  ::proto::MapItem* mutable_items(int index);
  ::proto::MapItem* add_items();
  ::google::protobuf::RepeatedPtrField< ::proto::MapItem >*
      mutable_items();
  const ::google::protobuf::RepeatedPtrField< ::proto::MapItem >&
      items() const;

  // required uint32 combatId = 1;
  bool has_combatid() const;
  void clear_combatid();
  static const int kCombatIdFieldNumber = 1;
  ::google::protobuf::uint32 combatid() const;
  void set_combatid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.CombatMatchNotify)
 private:
  void set_has_combatid();
  void clear_has_combatid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::CombatMember > members_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > maps_;
  ::google::protobuf::RepeatedPtrField< ::proto::MapItem > items_;
  ::google::protobuf::uint32 combatid_;
  friend struct  protobuf_game_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CombatReadyReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CombatReadyReq) */ {
 public:
  CombatReadyReq();
  virtual ~CombatReadyReq();

  CombatReadyReq(const CombatReadyReq& from);

  inline CombatReadyReq& operator=(const CombatReadyReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CombatReadyReq& default_instance();

  static inline const CombatReadyReq* internal_default_instance() {
    return reinterpret_cast<const CombatReadyReq*>(
               &_CombatReadyReq_default_instance_);
  }

  void Swap(CombatReadyReq* other);

  // implements Message ----------------------------------------------

  inline CombatReadyReq* New() const PROTOBUF_FINAL { return New(NULL); }

  CombatReadyReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CombatReadyReq& from);
  void MergeFrom(const CombatReadyReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CombatReadyReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.CombatReadyReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct  protobuf_game_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CombatStartNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CombatStartNotify) */ {
 public:
  CombatStartNotify();
  virtual ~CombatStartNotify();

  CombatStartNotify(const CombatStartNotify& from);

  inline CombatStartNotify& operator=(const CombatStartNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CombatStartNotify& default_instance();

  static inline const CombatStartNotify* internal_default_instance() {
    return reinterpret_cast<const CombatStartNotify*>(
               &_CombatStartNotify_default_instance_);
  }

  void Swap(CombatStartNotify* other);

  // implements Message ----------------------------------------------

  inline CombatStartNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  CombatStartNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CombatStartNotify& from);
  void MergeFrom(const CombatStartNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CombatStartNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 nowTime = 1;
  bool has_nowtime() const;
  void clear_nowtime();
  static const int kNowTimeFieldNumber = 1;
  ::google::protobuf::uint64 nowtime() const;
  void set_nowtime(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.CombatStartNotify)
 private:
  void set_has_nowtime();
  void clear_has_nowtime();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 nowtime_;
  friend struct  protobuf_game_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CombatMemberDeadReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CombatMemberDeadReq) */ {
 public:
  CombatMemberDeadReq();
  virtual ~CombatMemberDeadReq();

  CombatMemberDeadReq(const CombatMemberDeadReq& from);

  inline CombatMemberDeadReq& operator=(const CombatMemberDeadReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CombatMemberDeadReq& default_instance();

  static inline const CombatMemberDeadReq* internal_default_instance() {
    return reinterpret_cast<const CombatMemberDeadReq*>(
               &_CombatMemberDeadReq_default_instance_);
  }

  void Swap(CombatMemberDeadReq* other);

  // implements Message ----------------------------------------------

  inline CombatMemberDeadReq* New() const PROTOBUF_FINAL { return New(NULL); }

  CombatMemberDeadReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CombatMemberDeadReq& from);
  void MergeFrom(const CombatMemberDeadReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CombatMemberDeadReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 deadReason = 1;
  bool has_deadreason() const;
  void clear_deadreason();
  static const int kDeadReasonFieldNumber = 1;
  ::google::protobuf::uint32 deadreason() const;
  void set_deadreason(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.CombatMemberDeadReq)
 private:
  void set_has_deadreason();
  void clear_has_deadreason();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 deadreason_;
  friend struct  protobuf_game_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CombatMemberDeadNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CombatMemberDeadNotify) */ {
 public:
  CombatMemberDeadNotify();
  virtual ~CombatMemberDeadNotify();

  CombatMemberDeadNotify(const CombatMemberDeadNotify& from);

  inline CombatMemberDeadNotify& operator=(const CombatMemberDeadNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CombatMemberDeadNotify& default_instance();

  static inline const CombatMemberDeadNotify* internal_default_instance() {
    return reinterpret_cast<const CombatMemberDeadNotify*>(
               &_CombatMemberDeadNotify_default_instance_);
  }

  void Swap(CombatMemberDeadNotify* other);

  // implements Message ----------------------------------------------

  inline CombatMemberDeadNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  CombatMemberDeadNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CombatMemberDeadNotify& from);
  void MergeFrom(const CombatMemberDeadNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CombatMemberDeadNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // required uint32 deadReason = 2;
  bool has_deadreason() const;
  void clear_deadreason();
  static const int kDeadReasonFieldNumber = 2;
  ::google::protobuf::uint32 deadreason() const;
  void set_deadreason(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.CombatMemberDeadNotify)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_deadreason();
  void clear_has_deadreason();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint32 deadreason_;
  friend struct  protobuf_game_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CombatMemberOfflineNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CombatMemberOfflineNotify) */ {
 public:
  CombatMemberOfflineNotify();
  virtual ~CombatMemberOfflineNotify();

  CombatMemberOfflineNotify(const CombatMemberOfflineNotify& from);

  inline CombatMemberOfflineNotify& operator=(const CombatMemberOfflineNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CombatMemberOfflineNotify& default_instance();

  static inline const CombatMemberOfflineNotify* internal_default_instance() {
    return reinterpret_cast<const CombatMemberOfflineNotify*>(
               &_CombatMemberOfflineNotify_default_instance_);
  }

  void Swap(CombatMemberOfflineNotify* other);

  // implements Message ----------------------------------------------

  inline CombatMemberOfflineNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  CombatMemberOfflineNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CombatMemberOfflineNotify& from);
  void MergeFrom(const CombatMemberOfflineNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CombatMemberOfflineNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.CombatMemberOfflineNotify)
 private:
  void set_has_id();
  void clear_has_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 id_;
  friend struct  protobuf_game_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CombatFinishNotify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CombatFinishNotify) */ {
 public:
  CombatFinishNotify();
  virtual ~CombatFinishNotify();

  CombatFinishNotify(const CombatFinishNotify& from);

  inline CombatFinishNotify& operator=(const CombatFinishNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CombatFinishNotify& default_instance();

  static inline const CombatFinishNotify* internal_default_instance() {
    return reinterpret_cast<const CombatFinishNotify*>(
               &_CombatFinishNotify_default_instance_);
  }

  void Swap(CombatFinishNotify* other);

  // implements Message ----------------------------------------------

  inline CombatFinishNotify* New() const PROTOBUF_FINAL { return New(NULL); }

  CombatFinishNotify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CombatFinishNotify& from);
  void MergeFrom(const CombatFinishNotify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CombatFinishNotify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.CombatMember members = 2;
  int members_size() const;
  void clear_members();
  static const int kMembersFieldNumber = 2;
  const ::proto::CombatMember& members(int index) const;
  ::proto::CombatMember* mutable_members(int index);
  ::proto::CombatMember* add_members();
  ::google::protobuf::RepeatedPtrField< ::proto::CombatMember >*
      mutable_members();
  const ::google::protobuf::RepeatedPtrField< ::proto::CombatMember >&
      members() const;

  // required uint32 combatId = 1;
  bool has_combatid() const;
  void clear_combatid();
  static const int kCombatIdFieldNumber = 1;
  ::google::protobuf::uint32 combatid() const;
  void set_combatid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.CombatFinishNotify)
 private:
  void set_has_combatid();
  void clear_has_combatid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::CombatMember > members_;
  ::google::protobuf::uint32 combatid_;
  friend struct  protobuf_game_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CombatData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CombatData) */ {
 public:
  CombatData();
  virtual ~CombatData();

  CombatData(const CombatData& from);

  inline CombatData& operator=(const CombatData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CombatData& default_instance();

  static inline const CombatData* internal_default_instance() {
    return reinterpret_cast<const CombatData*>(
               &_CombatData_default_instance_);
  }

  void Swap(CombatData* other);

  // implements Message ----------------------------------------------

  inline CombatData* New() const PROTOBUF_FINAL { return New(NULL); }

  CombatData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CombatData& from);
  void MergeFrom(const CombatData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CombatData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 x = 1;
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 1;
  ::google::protobuf::int32 x() const;
  void set_x(::google::protobuf::int32 value);

  // required int32 z = 2;
  bool has_z() const;
  void clear_z();
  static const int kZFieldNumber = 2;
  ::google::protobuf::int32 z() const;
  void set_z(::google::protobuf::int32 value);

  // required int32 direction = 3;
  bool has_direction() const;
  void clear_direction();
  static const int kDirectionFieldNumber = 3;
  ::google::protobuf::int32 direction() const;
  void set_direction(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.CombatData)
 private:
  void set_has_x();
  void clear_has_x();
  void set_has_z();
  void clear_has_z();
  void set_has_direction();
  void clear_has_direction();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 x_;
  ::google::protobuf::int32 z_;
  ::google::protobuf::int32 direction_;
  friend struct  protobuf_game_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CombatDataSync : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CombatDataSync) */ {
 public:
  CombatDataSync();
  virtual ~CombatDataSync();

  CombatDataSync(const CombatDataSync& from);

  inline CombatDataSync& operator=(const CombatDataSync& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CombatDataSync& default_instance();

  static inline const CombatDataSync* internal_default_instance() {
    return reinterpret_cast<const CombatDataSync*>(
               &_CombatDataSync_default_instance_);
  }

  void Swap(CombatDataSync* other);

  // implements Message ----------------------------------------------

  inline CombatDataSync* New() const PROTOBUF_FINAL { return New(NULL); }

  CombatDataSync* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CombatDataSync& from);
  void MergeFrom(const CombatDataSync& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CombatDataSync* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .proto.CombatData data = 2;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 2;
  const ::proto::CombatData& data() const;
  ::proto::CombatData* mutable_data();
  ::proto::CombatData* release_data();
  void set_allocated_data(::proto::CombatData* data);

  // required uint64 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // required uint64 robotId = 3;
  bool has_robotid() const;
  void clear_robotid();
  static const int kRobotIdFieldNumber = 3;
  ::google::protobuf::uint64 robotid() const;
  void set_robotid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.CombatDataSync)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_data();
  void clear_has_data();
  void set_has_robotid();
  void clear_has_robotid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::proto::CombatData* data_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint64 robotid_;
  friend struct  protobuf_game_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CombatMembersSync : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CombatMembersSync) */ {
 public:
  CombatMembersSync();
  virtual ~CombatMembersSync();

  CombatMembersSync(const CombatMembersSync& from);

  inline CombatMembersSync& operator=(const CombatMembersSync& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CombatMembersSync& default_instance();

  static inline const CombatMembersSync* internal_default_instance() {
    return reinterpret_cast<const CombatMembersSync*>(
               &_CombatMembersSync_default_instance_);
  }

  void Swap(CombatMembersSync* other);

  // implements Message ----------------------------------------------

  inline CombatMembersSync* New() const PROTOBUF_FINAL { return New(NULL); }

  CombatMembersSync* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CombatMembersSync& from);
  void MergeFrom(const CombatMembersSync& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CombatMembersSync* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.CombatMember members = 2;
  int members_size() const;
  void clear_members();
  static const int kMembersFieldNumber = 2;
  const ::proto::CombatMember& members(int index) const;
  ::proto::CombatMember* mutable_members(int index);
  ::proto::CombatMember* add_members();
  ::google::protobuf::RepeatedPtrField< ::proto::CombatMember >*
      mutable_members();
  const ::google::protobuf::RepeatedPtrField< ::proto::CombatMember >&
      members() const;

  // required uint32 combatId = 1;
  bool has_combatid() const;
  void clear_combatid();
  static const int kCombatIdFieldNumber = 1;
  ::google::protobuf::uint32 combatid() const;
  void set_combatid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.CombatMembersSync)
 private:
  void set_has_combatid();
  void clear_has_combatid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::CombatMember > members_;
  ::google::protobuf::uint32 combatid_;
  friend struct  protobuf_game_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Position : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.Position) */ {
 public:
  Position();
  virtual ~Position();

  Position(const Position& from);

  inline Position& operator=(const Position& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Position& default_instance();

  static inline const Position* internal_default_instance() {
    return reinterpret_cast<const Position*>(
               &_Position_default_instance_);
  }

  void Swap(Position* other);

  // implements Message ----------------------------------------------

  inline Position* New() const PROTOBUF_FINAL { return New(NULL); }

  Position* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Position& from);
  void MergeFrom(const Position& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Position* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 x = 1;
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 1;
  ::google::protobuf::int32 x() const;
  void set_x(::google::protobuf::int32 value);

  // required int32 z = 2;
  bool has_z() const;
  void clear_z();
  static const int kZFieldNumber = 2;
  ::google::protobuf::int32 z() const;
  void set_z(::google::protobuf::int32 value);

  // required int32 direction = 3;
  bool has_direction() const;
  void clear_direction();
  static const int kDirectionFieldNumber = 3;
  ::google::protobuf::int32 direction() const;
  void set_direction(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.Position)
 private:
  void set_has_x();
  void clear_has_x();
  void set_has_z();
  void clear_has_z();
  void set_has_direction();
  void clear_has_direction();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 x_;
  ::google::protobuf::int32 z_;
  ::google::protobuf::int32 direction_;
  friend struct  protobuf_game_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PositionPair : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.PositionPair) */ {
 public:
  PositionPair();
  virtual ~PositionPair();

  PositionPair(const PositionPair& from);

  inline PositionPair& operator=(const PositionPair& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PositionPair& default_instance();

  static inline const PositionPair* internal_default_instance() {
    return reinterpret_cast<const PositionPair*>(
               &_PositionPair_default_instance_);
  }

  void Swap(PositionPair* other);

  // implements Message ----------------------------------------------

  inline PositionPair* New() const PROTOBUF_FINAL { return New(NULL); }

  PositionPair* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PositionPair& from);
  void MergeFrom(const PositionPair& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PositionPair* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .proto.Position from = 1;
  bool has_from() const;
  void clear_from();
  static const int kFromFieldNumber = 1;
  const ::proto::Position& from() const;
  ::proto::Position* mutable_from();
  ::proto::Position* release_from();
  void set_allocated_from(::proto::Position* from);

  // required .proto.Position to = 2;
  bool has_to() const;
  void clear_to();
  static const int kToFieldNumber = 2;
  const ::proto::Position& to() const;
  ::proto::Position* mutable_to();
  ::proto::Position* release_to();
  void set_allocated_to(::proto::Position* to);

  // @@protoc_insertion_point(class_scope:proto.PositionPair)
 private:
  void set_has_from();
  void clear_has_from();
  void set_has_to();
  void clear_has_to();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::proto::Position* from_;
  ::proto::Position* to_;
  friend struct  protobuf_game_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CombatPullSync : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CombatPullSync) */ {
 public:
  CombatPullSync();
  virtual ~CombatPullSync();

  CombatPullSync(const CombatPullSync& from);

  inline CombatPullSync& operator=(const CombatPullSync& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CombatPullSync& default_instance();

  static inline const CombatPullSync* internal_default_instance() {
    return reinterpret_cast<const CombatPullSync*>(
               &_CombatPullSync_default_instance_);
  }

  void Swap(CombatPullSync* other);

  // implements Message ----------------------------------------------

  inline CombatPullSync* New() const PROTOBUF_FINAL { return New(NULL); }

  CombatPullSync* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CombatPullSync& from);
  void MergeFrom(const CombatPullSync& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CombatPullSync* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .proto.PositionPair source = 3;
  bool has_source() const;
  void clear_source();
  static const int kSourceFieldNumber = 3;
  const ::proto::PositionPair& source() const;
  ::proto::PositionPair* mutable_source();
  ::proto::PositionPair* release_source();
  void set_allocated_source(::proto::PositionPair* source);

  // required .proto.PositionPair target = 4;
  bool has_target() const;
  void clear_target();
  static const int kTargetFieldNumber = 4;
  const ::proto::PositionPair& target() const;
  ::proto::PositionPair* mutable_target();
  ::proto::PositionPair* release_target();
  void set_allocated_target(::proto::PositionPair* target);

  // required uint64 sourceId = 1;
  bool has_sourceid() const;
  void clear_sourceid();
  static const int kSourceIdFieldNumber = 1;
  ::google::protobuf::uint64 sourceid() const;
  void set_sourceid(::google::protobuf::uint64 value);

  // required uint64 targetId = 2;
  bool has_targetid() const;
  void clear_targetid();
  static const int kTargetIdFieldNumber = 2;
  ::google::protobuf::uint64 targetid() const;
  void set_targetid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.CombatPullSync)
 private:
  void set_has_sourceid();
  void clear_has_sourceid();
  void set_has_targetid();
  void clear_has_targetid();
  void set_has_source();
  void clear_has_source();
  void set_has_target();
  void clear_has_target();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::proto::PositionPair* source_;
  ::proto::PositionPair* target_;
  ::google::protobuf::uint64 sourceid_;
  ::google::protobuf::uint64 targetid_;
  friend struct  protobuf_game_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CombatMemberLeave : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CombatMemberLeave) */ {
 public:
  CombatMemberLeave();
  virtual ~CombatMemberLeave();

  CombatMemberLeave(const CombatMemberLeave& from);

  inline CombatMemberLeave& operator=(const CombatMemberLeave& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CombatMemberLeave& default_instance();

  static inline const CombatMemberLeave* internal_default_instance() {
    return reinterpret_cast<const CombatMemberLeave*>(
               &_CombatMemberLeave_default_instance_);
  }

  void Swap(CombatMemberLeave* other);

  // implements Message ----------------------------------------------

  inline CombatMemberLeave* New() const PROTOBUF_FINAL { return New(NULL); }

  CombatMemberLeave* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CombatMemberLeave& from);
  void MergeFrom(const CombatMemberLeave& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CombatMemberLeave* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.CombatMemberLeave)
 private:
  void set_has_id();
  void clear_has_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 id_;
  friend struct  protobuf_game_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CombatPickUpItemReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CombatPickUpItemReq) */ {
 public:
  CombatPickUpItemReq();
  virtual ~CombatPickUpItemReq();

  CombatPickUpItemReq(const CombatPickUpItemReq& from);

  inline CombatPickUpItemReq& operator=(const CombatPickUpItemReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CombatPickUpItemReq& default_instance();

  static inline const CombatPickUpItemReq* internal_default_instance() {
    return reinterpret_cast<const CombatPickUpItemReq*>(
               &_CombatPickUpItemReq_default_instance_);
  }

  void Swap(CombatPickUpItemReq* other);

  // implements Message ----------------------------------------------

  inline CombatPickUpItemReq* New() const PROTOBUF_FINAL { return New(NULL); }

  CombatPickUpItemReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CombatPickUpItemReq& from);
  void MergeFrom(const CombatPickUpItemReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CombatPickUpItemReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // required int32 x = 2;
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 2;
  ::google::protobuf::int32 x() const;
  void set_x(::google::protobuf::int32 value);

  // required int32 z = 3;
  bool has_z() const;
  void clear_z();
  static const int kZFieldNumber = 3;
  ::google::protobuf::int32 z() const;
  void set_z(::google::protobuf::int32 value);

  // required uint64 robotId = 4;
  bool has_robotid() const;
  void clear_robotid();
  static const int kRobotIdFieldNumber = 4;
  ::google::protobuf::uint64 robotid() const;
  void set_robotid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.CombatPickUpItemReq)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_x();
  void clear_has_x();
  void set_has_z();
  void clear_has_z();
  void set_has_robotid();
  void clear_has_robotid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::int32 x_;
  ::google::protobuf::int32 z_;
  ::google::protobuf::uint64 robotid_;
  friend struct  protobuf_game_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CombatPickUpItemRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CombatPickUpItemRes) */ {
 public:
  CombatPickUpItemRes();
  virtual ~CombatPickUpItemRes();

  CombatPickUpItemRes(const CombatPickUpItemRes& from);

  inline CombatPickUpItemRes& operator=(const CombatPickUpItemRes& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CombatPickUpItemRes& default_instance();

  static inline const CombatPickUpItemRes* internal_default_instance() {
    return reinterpret_cast<const CombatPickUpItemRes*>(
               &_CombatPickUpItemRes_default_instance_);
  }

  void Swap(CombatPickUpItemRes* other);

  // implements Message ----------------------------------------------

  inline CombatPickUpItemRes* New() const PROTOBUF_FINAL { return New(NULL); }

  CombatPickUpItemRes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CombatPickUpItemRes& from);
  void MergeFrom(const CombatPickUpItemRes& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CombatPickUpItemRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // required int32 x = 2;
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 2;
  ::google::protobuf::int32 x() const;
  void set_x(::google::protobuf::int32 value);

  // required int32 z = 3;
  bool has_z() const;
  void clear_z();
  static const int kZFieldNumber = 3;
  ::google::protobuf::int32 z() const;
  void set_z(::google::protobuf::int32 value);

  // required uint64 robotId = 4;
  bool has_robotid() const;
  void clear_robotid();
  static const int kRobotIdFieldNumber = 4;
  ::google::protobuf::uint64 robotid() const;
  void set_robotid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.CombatPickUpItemRes)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_x();
  void clear_has_x();
  void set_has_z();
  void clear_has_z();
  void set_has_robotid();
  void clear_has_robotid();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::int32 x_;
  ::google::protobuf::int32 z_;
  ::google::protobuf::uint64 robotid_;
  friend struct  protobuf_game_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CombatSetPositionRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.CombatSetPositionRes) */ {
 public:
  CombatSetPositionRes();
  virtual ~CombatSetPositionRes();

  CombatSetPositionRes(const CombatSetPositionRes& from);

  inline CombatSetPositionRes& operator=(const CombatSetPositionRes& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CombatSetPositionRes& default_instance();

  static inline const CombatSetPositionRes* internal_default_instance() {
    return reinterpret_cast<const CombatSetPositionRes*>(
               &_CombatSetPositionRes_default_instance_);
  }

  void Swap(CombatSetPositionRes* other);

  // implements Message ----------------------------------------------

  inline CombatSetPositionRes* New() const PROTOBUF_FINAL { return New(NULL); }

  CombatSetPositionRes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CombatSetPositionRes& from);
  void MergeFrom(const CombatSetPositionRes& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CombatSetPositionRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // required int32 x = 2;
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 2;
  ::google::protobuf::int32 x() const;
  void set_x(::google::protobuf::int32 value);

  // required int32 z = 3;
  bool has_z() const;
  void clear_z();
  static const int kZFieldNumber = 3;
  ::google::protobuf::int32 z() const;
  void set_z(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.CombatSetPositionRes)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_x();
  void clear_has_x();
  void set_has_z();
  void clear_has_z();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::int32 x_;
  ::google::protobuf::int32 z_;
  friend struct  protobuf_game_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// HeartBeat

// -------------------------------------------------------------------

// ResStatus

// optional uint32 kind = 1;
inline bool ResStatus::has_kind() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResStatus::set_has_kind() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResStatus::clear_has_kind() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResStatus::clear_kind() {
  kind_ = 0u;
  clear_has_kind();
}
inline ::google::protobuf::uint32 ResStatus::kind() const {
  // @@protoc_insertion_point(field_get:proto.ResStatus.kind)
  return kind_;
}
inline void ResStatus::set_kind(::google::protobuf::uint32 value) {
  set_has_kind();
  kind_ = value;
  // @@protoc_insertion_point(field_set:proto.ResStatus.kind)
}

// optional uint32 modelId = 2;
inline bool ResStatus::has_modelid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ResStatus::set_has_modelid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ResStatus::clear_has_modelid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ResStatus::clear_modelid() {
  modelid_ = 0u;
  clear_has_modelid();
}
inline ::google::protobuf::uint32 ResStatus::modelid() const {
  // @@protoc_insertion_point(field_get:proto.ResStatus.modelId)
  return modelid_;
}
inline void ResStatus::set_modelid(::google::protobuf::uint32 value) {
  set_has_modelid();
  modelid_ = value;
  // @@protoc_insertion_point(field_set:proto.ResStatus.modelId)
}

// optional uint32 count = 3;
inline bool ResStatus::has_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ResStatus::set_has_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ResStatus::clear_has_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ResStatus::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 ResStatus::count() const {
  // @@protoc_insertion_point(field_get:proto.ResStatus.count)
  return count_;
}
inline void ResStatus::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:proto.ResStatus.count)
}

// -------------------------------------------------------------------

// ProtocolStatusRes

// optional uint32 cmd = 1;
inline bool ProtocolStatusRes::has_cmd() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtocolStatusRes::set_has_cmd() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtocolStatusRes::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProtocolStatusRes::clear_cmd() {
  cmd_ = 0u;
  clear_has_cmd();
}
inline ::google::protobuf::uint32 ProtocolStatusRes::cmd() const {
  // @@protoc_insertion_point(field_get:proto.ProtocolStatusRes.cmd)
  return cmd_;
}
inline void ProtocolStatusRes::set_cmd(::google::protobuf::uint32 value) {
  set_has_cmd();
  cmd_ = value;
  // @@protoc_insertion_point(field_set:proto.ProtocolStatusRes.cmd)
}

// optional uint32 errCode = 2;
inline bool ProtocolStatusRes::has_errcode() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProtocolStatusRes::set_has_errcode() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProtocolStatusRes::clear_has_errcode() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProtocolStatusRes::clear_errcode() {
  errcode_ = 0u;
  clear_has_errcode();
}
inline ::google::protobuf::uint32 ProtocolStatusRes::errcode() const {
  // @@protoc_insertion_point(field_get:proto.ProtocolStatusRes.errCode)
  return errcode_;
}
inline void ProtocolStatusRes::set_errcode(::google::protobuf::uint32 value) {
  set_has_errcode();
  errcode_ = value;
  // @@protoc_insertion_point(field_set:proto.ProtocolStatusRes.errCode)
}

// optional .proto.ResStatus res = 3;
inline bool ProtocolStatusRes::has_res() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtocolStatusRes::set_has_res() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtocolStatusRes::clear_has_res() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProtocolStatusRes::clear_res() {
  if (res_ != NULL) res_->::proto::ResStatus::Clear();
  clear_has_res();
}
inline const ::proto::ResStatus& ProtocolStatusRes::res() const {
  // @@protoc_insertion_point(field_get:proto.ProtocolStatusRes.res)
  return res_ != NULL ? *res_
                         : *::proto::ResStatus::internal_default_instance();
}
inline ::proto::ResStatus* ProtocolStatusRes::mutable_res() {
  set_has_res();
  if (res_ == NULL) {
    res_ = new ::proto::ResStatus;
  }
  // @@protoc_insertion_point(field_mutable:proto.ProtocolStatusRes.res)
  return res_;
}
inline ::proto::ResStatus* ProtocolStatusRes::release_res() {
  // @@protoc_insertion_point(field_release:proto.ProtocolStatusRes.res)
  clear_has_res();
  ::proto::ResStatus* temp = res_;
  res_ = NULL;
  return temp;
}
inline void ProtocolStatusRes::set_allocated_res(::proto::ResStatus* res) {
  delete res_;
  res_ = res;
  if (res) {
    set_has_res();
  } else {
    clear_has_res();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.ProtocolStatusRes.res)
}

// -------------------------------------------------------------------

// LoginReq

// required string token = 1;
inline bool LoginReq::has_token() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginReq::set_has_token() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginReq::clear_has_token() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_token();
}
inline const ::std::string& LoginReq::token() const {
  // @@protoc_insertion_point(field_get:proto.LoginReq.token)
  return token_.GetNoArena();
}
inline void LoginReq::set_token(const ::std::string& value) {
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.LoginReq.token)
}
#if LANG_CXX11
inline void LoginReq::set_token(::std::string&& value) {
  set_has_token();
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.LoginReq.token)
}
#endif
inline void LoginReq::set_token(const char* value) {
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.LoginReq.token)
}
inline void LoginReq::set_token(const char* value, size_t size) {
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.LoginReq.token)
}
inline ::std::string* LoginReq::mutable_token() {
  set_has_token();
  // @@protoc_insertion_point(field_mutable:proto.LoginReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginReq::release_token() {
  // @@protoc_insertion_point(field_release:proto.LoginReq.token)
  clear_has_token();
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    set_has_token();
  } else {
    clear_has_token();
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:proto.LoginReq.token)
}

// required string account = 2;
inline bool LoginReq::has_account() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LoginReq::set_has_account() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LoginReq::clear_has_account() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LoginReq::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account();
}
inline const ::std::string& LoginReq::account() const {
  // @@protoc_insertion_point(field_get:proto.LoginReq.account)
  return account_.GetNoArena();
}
inline void LoginReq::set_account(const ::std::string& value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.LoginReq.account)
}
#if LANG_CXX11
inline void LoginReq::set_account(::std::string&& value) {
  set_has_account();
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.LoginReq.account)
}
#endif
inline void LoginReq::set_account(const char* value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.LoginReq.account)
}
inline void LoginReq::set_account(const char* value, size_t size) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.LoginReq.account)
}
inline ::std::string* LoginReq::mutable_account() {
  set_has_account();
  // @@protoc_insertion_point(field_mutable:proto.LoginReq.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginReq::release_account() {
  // @@protoc_insertion_point(field_release:proto.LoginReq.account)
  clear_has_account();
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginReq::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    set_has_account();
  } else {
    clear_has_account();
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:proto.LoginReq.account)
}

// required uint32 district = 3;
inline bool LoginReq::has_district() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LoginReq::set_has_district() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LoginReq::clear_has_district() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LoginReq::clear_district() {
  district_ = 0u;
  clear_has_district();
}
inline ::google::protobuf::uint32 LoginReq::district() const {
  // @@protoc_insertion_point(field_get:proto.LoginReq.district)
  return district_;
}
inline void LoginReq::set_district(::google::protobuf::uint32 value) {
  set_has_district();
  district_ = value;
  // @@protoc_insertion_point(field_set:proto.LoginReq.district)
}

// required uint32 version = 4;
inline bool LoginReq::has_version() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LoginReq::set_has_version() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LoginReq::clear_has_version() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LoginReq::clear_version() {
  version_ = 0u;
  clear_has_version();
}
inline ::google::protobuf::uint32 LoginReq::version() const {
  // @@protoc_insertion_point(field_get:proto.LoginReq.version)
  return version_;
}
inline void LoginReq::set_version(::google::protobuf::uint32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:proto.LoginReq.version)
}

// optional uint32 time = 6;
inline bool LoginReq::has_time() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void LoginReq::set_has_time() {
  _has_bits_[0] |= 0x00000040u;
}
inline void LoginReq::clear_has_time() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void LoginReq::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 LoginReq::time() const {
  // @@protoc_insertion_point(field_get:proto.LoginReq.time)
  return time_;
}
inline void LoginReq::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:proto.LoginReq.time)
}

// optional string ip = 10;
inline bool LoginReq::has_ip() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LoginReq::set_has_ip() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LoginReq::clear_has_ip() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LoginReq::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ip();
}
inline const ::std::string& LoginReq::ip() const {
  // @@protoc_insertion_point(field_get:proto.LoginReq.ip)
  return ip_.GetNoArena();
}
inline void LoginReq::set_ip(const ::std::string& value) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.LoginReq.ip)
}
#if LANG_CXX11
inline void LoginReq::set_ip(::std::string&& value) {
  set_has_ip();
  ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.LoginReq.ip)
}
#endif
inline void LoginReq::set_ip(const char* value) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.LoginReq.ip)
}
inline void LoginReq::set_ip(const char* value, size_t size) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.LoginReq.ip)
}
inline ::std::string* LoginReq::mutable_ip() {
  set_has_ip();
  // @@protoc_insertion_point(field_mutable:proto.LoginReq.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginReq::release_ip() {
  // @@protoc_insertion_point(field_release:proto.LoginReq.ip)
  clear_has_ip();
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginReq::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    set_has_ip();
  } else {
    clear_has_ip();
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:proto.LoginReq.ip)
}

// optional bytes extra = 21;
inline bool LoginReq::has_extra() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LoginReq::set_has_extra() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LoginReq::clear_has_extra() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LoginReq::clear_extra() {
  extra_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_extra();
}
inline const ::std::string& LoginReq::extra() const {
  // @@protoc_insertion_point(field_get:proto.LoginReq.extra)
  return extra_.GetNoArena();
}
inline void LoginReq::set_extra(const ::std::string& value) {
  set_has_extra();
  extra_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.LoginReq.extra)
}
#if LANG_CXX11
inline void LoginReq::set_extra(::std::string&& value) {
  set_has_extra();
  extra_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.LoginReq.extra)
}
#endif
inline void LoginReq::set_extra(const char* value) {
  set_has_extra();
  extra_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.LoginReq.extra)
}
inline void LoginReq::set_extra(const void* value, size_t size) {
  set_has_extra();
  extra_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.LoginReq.extra)
}
inline ::std::string* LoginReq::mutable_extra() {
  set_has_extra();
  // @@protoc_insertion_point(field_mutable:proto.LoginReq.extra)
  return extra_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginReq::release_extra() {
  // @@protoc_insertion_point(field_release:proto.LoginReq.extra)
  clear_has_extra();
  return extra_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginReq::set_allocated_extra(::std::string* extra) {
  if (extra != NULL) {
    set_has_extra();
  } else {
    clear_has_extra();
  }
  extra_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), extra);
  // @@protoc_insertion_point(field_set_allocated:proto.LoginReq.extra)
}

// -------------------------------------------------------------------

// LoginRes

// required uint64 id = 1;
inline bool LoginRes::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LoginRes::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LoginRes::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LoginRes::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 LoginRes::id() const {
  // @@protoc_insertion_point(field_get:proto.LoginRes.id)
  return id_;
}
inline void LoginRes::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:proto.LoginRes.id)
}

// required string name = 2;
inline bool LoginRes::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginRes::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginRes::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginRes::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& LoginRes::name() const {
  // @@protoc_insertion_point(field_get:proto.LoginRes.name)
  return name_.GetNoArena();
}
inline void LoginRes::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.LoginRes.name)
}
#if LANG_CXX11
inline void LoginRes::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.LoginRes.name)
}
#endif
inline void LoginRes::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.LoginRes.name)
}
inline void LoginRes::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.LoginRes.name)
}
inline ::std::string* LoginRes::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:proto.LoginRes.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginRes::release_name() {
  // @@protoc_insertion_point(field_release:proto.LoginRes.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRes::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:proto.LoginRes.name)
}

// required uint64 score = 3;
inline bool LoginRes::has_score() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LoginRes::set_has_score() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LoginRes::clear_has_score() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LoginRes::clear_score() {
  score_ = GOOGLE_ULONGLONG(0);
  clear_has_score();
}
inline ::google::protobuf::uint64 LoginRes::score() const {
  // @@protoc_insertion_point(field_get:proto.LoginRes.score)
  return score_;
}
inline void LoginRes::set_score(::google::protobuf::uint64 value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:proto.LoginRes.score)
}

// -------------------------------------------------------------------

// CombatMatchReq

// required uint32 roleId = 1;
inline bool CombatMatchReq::has_roleid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CombatMatchReq::set_has_roleid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CombatMatchReq::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CombatMatchReq::clear_roleid() {
  roleid_ = 0u;
  clear_has_roleid();
}
inline ::google::protobuf::uint32 CombatMatchReq::roleid() const {
  // @@protoc_insertion_point(field_get:proto.CombatMatchReq.roleId)
  return roleid_;
}
inline void CombatMatchReq::set_roleid(::google::protobuf::uint32 value) {
  set_has_roleid();
  roleid_ = value;
  // @@protoc_insertion_point(field_set:proto.CombatMatchReq.roleId)
}

// required string name = 2;
inline bool CombatMatchReq::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CombatMatchReq::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CombatMatchReq::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CombatMatchReq::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& CombatMatchReq::name() const {
  // @@protoc_insertion_point(field_get:proto.CombatMatchReq.name)
  return name_.GetNoArena();
}
inline void CombatMatchReq::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.CombatMatchReq.name)
}
#if LANG_CXX11
inline void CombatMatchReq::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.CombatMatchReq.name)
}
#endif
inline void CombatMatchReq::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.CombatMatchReq.name)
}
inline void CombatMatchReq::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.CombatMatchReq.name)
}
inline ::std::string* CombatMatchReq::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:proto.CombatMatchReq.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CombatMatchReq::release_name() {
  // @@protoc_insertion_point(field_release:proto.CombatMatchReq.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CombatMatchReq::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:proto.CombatMatchReq.name)
}

// -------------------------------------------------------------------

// CombatMember

// required uint64 id = 1;
inline bool CombatMember::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CombatMember::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CombatMember::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CombatMember::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 CombatMember::id() const {
  // @@protoc_insertion_point(field_get:proto.CombatMember.id)
  return id_;
}
inline void CombatMember::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:proto.CombatMember.id)
}

// required string name = 2;
inline bool CombatMember::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CombatMember::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CombatMember::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CombatMember::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& CombatMember::name() const {
  // @@protoc_insertion_point(field_get:proto.CombatMember.name)
  return name_.GetNoArena();
}
inline void CombatMember::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.CombatMember.name)
}
#if LANG_CXX11
inline void CombatMember::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.CombatMember.name)
}
#endif
inline void CombatMember::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.CombatMember.name)
}
inline void CombatMember::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.CombatMember.name)
}
inline ::std::string* CombatMember::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:proto.CombatMember.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CombatMember::release_name() {
  // @@protoc_insertion_point(field_release:proto.CombatMember.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CombatMember::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:proto.CombatMember.name)
}

// required bool ready = 3;
inline bool CombatMember::has_ready() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CombatMember::set_has_ready() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CombatMember::clear_has_ready() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CombatMember::clear_ready() {
  ready_ = false;
  clear_has_ready();
}
inline bool CombatMember::ready() const {
  // @@protoc_insertion_point(field_get:proto.CombatMember.ready)
  return ready_;
}
inline void CombatMember::set_ready(bool value) {
  set_has_ready();
  ready_ = value;
  // @@protoc_insertion_point(field_set:proto.CombatMember.ready)
}

// required bool dead = 4;
inline bool CombatMember::has_dead() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CombatMember::set_has_dead() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CombatMember::clear_has_dead() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CombatMember::clear_dead() {
  dead_ = false;
  clear_has_dead();
}
inline bool CombatMember::dead() const {
  // @@protoc_insertion_point(field_get:proto.CombatMember.dead)
  return dead_;
}
inline void CombatMember::set_dead(bool value) {
  set_has_dead();
  dead_ = value;
  // @@protoc_insertion_point(field_set:proto.CombatMember.dead)
}

// required uint32 roleId = 5;
inline bool CombatMember::has_roleid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CombatMember::set_has_roleid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CombatMember::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CombatMember::clear_roleid() {
  roleid_ = 0u;
  clear_has_roleid();
}
inline ::google::protobuf::uint32 CombatMember::roleid() const {
  // @@protoc_insertion_point(field_get:proto.CombatMember.roleId)
  return roleid_;
}
inline void CombatMember::set_roleid(::google::protobuf::uint32 value) {
  set_has_roleid();
  roleid_ = value;
  // @@protoc_insertion_point(field_set:proto.CombatMember.roleId)
}

// required int32 position = 6;
inline bool CombatMember::has_position() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CombatMember::set_has_position() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CombatMember::clear_has_position() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CombatMember::clear_position() {
  position_ = 0;
  clear_has_position();
}
inline ::google::protobuf::int32 CombatMember::position() const {
  // @@protoc_insertion_point(field_get:proto.CombatMember.position)
  return position_;
}
inline void CombatMember::set_position(::google::protobuf::int32 value) {
  set_has_position();
  position_ = value;
  // @@protoc_insertion_point(field_set:proto.CombatMember.position)
}

// required bool robot = 7;
inline bool CombatMember::has_robot() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CombatMember::set_has_robot() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CombatMember::clear_has_robot() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CombatMember::clear_robot() {
  robot_ = false;
  clear_has_robot();
}
inline bool CombatMember::robot() const {
  // @@protoc_insertion_point(field_get:proto.CombatMember.robot)
  return robot_;
}
inline void CombatMember::set_robot(bool value) {
  set_has_robot();
  robot_ = value;
  // @@protoc_insertion_point(field_set:proto.CombatMember.robot)
}

// required string grade = 8;
inline bool CombatMember::has_grade() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CombatMember::set_has_grade() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CombatMember::clear_has_grade() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CombatMember::clear_grade() {
  grade_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_grade();
}
inline const ::std::string& CombatMember::grade() const {
  // @@protoc_insertion_point(field_get:proto.CombatMember.grade)
  return grade_.GetNoArena();
}
inline void CombatMember::set_grade(const ::std::string& value) {
  set_has_grade();
  grade_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.CombatMember.grade)
}
#if LANG_CXX11
inline void CombatMember::set_grade(::std::string&& value) {
  set_has_grade();
  grade_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.CombatMember.grade)
}
#endif
inline void CombatMember::set_grade(const char* value) {
  set_has_grade();
  grade_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.CombatMember.grade)
}
inline void CombatMember::set_grade(const char* value, size_t size) {
  set_has_grade();
  grade_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.CombatMember.grade)
}
inline ::std::string* CombatMember::mutable_grade() {
  set_has_grade();
  // @@protoc_insertion_point(field_mutable:proto.CombatMember.grade)
  return grade_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CombatMember::release_grade() {
  // @@protoc_insertion_point(field_release:proto.CombatMember.grade)
  clear_has_grade();
  return grade_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CombatMember::set_allocated_grade(::std::string* grade) {
  if (grade != NULL) {
    set_has_grade();
  } else {
    clear_has_grade();
  }
  grade_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), grade);
  // @@protoc_insertion_point(field_set_allocated:proto.CombatMember.grade)
}

// required uint32 scoreGain = 9;
inline bool CombatMember::has_scoregain() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CombatMember::set_has_scoregain() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CombatMember::clear_has_scoregain() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CombatMember::clear_scoregain() {
  scoregain_ = 0u;
  clear_has_scoregain();
}
inline ::google::protobuf::uint32 CombatMember::scoregain() const {
  // @@protoc_insertion_point(field_get:proto.CombatMember.scoreGain)
  return scoregain_;
}
inline void CombatMember::set_scoregain(::google::protobuf::uint32 value) {
  set_has_scoregain();
  scoregain_ = value;
  // @@protoc_insertion_point(field_set:proto.CombatMember.scoreGain)
}

// required uint64 score = 10;
inline bool CombatMember::has_score() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CombatMember::set_has_score() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CombatMember::clear_has_score() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CombatMember::clear_score() {
  score_ = GOOGLE_ULONGLONG(0);
  clear_has_score();
}
inline ::google::protobuf::uint64 CombatMember::score() const {
  // @@protoc_insertion_point(field_get:proto.CombatMember.score)
  return score_;
}
inline void CombatMember::set_score(::google::protobuf::uint64 value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:proto.CombatMember.score)
}

// required int32 z = 11;
inline bool CombatMember::has_z() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CombatMember::set_has_z() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CombatMember::clear_has_z() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CombatMember::clear_z() {
  z_ = 0;
  clear_has_z();
}
inline ::google::protobuf::int32 CombatMember::z() const {
  // @@protoc_insertion_point(field_get:proto.CombatMember.z)
  return z_;
}
inline void CombatMember::set_z(::google::protobuf::int32 value) {
  set_has_z();
  z_ = value;
  // @@protoc_insertion_point(field_set:proto.CombatMember.z)
}

// required int32 points = 12;
inline bool CombatMember::has_points() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CombatMember::set_has_points() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CombatMember::clear_has_points() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CombatMember::clear_points() {
  points_ = 0;
  clear_has_points();
}
inline ::google::protobuf::int32 CombatMember::points() const {
  // @@protoc_insertion_point(field_get:proto.CombatMember.points)
  return points_;
}
inline void CombatMember::set_points(::google::protobuf::int32 value) {
  set_has_points();
  points_ = value;
  // @@protoc_insertion_point(field_set:proto.CombatMember.points)
}

// -------------------------------------------------------------------

// MapItem

// required int32 z = 1;
inline bool MapItem::has_z() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MapItem::set_has_z() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MapItem::clear_has_z() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MapItem::clear_z() {
  z_ = 0;
  clear_has_z();
}
inline ::google::protobuf::int32 MapItem::z() const {
  // @@protoc_insertion_point(field_get:proto.MapItem.z)
  return z_;
}
inline void MapItem::set_z(::google::protobuf::int32 value) {
  set_has_z();
  z_ = value;
  // @@protoc_insertion_point(field_set:proto.MapItem.z)
}

// required int32 x = 2;
inline bool MapItem::has_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MapItem::set_has_x() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MapItem::clear_has_x() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MapItem::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline ::google::protobuf::int32 MapItem::x() const {
  // @@protoc_insertion_point(field_get:proto.MapItem.x)
  return x_;
}
inline void MapItem::set_x(::google::protobuf::int32 value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:proto.MapItem.x)
}

// required int32 itemId = 3;
inline bool MapItem::has_itemid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MapItem::set_has_itemid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MapItem::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MapItem::clear_itemid() {
  itemid_ = 0;
  clear_has_itemid();
}
inline ::google::protobuf::int32 MapItem::itemid() const {
  // @@protoc_insertion_point(field_get:proto.MapItem.itemId)
  return itemid_;
}
inline void MapItem::set_itemid(::google::protobuf::int32 value) {
  set_has_itemid();
  itemid_ = value;
  // @@protoc_insertion_point(field_set:proto.MapItem.itemId)
}

// -------------------------------------------------------------------

// CombatMatchNotify

// required uint32 combatId = 1;
inline bool CombatMatchNotify::has_combatid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CombatMatchNotify::set_has_combatid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CombatMatchNotify::clear_has_combatid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CombatMatchNotify::clear_combatid() {
  combatid_ = 0u;
  clear_has_combatid();
}
inline ::google::protobuf::uint32 CombatMatchNotify::combatid() const {
  // @@protoc_insertion_point(field_get:proto.CombatMatchNotify.combatId)
  return combatid_;
}
inline void CombatMatchNotify::set_combatid(::google::protobuf::uint32 value) {
  set_has_combatid();
  combatid_ = value;
  // @@protoc_insertion_point(field_set:proto.CombatMatchNotify.combatId)
}

// repeated .proto.CombatMember members = 2;
inline int CombatMatchNotify::members_size() const {
  return members_.size();
}
inline void CombatMatchNotify::clear_members() {
  members_.Clear();
}
inline const ::proto::CombatMember& CombatMatchNotify::members(int index) const {
  // @@protoc_insertion_point(field_get:proto.CombatMatchNotify.members)
  return members_.Get(index);
}
inline ::proto::CombatMember* CombatMatchNotify::mutable_members(int index) {
  // @@protoc_insertion_point(field_mutable:proto.CombatMatchNotify.members)
  return members_.Mutable(index);
}
inline ::proto::CombatMember* CombatMatchNotify::add_members() {
  // @@protoc_insertion_point(field_add:proto.CombatMatchNotify.members)
  return members_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::CombatMember >*
CombatMatchNotify::mutable_members() {
  // @@protoc_insertion_point(field_mutable_list:proto.CombatMatchNotify.members)
  return &members_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::CombatMember >&
CombatMatchNotify::members() const {
  // @@protoc_insertion_point(field_list:proto.CombatMatchNotify.members)
  return members_;
}

// repeated uint32 maps = 3;
inline int CombatMatchNotify::maps_size() const {
  return maps_.size();
}
inline void CombatMatchNotify::clear_maps() {
  maps_.Clear();
}
inline ::google::protobuf::uint32 CombatMatchNotify::maps(int index) const {
  // @@protoc_insertion_point(field_get:proto.CombatMatchNotify.maps)
  return maps_.Get(index);
}
inline void CombatMatchNotify::set_maps(int index, ::google::protobuf::uint32 value) {
  maps_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.CombatMatchNotify.maps)
}
inline void CombatMatchNotify::add_maps(::google::protobuf::uint32 value) {
  maps_.Add(value);
  // @@protoc_insertion_point(field_add:proto.CombatMatchNotify.maps)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CombatMatchNotify::maps() const {
  // @@protoc_insertion_point(field_list:proto.CombatMatchNotify.maps)
  return maps_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CombatMatchNotify::mutable_maps() {
  // @@protoc_insertion_point(field_mutable_list:proto.CombatMatchNotify.maps)
  return &maps_;
}

// repeated .proto.MapItem items = 4;
inline int CombatMatchNotify::items_size() const {
  return items_.size();
}
inline void CombatMatchNotify::clear_items() {
  items_.Clear();
}
inline const ::proto::MapItem& CombatMatchNotify::items(int index) const {
  // @@protoc_insertion_point(field_get:proto.CombatMatchNotify.items)
  return items_.Get(index);
}
inline ::proto::MapItem* CombatMatchNotify::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:proto.CombatMatchNotify.items)
  return items_.Mutable(index);
}
inline ::proto::MapItem* CombatMatchNotify::add_items() {
  // @@protoc_insertion_point(field_add:proto.CombatMatchNotify.items)
  return items_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::MapItem >*
CombatMatchNotify::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:proto.CombatMatchNotify.items)
  return &items_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::MapItem >&
CombatMatchNotify::items() const {
  // @@protoc_insertion_point(field_list:proto.CombatMatchNotify.items)
  return items_;
}

// -------------------------------------------------------------------

// CombatReadyReq

// -------------------------------------------------------------------

// CombatStartNotify

// required uint64 nowTime = 1;
inline bool CombatStartNotify::has_nowtime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CombatStartNotify::set_has_nowtime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CombatStartNotify::clear_has_nowtime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CombatStartNotify::clear_nowtime() {
  nowtime_ = GOOGLE_ULONGLONG(0);
  clear_has_nowtime();
}
inline ::google::protobuf::uint64 CombatStartNotify::nowtime() const {
  // @@protoc_insertion_point(field_get:proto.CombatStartNotify.nowTime)
  return nowtime_;
}
inline void CombatStartNotify::set_nowtime(::google::protobuf::uint64 value) {
  set_has_nowtime();
  nowtime_ = value;
  // @@protoc_insertion_point(field_set:proto.CombatStartNotify.nowTime)
}

// -------------------------------------------------------------------

// CombatMemberDeadReq

// required uint32 deadReason = 1;
inline bool CombatMemberDeadReq::has_deadreason() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CombatMemberDeadReq::set_has_deadreason() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CombatMemberDeadReq::clear_has_deadreason() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CombatMemberDeadReq::clear_deadreason() {
  deadreason_ = 0u;
  clear_has_deadreason();
}
inline ::google::protobuf::uint32 CombatMemberDeadReq::deadreason() const {
  // @@protoc_insertion_point(field_get:proto.CombatMemberDeadReq.deadReason)
  return deadreason_;
}
inline void CombatMemberDeadReq::set_deadreason(::google::protobuf::uint32 value) {
  set_has_deadreason();
  deadreason_ = value;
  // @@protoc_insertion_point(field_set:proto.CombatMemberDeadReq.deadReason)
}

// -------------------------------------------------------------------

// CombatMemberDeadNotify

// required uint64 id = 1;
inline bool CombatMemberDeadNotify::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CombatMemberDeadNotify::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CombatMemberDeadNotify::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CombatMemberDeadNotify::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 CombatMemberDeadNotify::id() const {
  // @@protoc_insertion_point(field_get:proto.CombatMemberDeadNotify.id)
  return id_;
}
inline void CombatMemberDeadNotify::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:proto.CombatMemberDeadNotify.id)
}

// required uint32 deadReason = 2;
inline bool CombatMemberDeadNotify::has_deadreason() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CombatMemberDeadNotify::set_has_deadreason() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CombatMemberDeadNotify::clear_has_deadreason() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CombatMemberDeadNotify::clear_deadreason() {
  deadreason_ = 0u;
  clear_has_deadreason();
}
inline ::google::protobuf::uint32 CombatMemberDeadNotify::deadreason() const {
  // @@protoc_insertion_point(field_get:proto.CombatMemberDeadNotify.deadReason)
  return deadreason_;
}
inline void CombatMemberDeadNotify::set_deadreason(::google::protobuf::uint32 value) {
  set_has_deadreason();
  deadreason_ = value;
  // @@protoc_insertion_point(field_set:proto.CombatMemberDeadNotify.deadReason)
}

// -------------------------------------------------------------------

// CombatMemberOfflineNotify

// required uint64 id = 1;
inline bool CombatMemberOfflineNotify::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CombatMemberOfflineNotify::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CombatMemberOfflineNotify::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CombatMemberOfflineNotify::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 CombatMemberOfflineNotify::id() const {
  // @@protoc_insertion_point(field_get:proto.CombatMemberOfflineNotify.id)
  return id_;
}
inline void CombatMemberOfflineNotify::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:proto.CombatMemberOfflineNotify.id)
}

// -------------------------------------------------------------------

// CombatFinishNotify

// required uint32 combatId = 1;
inline bool CombatFinishNotify::has_combatid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CombatFinishNotify::set_has_combatid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CombatFinishNotify::clear_has_combatid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CombatFinishNotify::clear_combatid() {
  combatid_ = 0u;
  clear_has_combatid();
}
inline ::google::protobuf::uint32 CombatFinishNotify::combatid() const {
  // @@protoc_insertion_point(field_get:proto.CombatFinishNotify.combatId)
  return combatid_;
}
inline void CombatFinishNotify::set_combatid(::google::protobuf::uint32 value) {
  set_has_combatid();
  combatid_ = value;
  // @@protoc_insertion_point(field_set:proto.CombatFinishNotify.combatId)
}

// repeated .proto.CombatMember members = 2;
inline int CombatFinishNotify::members_size() const {
  return members_.size();
}
inline void CombatFinishNotify::clear_members() {
  members_.Clear();
}
inline const ::proto::CombatMember& CombatFinishNotify::members(int index) const {
  // @@protoc_insertion_point(field_get:proto.CombatFinishNotify.members)
  return members_.Get(index);
}
inline ::proto::CombatMember* CombatFinishNotify::mutable_members(int index) {
  // @@protoc_insertion_point(field_mutable:proto.CombatFinishNotify.members)
  return members_.Mutable(index);
}
inline ::proto::CombatMember* CombatFinishNotify::add_members() {
  // @@protoc_insertion_point(field_add:proto.CombatFinishNotify.members)
  return members_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::CombatMember >*
CombatFinishNotify::mutable_members() {
  // @@protoc_insertion_point(field_mutable_list:proto.CombatFinishNotify.members)
  return &members_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::CombatMember >&
CombatFinishNotify::members() const {
  // @@protoc_insertion_point(field_list:proto.CombatFinishNotify.members)
  return members_;
}

// -------------------------------------------------------------------

// CombatData

// required int32 x = 1;
inline bool CombatData::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CombatData::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CombatData::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CombatData::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline ::google::protobuf::int32 CombatData::x() const {
  // @@protoc_insertion_point(field_get:proto.CombatData.x)
  return x_;
}
inline void CombatData::set_x(::google::protobuf::int32 value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:proto.CombatData.x)
}

// required int32 z = 2;
inline bool CombatData::has_z() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CombatData::set_has_z() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CombatData::clear_has_z() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CombatData::clear_z() {
  z_ = 0;
  clear_has_z();
}
inline ::google::protobuf::int32 CombatData::z() const {
  // @@protoc_insertion_point(field_get:proto.CombatData.z)
  return z_;
}
inline void CombatData::set_z(::google::protobuf::int32 value) {
  set_has_z();
  z_ = value;
  // @@protoc_insertion_point(field_set:proto.CombatData.z)
}

// required int32 direction = 3;
inline bool CombatData::has_direction() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CombatData::set_has_direction() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CombatData::clear_has_direction() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CombatData::clear_direction() {
  direction_ = 0;
  clear_has_direction();
}
inline ::google::protobuf::int32 CombatData::direction() const {
  // @@protoc_insertion_point(field_get:proto.CombatData.direction)
  return direction_;
}
inline void CombatData::set_direction(::google::protobuf::int32 value) {
  set_has_direction();
  direction_ = value;
  // @@protoc_insertion_point(field_set:proto.CombatData.direction)
}

// -------------------------------------------------------------------

// CombatDataSync

// required uint64 id = 1;
inline bool CombatDataSync::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CombatDataSync::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CombatDataSync::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CombatDataSync::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 CombatDataSync::id() const {
  // @@protoc_insertion_point(field_get:proto.CombatDataSync.id)
  return id_;
}
inline void CombatDataSync::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:proto.CombatDataSync.id)
}

// required .proto.CombatData data = 2;
inline bool CombatDataSync::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CombatDataSync::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CombatDataSync::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CombatDataSync::clear_data() {
  if (data_ != NULL) data_->::proto::CombatData::Clear();
  clear_has_data();
}
inline const ::proto::CombatData& CombatDataSync::data() const {
  // @@protoc_insertion_point(field_get:proto.CombatDataSync.data)
  return data_ != NULL ? *data_
                         : *::proto::CombatData::internal_default_instance();
}
inline ::proto::CombatData* CombatDataSync::mutable_data() {
  set_has_data();
  if (data_ == NULL) {
    data_ = new ::proto::CombatData;
  }
  // @@protoc_insertion_point(field_mutable:proto.CombatDataSync.data)
  return data_;
}
inline ::proto::CombatData* CombatDataSync::release_data() {
  // @@protoc_insertion_point(field_release:proto.CombatDataSync.data)
  clear_has_data();
  ::proto::CombatData* temp = data_;
  data_ = NULL;
  return temp;
}
inline void CombatDataSync::set_allocated_data(::proto::CombatData* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.CombatDataSync.data)
}

// required uint64 robotId = 3;
inline bool CombatDataSync::has_robotid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CombatDataSync::set_has_robotid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CombatDataSync::clear_has_robotid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CombatDataSync::clear_robotid() {
  robotid_ = GOOGLE_ULONGLONG(0);
  clear_has_robotid();
}
inline ::google::protobuf::uint64 CombatDataSync::robotid() const {
  // @@protoc_insertion_point(field_get:proto.CombatDataSync.robotId)
  return robotid_;
}
inline void CombatDataSync::set_robotid(::google::protobuf::uint64 value) {
  set_has_robotid();
  robotid_ = value;
  // @@protoc_insertion_point(field_set:proto.CombatDataSync.robotId)
}

// -------------------------------------------------------------------

// CombatMembersSync

// required uint32 combatId = 1;
inline bool CombatMembersSync::has_combatid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CombatMembersSync::set_has_combatid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CombatMembersSync::clear_has_combatid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CombatMembersSync::clear_combatid() {
  combatid_ = 0u;
  clear_has_combatid();
}
inline ::google::protobuf::uint32 CombatMembersSync::combatid() const {
  // @@protoc_insertion_point(field_get:proto.CombatMembersSync.combatId)
  return combatid_;
}
inline void CombatMembersSync::set_combatid(::google::protobuf::uint32 value) {
  set_has_combatid();
  combatid_ = value;
  // @@protoc_insertion_point(field_set:proto.CombatMembersSync.combatId)
}

// repeated .proto.CombatMember members = 2;
inline int CombatMembersSync::members_size() const {
  return members_.size();
}
inline void CombatMembersSync::clear_members() {
  members_.Clear();
}
inline const ::proto::CombatMember& CombatMembersSync::members(int index) const {
  // @@protoc_insertion_point(field_get:proto.CombatMembersSync.members)
  return members_.Get(index);
}
inline ::proto::CombatMember* CombatMembersSync::mutable_members(int index) {
  // @@protoc_insertion_point(field_mutable:proto.CombatMembersSync.members)
  return members_.Mutable(index);
}
inline ::proto::CombatMember* CombatMembersSync::add_members() {
  // @@protoc_insertion_point(field_add:proto.CombatMembersSync.members)
  return members_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::CombatMember >*
CombatMembersSync::mutable_members() {
  // @@protoc_insertion_point(field_mutable_list:proto.CombatMembersSync.members)
  return &members_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::CombatMember >&
CombatMembersSync::members() const {
  // @@protoc_insertion_point(field_list:proto.CombatMembersSync.members)
  return members_;
}

// -------------------------------------------------------------------

// Position

// required int32 x = 1;
inline bool Position::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Position::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Position::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Position::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline ::google::protobuf::int32 Position::x() const {
  // @@protoc_insertion_point(field_get:proto.Position.x)
  return x_;
}
inline void Position::set_x(::google::protobuf::int32 value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:proto.Position.x)
}

// required int32 z = 2;
inline bool Position::has_z() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Position::set_has_z() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Position::clear_has_z() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Position::clear_z() {
  z_ = 0;
  clear_has_z();
}
inline ::google::protobuf::int32 Position::z() const {
  // @@protoc_insertion_point(field_get:proto.Position.z)
  return z_;
}
inline void Position::set_z(::google::protobuf::int32 value) {
  set_has_z();
  z_ = value;
  // @@protoc_insertion_point(field_set:proto.Position.z)
}

// required int32 direction = 3;
inline bool Position::has_direction() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Position::set_has_direction() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Position::clear_has_direction() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Position::clear_direction() {
  direction_ = 0;
  clear_has_direction();
}
inline ::google::protobuf::int32 Position::direction() const {
  // @@protoc_insertion_point(field_get:proto.Position.direction)
  return direction_;
}
inline void Position::set_direction(::google::protobuf::int32 value) {
  set_has_direction();
  direction_ = value;
  // @@protoc_insertion_point(field_set:proto.Position.direction)
}

// -------------------------------------------------------------------

// PositionPair

// required .proto.Position from = 1;
inline bool PositionPair::has_from() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PositionPair::set_has_from() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PositionPair::clear_has_from() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PositionPair::clear_from() {
  if (from_ != NULL) from_->::proto::Position::Clear();
  clear_has_from();
}
inline const ::proto::Position& PositionPair::from() const {
  // @@protoc_insertion_point(field_get:proto.PositionPair.from)
  return from_ != NULL ? *from_
                         : *::proto::Position::internal_default_instance();
}
inline ::proto::Position* PositionPair::mutable_from() {
  set_has_from();
  if (from_ == NULL) {
    from_ = new ::proto::Position;
  }
  // @@protoc_insertion_point(field_mutable:proto.PositionPair.from)
  return from_;
}
inline ::proto::Position* PositionPair::release_from() {
  // @@protoc_insertion_point(field_release:proto.PositionPair.from)
  clear_has_from();
  ::proto::Position* temp = from_;
  from_ = NULL;
  return temp;
}
inline void PositionPair::set_allocated_from(::proto::Position* from) {
  delete from_;
  from_ = from;
  if (from) {
    set_has_from();
  } else {
    clear_has_from();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PositionPair.from)
}

// required .proto.Position to = 2;
inline bool PositionPair::has_to() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PositionPair::set_has_to() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PositionPair::clear_has_to() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PositionPair::clear_to() {
  if (to_ != NULL) to_->::proto::Position::Clear();
  clear_has_to();
}
inline const ::proto::Position& PositionPair::to() const {
  // @@protoc_insertion_point(field_get:proto.PositionPair.to)
  return to_ != NULL ? *to_
                         : *::proto::Position::internal_default_instance();
}
inline ::proto::Position* PositionPair::mutable_to() {
  set_has_to();
  if (to_ == NULL) {
    to_ = new ::proto::Position;
  }
  // @@protoc_insertion_point(field_mutable:proto.PositionPair.to)
  return to_;
}
inline ::proto::Position* PositionPair::release_to() {
  // @@protoc_insertion_point(field_release:proto.PositionPair.to)
  clear_has_to();
  ::proto::Position* temp = to_;
  to_ = NULL;
  return temp;
}
inline void PositionPair::set_allocated_to(::proto::Position* to) {
  delete to_;
  to_ = to;
  if (to) {
    set_has_to();
  } else {
    clear_has_to();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.PositionPair.to)
}

// -------------------------------------------------------------------

// CombatPullSync

// required uint64 sourceId = 1;
inline bool CombatPullSync::has_sourceid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CombatPullSync::set_has_sourceid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CombatPullSync::clear_has_sourceid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CombatPullSync::clear_sourceid() {
  sourceid_ = GOOGLE_ULONGLONG(0);
  clear_has_sourceid();
}
inline ::google::protobuf::uint64 CombatPullSync::sourceid() const {
  // @@protoc_insertion_point(field_get:proto.CombatPullSync.sourceId)
  return sourceid_;
}
inline void CombatPullSync::set_sourceid(::google::protobuf::uint64 value) {
  set_has_sourceid();
  sourceid_ = value;
  // @@protoc_insertion_point(field_set:proto.CombatPullSync.sourceId)
}

// required uint64 targetId = 2;
inline bool CombatPullSync::has_targetid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CombatPullSync::set_has_targetid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CombatPullSync::clear_has_targetid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CombatPullSync::clear_targetid() {
  targetid_ = GOOGLE_ULONGLONG(0);
  clear_has_targetid();
}
inline ::google::protobuf::uint64 CombatPullSync::targetid() const {
  // @@protoc_insertion_point(field_get:proto.CombatPullSync.targetId)
  return targetid_;
}
inline void CombatPullSync::set_targetid(::google::protobuf::uint64 value) {
  set_has_targetid();
  targetid_ = value;
  // @@protoc_insertion_point(field_set:proto.CombatPullSync.targetId)
}

// required .proto.PositionPair source = 3;
inline bool CombatPullSync::has_source() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CombatPullSync::set_has_source() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CombatPullSync::clear_has_source() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CombatPullSync::clear_source() {
  if (source_ != NULL) source_->::proto::PositionPair::Clear();
  clear_has_source();
}
inline const ::proto::PositionPair& CombatPullSync::source() const {
  // @@protoc_insertion_point(field_get:proto.CombatPullSync.source)
  return source_ != NULL ? *source_
                         : *::proto::PositionPair::internal_default_instance();
}
inline ::proto::PositionPair* CombatPullSync::mutable_source() {
  set_has_source();
  if (source_ == NULL) {
    source_ = new ::proto::PositionPair;
  }
  // @@protoc_insertion_point(field_mutable:proto.CombatPullSync.source)
  return source_;
}
inline ::proto::PositionPair* CombatPullSync::release_source() {
  // @@protoc_insertion_point(field_release:proto.CombatPullSync.source)
  clear_has_source();
  ::proto::PositionPair* temp = source_;
  source_ = NULL;
  return temp;
}
inline void CombatPullSync::set_allocated_source(::proto::PositionPair* source) {
  delete source_;
  source_ = source;
  if (source) {
    set_has_source();
  } else {
    clear_has_source();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.CombatPullSync.source)
}

// required .proto.PositionPair target = 4;
inline bool CombatPullSync::has_target() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CombatPullSync::set_has_target() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CombatPullSync::clear_has_target() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CombatPullSync::clear_target() {
  if (target_ != NULL) target_->::proto::PositionPair::Clear();
  clear_has_target();
}
inline const ::proto::PositionPair& CombatPullSync::target() const {
  // @@protoc_insertion_point(field_get:proto.CombatPullSync.target)
  return target_ != NULL ? *target_
                         : *::proto::PositionPair::internal_default_instance();
}
inline ::proto::PositionPair* CombatPullSync::mutable_target() {
  set_has_target();
  if (target_ == NULL) {
    target_ = new ::proto::PositionPair;
  }
  // @@protoc_insertion_point(field_mutable:proto.CombatPullSync.target)
  return target_;
}
inline ::proto::PositionPair* CombatPullSync::release_target() {
  // @@protoc_insertion_point(field_release:proto.CombatPullSync.target)
  clear_has_target();
  ::proto::PositionPair* temp = target_;
  target_ = NULL;
  return temp;
}
inline void CombatPullSync::set_allocated_target(::proto::PositionPair* target) {
  delete target_;
  target_ = target;
  if (target) {
    set_has_target();
  } else {
    clear_has_target();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.CombatPullSync.target)
}

// -------------------------------------------------------------------

// CombatMemberLeave

// required uint64 id = 1;
inline bool CombatMemberLeave::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CombatMemberLeave::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CombatMemberLeave::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CombatMemberLeave::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 CombatMemberLeave::id() const {
  // @@protoc_insertion_point(field_get:proto.CombatMemberLeave.id)
  return id_;
}
inline void CombatMemberLeave::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:proto.CombatMemberLeave.id)
}

// -------------------------------------------------------------------

// CombatPickUpItemReq

// required uint64 id = 1;
inline bool CombatPickUpItemReq::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CombatPickUpItemReq::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CombatPickUpItemReq::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CombatPickUpItemReq::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 CombatPickUpItemReq::id() const {
  // @@protoc_insertion_point(field_get:proto.CombatPickUpItemReq.id)
  return id_;
}
inline void CombatPickUpItemReq::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:proto.CombatPickUpItemReq.id)
}

// required int32 x = 2;
inline bool CombatPickUpItemReq::has_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CombatPickUpItemReq::set_has_x() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CombatPickUpItemReq::clear_has_x() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CombatPickUpItemReq::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline ::google::protobuf::int32 CombatPickUpItemReq::x() const {
  // @@protoc_insertion_point(field_get:proto.CombatPickUpItemReq.x)
  return x_;
}
inline void CombatPickUpItemReq::set_x(::google::protobuf::int32 value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:proto.CombatPickUpItemReq.x)
}

// required int32 z = 3;
inline bool CombatPickUpItemReq::has_z() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CombatPickUpItemReq::set_has_z() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CombatPickUpItemReq::clear_has_z() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CombatPickUpItemReq::clear_z() {
  z_ = 0;
  clear_has_z();
}
inline ::google::protobuf::int32 CombatPickUpItemReq::z() const {
  // @@protoc_insertion_point(field_get:proto.CombatPickUpItemReq.z)
  return z_;
}
inline void CombatPickUpItemReq::set_z(::google::protobuf::int32 value) {
  set_has_z();
  z_ = value;
  // @@protoc_insertion_point(field_set:proto.CombatPickUpItemReq.z)
}

// required uint64 robotId = 4;
inline bool CombatPickUpItemReq::has_robotid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CombatPickUpItemReq::set_has_robotid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CombatPickUpItemReq::clear_has_robotid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CombatPickUpItemReq::clear_robotid() {
  robotid_ = GOOGLE_ULONGLONG(0);
  clear_has_robotid();
}
inline ::google::protobuf::uint64 CombatPickUpItemReq::robotid() const {
  // @@protoc_insertion_point(field_get:proto.CombatPickUpItemReq.robotId)
  return robotid_;
}
inline void CombatPickUpItemReq::set_robotid(::google::protobuf::uint64 value) {
  set_has_robotid();
  robotid_ = value;
  // @@protoc_insertion_point(field_set:proto.CombatPickUpItemReq.robotId)
}

// -------------------------------------------------------------------

// CombatPickUpItemRes

// required uint64 id = 1;
inline bool CombatPickUpItemRes::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CombatPickUpItemRes::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CombatPickUpItemRes::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CombatPickUpItemRes::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 CombatPickUpItemRes::id() const {
  // @@protoc_insertion_point(field_get:proto.CombatPickUpItemRes.id)
  return id_;
}
inline void CombatPickUpItemRes::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:proto.CombatPickUpItemRes.id)
}

// required int32 x = 2;
inline bool CombatPickUpItemRes::has_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CombatPickUpItemRes::set_has_x() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CombatPickUpItemRes::clear_has_x() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CombatPickUpItemRes::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline ::google::protobuf::int32 CombatPickUpItemRes::x() const {
  // @@protoc_insertion_point(field_get:proto.CombatPickUpItemRes.x)
  return x_;
}
inline void CombatPickUpItemRes::set_x(::google::protobuf::int32 value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:proto.CombatPickUpItemRes.x)
}

// required int32 z = 3;
inline bool CombatPickUpItemRes::has_z() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CombatPickUpItemRes::set_has_z() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CombatPickUpItemRes::clear_has_z() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CombatPickUpItemRes::clear_z() {
  z_ = 0;
  clear_has_z();
}
inline ::google::protobuf::int32 CombatPickUpItemRes::z() const {
  // @@protoc_insertion_point(field_get:proto.CombatPickUpItemRes.z)
  return z_;
}
inline void CombatPickUpItemRes::set_z(::google::protobuf::int32 value) {
  set_has_z();
  z_ = value;
  // @@protoc_insertion_point(field_set:proto.CombatPickUpItemRes.z)
}

// required uint64 robotId = 4;
inline bool CombatPickUpItemRes::has_robotid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CombatPickUpItemRes::set_has_robotid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CombatPickUpItemRes::clear_has_robotid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CombatPickUpItemRes::clear_robotid() {
  robotid_ = GOOGLE_ULONGLONG(0);
  clear_has_robotid();
}
inline ::google::protobuf::uint64 CombatPickUpItemRes::robotid() const {
  // @@protoc_insertion_point(field_get:proto.CombatPickUpItemRes.robotId)
  return robotid_;
}
inline void CombatPickUpItemRes::set_robotid(::google::protobuf::uint64 value) {
  set_has_robotid();
  robotid_ = value;
  // @@protoc_insertion_point(field_set:proto.CombatPickUpItemRes.robotId)
}

// -------------------------------------------------------------------

// CombatSetPositionRes

// required uint64 id = 1;
inline bool CombatSetPositionRes::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CombatSetPositionRes::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CombatSetPositionRes::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CombatSetPositionRes::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 CombatSetPositionRes::id() const {
  // @@protoc_insertion_point(field_get:proto.CombatSetPositionRes.id)
  return id_;
}
inline void CombatSetPositionRes::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:proto.CombatSetPositionRes.id)
}

// required int32 x = 2;
inline bool CombatSetPositionRes::has_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CombatSetPositionRes::set_has_x() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CombatSetPositionRes::clear_has_x() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CombatSetPositionRes::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline ::google::protobuf::int32 CombatSetPositionRes::x() const {
  // @@protoc_insertion_point(field_get:proto.CombatSetPositionRes.x)
  return x_;
}
inline void CombatSetPositionRes::set_x(::google::protobuf::int32 value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:proto.CombatSetPositionRes.x)
}

// required int32 z = 3;
inline bool CombatSetPositionRes::has_z() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CombatSetPositionRes::set_has_z() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CombatSetPositionRes::clear_has_z() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CombatSetPositionRes::clear_z() {
  z_ = 0;
  clear_has_z();
}
inline ::google::protobuf::int32 CombatSetPositionRes::z() const {
  // @@protoc_insertion_point(field_get:proto.CombatSetPositionRes.z)
  return z_;
}
inline void CombatSetPositionRes::set_z(::google::protobuf::int32 value) {
  set_has_z();
  z_ = value;
  // @@protoc_insertion_point(field_set:proto.CombatSetPositionRes.z)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace proto

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::proto::CMD> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::CMD>() {
  return ::proto::CMD_descriptor();
}
template <> struct is_proto_enum< ::proto::EC> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::EC>() {
  return ::proto::EC_descriptor();
}
template <> struct is_proto_enum< ::proto::VERSION> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::VERSION>() {
  return ::proto::VERSION_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_game_2eproto__INCLUDED
